State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 55 conflicts: 9 shift/reduce
State 96 conflicts: 24 shift/reduce
State 127 conflicts: 1 reduce/reduce
State 167 conflicts: 1 reduce/reduce
State 180 conflicts: 23 shift/reduce
State 204 conflicts: 1 reduce/reduce
State 223 conflicts: 1 reduce/reduce
State 225 conflicts: 1 shift/reduce
State 251 conflicts: 1 shift/reduce
State 305 conflicts: 2 shift/reduce
State 324 conflicts: 17 shift/reduce, 2 reduce/reduce
State 338 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | m_o_f macro_definitions

    8 m_o_f: annotations macro_or_native_function

    9 macro_or_native_function: native_function_definition ';'
   10                         | macro_definition

   11 namespace: %empty
   12          | T_NAMESPACE T_IDENT ';'

   13 prerequisites: %empty
   14              | prerequisites require

   15 require: T_REQUIRE T_STRING ';'

   16 global_declarations: %empty
   17                    | global_declarations constants ';'
   18                    | global_declarations global_var ';'

   19 scope: %empty
   20      | T_STATIC

   21 constants: T_CONST constant_list

   22 constant_list: constdef
   23              | constant_list ',' constdef

   24 $@3: %empty

   25 $@4: %empty

   26 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   27 constant_literal: simple_literal
   28                 | T_STRING

   29 variable_identifier: T_IDENT
   30                    | T_NUM
   31                    | T_STRING

   32 variable_reference: T_VARIABLE
   33                   | T_IDENT

   34 macro_declaration: T_IDENT
   35                  | T_FUNC

   36 macro_type: scope T_VOID
   37           | scope type_name

   38 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description

   39 global_var: scope var_decl

   40 var_decl: type_name variable_identifier assignment_expression
   41         | type_name variable_identifier

   42 optional_description: %empty
   43                     | T_STRING

   44 argument_list: %empty
   45              | non_empty_arguments

   46 non_empty_arguments: argument_declaration
   47                    | non_empty_arguments ',' argument_declaration

   48 parameter_list: %empty
   49               | non_empty_parameters

   50 non_empty_parameters: parameter
   51                     | non_empty_parameters ',' parameter
   52                     | error

   53 argument_declaration: type_name variable_identifier
   54                     | T_ELLIPSIS

   55 annotations: %empty
   56            | annotation annotations

   57 $@5: %empty

   58 annotation: T_ANNOTATION $@5 '(' annotation_values ')'

   59 annotation_value: T_IDENT T_ASSIGN T_STRING
   60                 | T_IDENT

   61 annotation_values: %empty
   62                  | annotation_value
   63                  | annotation_value ',' annotation_values

   64 $@6: %empty

   65 native_function_definition: T_NATIVE $@6 macrostart

   66 $@7: %empty

   67 macro_definition: $@7 macrostart block

   68 block: '{' var_decls stmntlist closing_brace

   69 var_decls: %empty
   70          | var_decls var_decl ';'

   71 statement: ';'
   72          | call_expression ';'
   73          | assignment ';'
   74          | if_expression
   75          | while
   76          | for_loop_expression
   77          | switch_expression
   78          | break
   79          | continue
   80          | return_expression ';'
   81          | goto_expression ';'
   82          | block
   83          | increment_expression ';'
   84          | label
   85          | var_decl
   86          | error ';'

   87 assignment: variable_reference assignment_expression

   88 $@8: %empty

   89 assignment: assignment_target '.' T_IDENT $@8 assignment_expression
   90           | assignment_target '[' binary_expression ']' assignment_expression
   91           | shorthand_assignment

   92 $@9: %empty

   93 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator expression

   94 assignment_target: variable_reference

   95 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   96                              | T_SH_ASSIGN_DIV
   97                              | T_SH_ASSIGN_MOD
   98                              | T_SH_ASSIGN_PLUS
   99                              | T_SH_ASSIGN_MINUS

  100 assignment_expression: T_ASSIGN expression

  101 expression: binary_expression
  102           | range_expression

  103 range_expression: %empty

  104 $@10: %empty

  105 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment

  106 range_increment: %empty
  107                | T_DOTDOT binary_expression

  108 minusminus_plusplus: T_MINUSMINUS
  109                    | T_PLUSPLUS

  110 increment_expression: variable_reference minusminus_plusplus

  111 simple_term: value
  112            | call_expression
  113            | constructor_expression

  114 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  115 unary_expression: '!' binary_expression
  116                 | '~' binary_expression
  117                 | '+' binary_expression
  118                 | '-' variable_reference

  119 binary_expression: simple_term
  120                  | type_cast simple_term
  121                  | binary_expression '.' T_IDENT
  122                  | unary_expression
  123                  | binary_expression '[' expression ']'
  124                  | binary_expression '~' binary_expression
  125                  | binary_expression T_NMATCH binary_expression
  126                  | binary_expression '&' binary_expression
  127                  | binary_expression '|' binary_expression
  128                  | binary_expression '+' binary_expression
  129                  | binary_expression '^' binary_expression
  130                  | binary_expression '-' binary_expression
  131                  | binary_expression '*' binary_expression
  132                  | binary_expression '/' binary_expression
  133                  | binary_expression '%' binary_expression
  134                  | binary_expression T_SHIFT_LEFT binary_expression
  135                  | binary_expression T_SHIFT_RIGHT binary_expression
  136                  | binary_expression T_POWER_TO binary_expression
  137                  | binary_expression T_AND binary_expression
  138                  | binary_expression T_OR binary_expression
  139                  | binary_expression '<' binary_expression
  140                  | binary_expression '>' binary_expression
  141                  | binary_expression T_LE binary_expression
  142                  | binary_expression T_GE binary_expression
  143                  | binary_expression T_EQ binary_expression
  144                  | binary_expression T_NE binary_expression
  145                  | '(' binary_expression ')'
  146                  | variable_reference assignment_expression

  147 condition: '(' binary_expression ')'
  148          | '(' binary_expression

  149 value: T_VARIABLE
  150      | string
  151      | simple_literal
  152      | T_IDENT

  153 string: T_STRING
  154       | string T_STRING

  155 break: T_BREAK opt_num ';'

  156 continue: T_CONTINUE opt_num ';'

  157 return_expression: T_RETURN optional_bterm

  158 optional_bterm: %empty
  159               | binary_expression

  160 opt_num: %empty
  161        | T_NUM

  162 case_clauses: %empty
  163             | case_clause case_clauses

  164 case_clause: case_selector stmntlist

  165 case_selector: T_CASE case_condition ':'
  166              | T_DEFAULT ':'

  167 case_condition: integer_literal
  168               | T_STRING
  169               | T_NUM T_DOTDOT T_NUM

  170 label: T_IDENT ':'

  171 goto_expression: T_GOTO T_IDENT

  172 $@11: %empty

  173 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses '}'

  174 $@12: %empty

  175 for_loop_expression: T_FOR for_clause $@12 local_block

  176 for_increment: increment_expression
  177              | shorthand_assignment

  178 $@13: %empty

  179 $@14: %empty

  180 $@15: %empty

  181 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'

  182 opt_for_initializer: %empty

  183 $@16: %empty

  184 opt_for_initializer: type_name variable_identifier $@16 assignment_expression

  185 for_clause: for_to_clause
  186           | in_clause
  187           | error

  188 $@17: %empty

  189 in_clause: '(' type_name variable_identifier $@17 ':' expression ')'

  190 $@18: %empty

  191 $@19: %empty

  192 while: T_WHILE $@18 condition $@19 local_block

  193 local_block: statement
  194            | '{' stmntlist closing_brace

  195 closing_brace: '}'

  196 $@20: %empty

  197 $@21: %empty

  198 if_expression: T_IF condition $@20 local_block $@21 else_clause

  199 else_clause: %empty

  200 $@22: %empty

  201 else_clause: T_ELSE $@22 local_block

  202 stmntlist: %empty
  203          | statement stmntlist

  204 closing_paren: ')'

  205 @23: %empty

  206 call_expression: T_FUNC '(' @23 parameter_list closing_paren

  207 @24: %empty

  208 call_expression: function_id_or_pointer '(' @24 parameter_list closing_paren
  209                | array_constructor
  210                | map_constructor

  211 @25: %empty

  212 array_constructor: '[' @25 parameter_list ']'

  213 @26: %empty

  214 map_constructor: '{' @26 optional_map_associates '}'

  215 optional_map_associates: %empty
  216                        | map_associates

  217 map_associates: map_associate
  218               | map_associates ',' map_associate

  219 @27: %empty

  220 map_associate: T_STRING ':' @27 value

  221 function_id_or_pointer: '*' variable_reference
  222                       | T_IDENT

  223 parameter: expression
  224          | T_ELLIPSIS expression

  225 type_cast: '(' type_name ')'

  226 type_name: T_TYPE_IDENTIFIER
  227          | T_TYPE_IDENTIFIER array_size

  228 array_size: '[' ']'
  229           | '[' T_NUM ']'

  230 boolean_literal: T_TRUE
  231                | T_FALSE

  232 float_literal: T_FLOATING_POINT_NUMBER

  233 integer_literal: T_NUM
  234                | '-' T_NUM

  235 character_literal: T_CHARACTER

  236 simple_literal: integer_literal
  237               | float_literal
  238               | character_literal
  239               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 115
    '%' (37) 133
    '&' (38) 126
    '(' (40) 38 58 114 145 147 148 173 181 189 206 208 225
    ')' (41) 38 58 114 145 147 173 181 189 204 225
    '*' (42) 131 221
    '+' (43) 117 128
    ',' (44) 23 47 51 63 218
    '-' (45) 118 130 234
    '.' (46) 89 121
    '/' (47) 132
    ':' (58) 165 166 170 189 220
    ';' (59) 9 12 15 17 18 70 71 72 73 80 81 83 86 155 156 181
    '<' (60) 139
    '>' (62) 140
    '[' (91) 90 123 212 228 229
    ']' (93) 90 123 212 228 229
    '^' (94) 129
    '{' (123) 68 173 194 214
    '|' (124) 127
    '}' (125) 173 195 214
    '~' (126) 116 124
    error (256) 52 86 187
    T_NAMESPACE (258) 12
    T_REQUIRE (259) 15
    T_FOR (260) 175
    T_ANNOTATION (261) 58
    T_NATIVE (262) 65
    T_NEW (263) 114
    T_STATIC (264) 20
    T_VOID (265) 36
    T_TYPE_IDENTIFIER (266) 114 226 227
    T_ELLIPSIS (267) 54 224
    T_IDENT (268) 12 29 33 34 59 60 89 121 152 170 171 222
    T_NUM (269) 30 161 169 229 233 234
    T_FLOATING_POINT_NUMBER (270) 232
    T_STRING (271) 15 28 31 43 59 153 154 168 220
    T_CHARACTER (272) 235
    T_CONST (273) 21
    T_TRUE (274) 230
    T_FALSE (275) 231
    T_FUNC (276) 35 206
    T_DOTDOT (277) 105 107 169
    T_PLUSPLUS (278) 109
    T_MINUSMINUS (279) 108
    T_IF (280) 198
    T_ELSE (281) 201
    T_WHILE (282) 192
    T_GOTO (283) 171
    T_SH_ASSIGN_PLUS (284) 98
    T_SH_ASSIGN_MINUS (285) 99
    T_SH_ASSIGN_MULT (286) 95
    T_SH_ASSIGN_DIV (287) 96
    T_SH_ASSIGN_MOD (288) 97
    T_SWITCH (289) 173
    T_CASE (290) 165
    T_DEFAULT (291) 166
    T_BREAK (292) 155
    T_CONTINUE (293) 156
    T_RETURN (294) 157
    T_VARIABLE (295) 32 149
    T_NMATCH (296) 125
    T_ASSIGN (297) 26 59 100
    T_NE (298) 144
    T_EQ (299) 143
    T_SHIFT_LEFT (300) 134
    T_SHIFT_RIGHT (301) 135
    T_OR (302) 138
    T_AND (303) 137
    T_LE (304) 141
    T_GE (305) 142
    T_POWER_TO (306) 136


Nonterminals, with rules where they appear

    $accept (74)
        on left: 0
    file_structure (75)
        on left: 3
        on right: 0
    $@1 (76)
        on left: 1
        on right: 3
    $@2 (77)
        on left: 2
        on right: 3
    header_delimiter (78)
        on left: 4 5
        on right: 3
    macro_definitions (79)
        on left: 6 7
        on right: 3 7
    m_o_f (80)
        on left: 8
        on right: 7
    macro_or_native_function (81)
        on left: 9 10
        on right: 8
    namespace (82)
        on left: 11 12
        on right: 3
    prerequisites (83)
        on left: 13 14
        on right: 3 14
    require (84)
        on left: 15
        on right: 14
    global_declarations (85)
        on left: 16 17 18
        on right: 3 17 18
    scope (86)
        on left: 19 20
        on right: 36 37 39
    constants (87)
        on left: 21
        on right: 17
    constant_list (88)
        on left: 22 23
        on right: 21 23
    constdef (89)
        on left: 26
        on right: 22 23
    $@3 (90)
        on left: 24
        on right: 26
    $@4 (91)
        on left: 25
        on right: 26
    constant_literal (92)
        on left: 27 28
        on right: 26
    variable_identifier (93)
        on left: 29 30 31
        on right: 26 40 41 53 184 189
    variable_reference (94)
        on left: 32 33
        on right: 87 93 94 110 118 146 221
    macro_declaration (95)
        on left: 34 35
        on right: 38
    macro_type (96)
        on left: 36 37
        on right: 38
    macrostart (97)
        on left: 38
        on right: 65 67
    global_var (98)
        on left: 39
        on right: 18
    var_decl (99)
        on left: 40 41
        on right: 39 70 85
    optional_description (100)
        on left: 42 43
        on right: 38
    argument_list (101)
        on left: 44 45
        on right: 38
    non_empty_arguments (102)
        on left: 46 47
        on right: 45 47
    parameter_list (103)
        on left: 48 49
        on right: 206 208 212
    non_empty_parameters (104)
        on left: 50 51 52
        on right: 49 51
    argument_declaration (105)
        on left: 53 54
        on right: 46 47
    annotations (106)
        on left: 55 56
        on right: 8 56
    annotation (107)
        on left: 58
        on right: 56
    $@5 (108)
        on left: 57
        on right: 58
    annotation_value (109)
        on left: 59 60
        on right: 62 63
    annotation_values (110)
        on left: 61 62 63
        on right: 58 63
    native_function_definition (111)
        on left: 65
        on right: 9
    $@6 (112)
        on left: 64
        on right: 65
    macro_definition (113)
        on left: 67
        on right: 10
    $@7 (114)
        on left: 66
        on right: 67
    block (115)
        on left: 68
        on right: 67 82
    var_decls (116)
        on left: 69 70
        on right: 68 70
    statement (117)
        on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
        on right: 193 203
    assignment (118)
        on left: 87 89 90 91
        on right: 73
    $@8 (119)
        on left: 88
        on right: 89
    shorthand_assignment (120)
        on left: 93
        on right: 91 177
    $@9 (121)
        on left: 92
        on right: 93
    assignment_target (122)
        on left: 94
        on right: 89 90
    shorthand_assignment_operator (123)
        on left: 95 96 97 98 99
        on right: 93
    assignment_expression (124)
        on left: 100
        on right: 40 87 89 90 146 184
    expression (125)
        on left: 101 102
        on right: 93 100 123 189 223 224
    range_expression (126)
        on left: 103 105
        on right: 102
    $@10 (127)
        on left: 104
        on right: 105
    range_increment (128)
        on left: 106 107
        on right: 105
    minusminus_plusplus (129)
        on left: 108 109
        on right: 110
    increment_expression (130)
        on left: 110
        on right: 83 176
    simple_term (131)
        on left: 111 112 113
        on right: 119 120
    constructor_expression (132)
        on left: 114
        on right: 113
    unary_expression (133)
        on left: 115 116 117 118
        on right: 122
    binary_expression (134)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146
        on right: 90 101 105 107 115 116 117 121 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 147 148 159 181
    condition (135)
        on left: 147 148
        on right: 192 198
    value (136)
        on left: 149 150 151 152
        on right: 111 173 220
    string (137)
        on left: 153 154
        on right: 150 154
    break (138)
        on left: 155
        on right: 78
    continue (139)
        on left: 156
        on right: 79
    return_expression (140)
        on left: 157
        on right: 80
    optional_bterm (141)
        on left: 158 159
        on right: 157
    opt_num (142)
        on left: 160 161
        on right: 155 156
    case_clauses (143)
        on left: 162 163
        on right: 163 173
    case_clause (144)
        on left: 164
        on right: 163
    case_selector (145)
        on left: 165 166
        on right: 164
    case_condition (146)
        on left: 167 168 169
        on right: 165
    label (147)
        on left: 170
        on right: 84
    goto_expression (148)
        on left: 171
        on right: 81
    switch_expression (149)
        on left: 173
        on right: 77
    $@11 (150)
        on left: 172
        on right: 173
    for_loop_expression (151)
        on left: 175
        on right: 76
    $@12 (152)
        on left: 174
        on right: 175
    for_increment (153)
        on left: 176 177
        on right: 181
    for_to_clause (154)
        on left: 181
        on right: 185
    $@13 (155)
        on left: 178
        on right: 181
    $@14 (156)
        on left: 179
        on right: 181
    $@15 (157)
        on left: 180
        on right: 181
    opt_for_initializer (158)
        on left: 182 184
        on right: 181
    $@16 (159)
        on left: 183
        on right: 184
    for_clause (160)
        on left: 185 186 187
        on right: 175
    in_clause (161)
        on left: 189
        on right: 186
    $@17 (162)
        on left: 188
        on right: 189
    while (163)
        on left: 192
        on right: 75
    $@18 (164)
        on left: 190
        on right: 192
    $@19 (165)
        on left: 191
        on right: 192
    local_block (166)
        on left: 193 194
        on right: 175 192 198 201
    closing_brace (167)
        on left: 195
        on right: 68 194
    if_expression (168)
        on left: 198
        on right: 74
    $@20 (169)
        on left: 196
        on right: 198
    $@21 (170)
        on left: 197
        on right: 198
    else_clause (171)
        on left: 199 201
        on right: 198
    $@22 (172)
        on left: 200
        on right: 201
    stmntlist (173)
        on left: 202 203
        on right: 68 164 194 203
    closing_paren (174)
        on left: 204
        on right: 206 208
    call_expression (175)
        on left: 206 208 209 210
        on right: 72 112
    @23 (176)
        on left: 205
        on right: 206
    @24 (177)
        on left: 207
        on right: 208
    array_constructor (178)
        on left: 212
        on right: 209
    @25 (179)
        on left: 211
        on right: 212
    map_constructor (180)
        on left: 214
        on right: 210
    @26 (181)
        on left: 213
        on right: 214
    optional_map_associates (182)
        on left: 215 216
        on right: 214
    map_associates (183)
        on left: 217 218
        on right: 216 218
    map_associate (184)
        on left: 220
        on right: 217 218
    @27 (185)
        on left: 219
        on right: 220
    function_id_or_pointer (186)
        on left: 221 222
        on right: 208
    parameter (187)
        on left: 223 224
        on right: 50 51
    type_cast (188)
        on left: 225
        on right: 120
    type_name (189)
        on left: 226 227
        on right: 37 40 41 53 184 189 225
    array_size (190)
        on left: 228 229
        on right: 227
    boolean_literal (191)
        on left: 230 231
        on right: 239
    float_literal (192)
        on left: 232
        on right: 237
    integer_literal (193)
        on left: 233 234
        on right: 167 236
    character_literal (194)
        on left: 235
        on right: 238
    simple_literal (195)
        on left: 236 237 238 239
        on right: 27 151


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 11 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

   12 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites global_declarations $@2 header_delimiter macro_definitions

    $default  reduce using rule 13 (prerequisites)

    prerequisites  go to state 7


State 6

   12 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . global_declarations $@2 header_delimiter macro_definitions
   14 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 16 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

   12 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 12 (namespace)


State 9

   15 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   14 prerequisites: prerequisites require .

    $default  reduce using rule 14 (prerequisites)


State 11

    3 file_structure: $@1 namespace prerequisites global_declarations . $@2 header_delimiter macro_definitions
   17 global_declarations: global_declarations . constants ';'
   18                    | global_declarations . global_var ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14

    T_STATIC           [reduce using rule 2 ($@2)]
    T_TYPE_IDENTIFIER  reduce using rule 2 ($@2)
    T_TYPE_IDENTIFIER  [reduce using rule 19 (scope)]
    $default           reduce using rule 2 ($@2)

    $@2         go to state 15
    scope       go to state 16
    constants   go to state 17
    global_var  go to state 18


State 12

   15 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 19


State 13

   20 scope: T_STATIC .

    $default  reduce using rule 20 (scope)


State 14

   21 constants: T_CONST . constant_list

    $default  reduce using rule 24 ($@3)

    constant_list  go to state 20
    constdef       go to state 21
    $@3            go to state 22


State 15

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 . header_delimiter macro_definitions

    '!'  shift, and go to state 23

    $default  reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 24


State 16

   39 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    var_decl   go to state 26
    type_name  go to state 27


State 17

   17 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 28


State 18

   18 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 29


State 19

   15 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 15 (require)


State 20

   21 constants: T_CONST constant_list .
   23 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 30

    $default  reduce using rule 21 (constants)


State 21

   22 constant_list: constdef .

    $default  reduce using rule 22 (constant_list)


State 22

   26 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 34


State 23

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 24

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter . macro_definitions

    T_ANNOTATION  shift, and go to state 35

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 55 (annotations)

    macro_definitions  go to state 36
    m_o_f              go to state 37
    annotations        go to state 38
    annotation         go to state 39


State 25

  226 type_name: T_TYPE_IDENTIFIER .
  227          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 40

    $default  reduce using rule 226 (type_name)

    array_size  go to state 41


State 26

   39 global_var: scope var_decl .

    $default  reduce using rule 39 (global_var)


State 27

   40 var_decl: type_name . variable_identifier assignment_expression
   41         | type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 42


State 28

   17 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 17 (global_declarations)


State 29

   18 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 18 (global_declarations)


State 30

   23 constant_list: constant_list ',' . constdef

    $default  reduce using rule 24 ($@3)

    constdef  go to state 43
    $@3       go to state 22


State 31

   29 variable_identifier: T_IDENT .

    $default  reduce using rule 29 (variable_identifier)


State 32

   30 variable_identifier: T_NUM .

    $default  reduce using rule 30 (variable_identifier)


State 33

   31 variable_identifier: T_STRING .

    $default  reduce using rule 31 (variable_identifier)


State 34

   26 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 44


State 35

   58 annotation: T_ANNOTATION . $@5 '(' annotation_values ')'

    $default  reduce using rule 57 ($@5)

    $@5  go to state 45


State 36

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 37

    7 macro_definitions: m_o_f . macro_definitions

    T_ANNOTATION  shift, and go to state 35

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 55 (annotations)

    macro_definitions  go to state 46
    m_o_f              go to state 37
    annotations        go to state 38
    annotation         go to state 39


State 38

    8 m_o_f: annotations . macro_or_native_function

    T_NATIVE  shift, and go to state 47

    $default  reduce using rule 66 ($@7)

    macro_or_native_function    go to state 48
    native_function_definition  go to state 49
    macro_definition            go to state 50
    $@7                         go to state 51


State 39

   56 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 35

    $default  reduce using rule 55 (annotations)

    annotations  go to state 52
    annotation   go to state 39


State 40

  228 array_size: '[' . ']'
  229           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 53
    ']'    shift, and go to state 54


State 41

  227 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 227 (type_name)


State 42

   40 var_decl: type_name variable_identifier . assignment_expression
   41         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 55

    $default  reduce using rule 41 (var_decl)

    assignment_expression  go to state 56


State 43

   23 constant_list: constant_list ',' constdef .

    $default  reduce using rule 23 (constant_list)


State 44

   26 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 59
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    '-'                      shift, and go to state 63

    constant_literal   go to state 64
    boolean_literal    go to state 65
    float_literal      go to state 66
    integer_literal    go to state 67
    character_literal  go to state 68
    simple_literal     go to state 69


State 45

   58 annotation: T_ANNOTATION $@5 . '(' annotation_values ')'

    '('  shift, and go to state 70


State 46

    7 macro_definitions: m_o_f macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 47

   65 native_function_definition: T_NATIVE . $@6 macrostart

    $default  reduce using rule 64 ($@6)

    $@6  go to state 71


State 48

    8 m_o_f: annotations macro_or_native_function .

    $default  reduce using rule 8 (m_o_f)


State 49

    9 macro_or_native_function: native_function_definition . ';'

    ';'  shift, and go to state 72


State 50

   10 macro_or_native_function: macro_definition .

    $default  reduce using rule 10 (macro_or_native_function)


State 51

   67 macro_definition: $@7 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 19 (scope)

    scope       go to state 73
    macro_type  go to state 74
    macrostart  go to state 75


State 52

   56 annotations: annotation annotations .

    $default  reduce using rule 56 (annotations)


State 53

  229 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 76


State 54

  228 array_size: '[' ']' .

    $default  reduce using rule 228 (array_size)


State 55

  100 assignment_expression: T_ASSIGN . expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    T_IDENT     [reduce using rule 103 (range_expression)]
    T_FUNC      [reduce using rule 103 (range_expression)]
    T_VARIABLE  [reduce using rule 103 (range_expression)]
    '~'         [reduce using rule 103 (range_expression)]
    '+'         [reduce using rule 103 (range_expression)]
    '-'         [reduce using rule 103 (range_expression)]
    '*'         [reduce using rule 103 (range_expression)]
    '['         [reduce using rule 103 (range_expression)]
    '{'         [reduce using rule 103 (range_expression)]
    $default    reduce using rule 103 (range_expression)

    variable_reference      go to state 90
    expression              go to state 91
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 56

   40 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 40 (var_decl)


State 57

  233 integer_literal: T_NUM .

    $default  reduce using rule 233 (integer_literal)


State 58

  232 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 232 (float_literal)


State 59

   28 constant_literal: T_STRING .

    $default  reduce using rule 28 (constant_literal)


State 60

  235 character_literal: T_CHARACTER .

    $default  reduce using rule 235 (character_literal)


State 61

  230 boolean_literal: T_TRUE .

    $default  reduce using rule 230 (boolean_literal)


State 62

  231 boolean_literal: T_FALSE .

    $default  reduce using rule 231 (boolean_literal)


State 63

  234 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 105


State 64

   26 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 25 ($@4)

    $@4  go to state 106


State 65

  239 simple_literal: boolean_literal .

    $default  reduce using rule 239 (simple_literal)


State 66

  237 simple_literal: float_literal .

    $default  reduce using rule 237 (simple_literal)


State 67

  236 simple_literal: integer_literal .

    $default  reduce using rule 236 (simple_literal)


State 68

  238 simple_literal: character_literal .

    $default  reduce using rule 238 (simple_literal)


State 69

   27 constant_literal: simple_literal .

    $default  reduce using rule 27 (constant_literal)


State 70

   58 annotation: T_ANNOTATION $@5 '(' . annotation_values ')'

    T_IDENT  shift, and go to state 107

    $default  reduce using rule 61 (annotation_values)

    annotation_value   go to state 108
    annotation_values  go to state 109


State 71

   65 native_function_definition: T_NATIVE $@6 . macrostart

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 19 (scope)

    scope       go to state 73
    macro_type  go to state 74
    macrostart  go to state 110


State 72

    9 macro_or_native_function: native_function_definition ';' .

    $default  reduce using rule 9 (macro_or_native_function)


State 73

   36 macro_type: scope . T_VOID
   37           | scope . type_name

    T_VOID             shift, and go to state 111
    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 112


State 74

   38 macrostart: macro_type . macro_declaration '(' argument_list ')' optional_description

    T_IDENT  shift, and go to state 113
    T_FUNC   shift, and go to state 114

    macro_declaration  go to state 115


State 75

   67 macro_definition: $@7 macrostart . block

    '{'  shift, and go to state 116

    block  go to state 117


State 76

  229 array_size: '[' T_NUM ']' .

    $default  reduce using rule 229 (array_size)


State 77

  114 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 118


State 78

   33 variable_reference: T_IDENT .
  152 value: T_IDENT .
  222 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 33 (variable_reference)
    '('       reduce using rule 222 (function_id_or_pointer)
    $default  reduce using rule 152 (value)


State 79

  153 string: T_STRING .

    $default  reduce using rule 153 (string)


State 80

  206 call_expression: T_FUNC . '(' @23 parameter_list closing_paren

    '('  shift, and go to state 119


State 81

   32 variable_reference: T_VARIABLE .
  149 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 32 (variable_reference)
    $default  reduce using rule 149 (value)


State 82

  115 unary_expression: '!' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 120
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 83

  116 unary_expression: '~' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 121
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 84

  117 unary_expression: '+' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 122
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 85

  118 unary_expression: '-' . variable_reference
  234 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 123
    T_NUM       shift, and go to state 105
    T_VARIABLE  shift, and go to state 124

    variable_reference  go to state 125


State 86

  221 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 123
    T_VARIABLE  shift, and go to state 124

    variable_reference  go to state 126


State 87

  212 array_constructor: '[' . @25 parameter_list ']'

    $default  reduce using rule 211 (@25)

    @25  go to state 127


State 88

  145 binary_expression: '(' . binary_expression ')'
  225 type_cast: '(' . type_name ')'

    T_NEW                    shift, and go to state 77
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 128
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    type_name               go to state 129
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 89

  214 map_constructor: '{' . @26 optional_map_associates '}'

    $default  reduce using rule 213 (@26)

    @26  go to state 130


State 90

  146 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 55

    assignment_expression  go to state 131


State 91

  100 assignment_expression: T_ASSIGN expression .

    $default  reduce using rule 100 (assignment_expression)


State 92

  102 expression: range_expression .

    $default  reduce using rule 102 (expression)


State 93

  119 binary_expression: simple_term .

    $default  reduce using rule 119 (binary_expression)


State 94

  113 simple_term: constructor_expression .

    $default  reduce using rule 113 (simple_term)


State 95

  122 binary_expression: unary_expression .

    $default  reduce using rule 122 (binary_expression)


State 96

  101 expression: binary_expression .
  105 range_expression: binary_expression . T_DOTDOT binary_expression $@10 range_increment
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 132
    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_DOTDOT       [reduce using rule 101 (expression)]
    T_NMATCH       [reduce using rule 101 (expression)]
    T_NE           [reduce using rule 101 (expression)]
    T_EQ           [reduce using rule 101 (expression)]
    T_SHIFT_LEFT   [reduce using rule 101 (expression)]
    T_SHIFT_RIGHT  [reduce using rule 101 (expression)]
    T_OR           [reduce using rule 101 (expression)]
    T_AND          [reduce using rule 101 (expression)]
    T_LE           [reduce using rule 101 (expression)]
    T_GE           [reduce using rule 101 (expression)]
    T_POWER_TO     [reduce using rule 101 (expression)]
    '&'            [reduce using rule 101 (expression)]
    '|'            [reduce using rule 101 (expression)]
    '^'            [reduce using rule 101 (expression)]
    '~'            [reduce using rule 101 (expression)]
    '<'            [reduce using rule 101 (expression)]
    '>'            [reduce using rule 101 (expression)]
    '+'            [reduce using rule 101 (expression)]
    '-'            [reduce using rule 101 (expression)]
    '*'            [reduce using rule 101 (expression)]
    '/'            [reduce using rule 101 (expression)]
    '%'            [reduce using rule 101 (expression)]
    '['            [reduce using rule 101 (expression)]
    '.'            [reduce using rule 101 (expression)]
    $default       reduce using rule 101 (expression)


State 97

  111 simple_term: value .

    $default  reduce using rule 111 (simple_term)


State 98

  150 value: string .
  154 string: string . T_STRING

    T_STRING  shift, and go to state 156

    $default  reduce using rule 150 (value)


State 99

  112 simple_term: call_expression .

    $default  reduce using rule 112 (simple_term)


State 100

  209 call_expression: array_constructor .

    $default  reduce using rule 209 (call_expression)


State 101

  210 call_expression: map_constructor .

    $default  reduce using rule 210 (call_expression)


State 102

  208 call_expression: function_id_or_pointer . '(' @24 parameter_list closing_paren

    '('  shift, and go to state 157


State 103

  120 binary_expression: type_cast . simple_term

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 158
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 159
    '-'                      shift, and go to state 63
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '{'                      shift, and go to state 89

    simple_term             go to state 160
    constructor_expression  go to state 94
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 104

  151 value: simple_literal .

    $default  reduce using rule 151 (value)


State 105

  234 integer_literal: '-' T_NUM .

    $default  reduce using rule 234 (integer_literal)


State 106

   26 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 26 (constdef)


State 107

   59 annotation_value: T_IDENT . T_ASSIGN T_STRING
   60                 | T_IDENT .

    T_ASSIGN  shift, and go to state 161

    $default  reduce using rule 60 (annotation_value)


State 108

   62 annotation_values: annotation_value .
   63                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 162

    $default  reduce using rule 62 (annotation_values)


State 109

   58 annotation: T_ANNOTATION $@5 '(' annotation_values . ')'

    ')'  shift, and go to state 163


State 110

   65 native_function_definition: T_NATIVE $@6 macrostart .

    $default  reduce using rule 65 (native_function_definition)


State 111

   36 macro_type: scope T_VOID .

    $default  reduce using rule 36 (macro_type)


State 112

   37 macro_type: scope type_name .

    $default  reduce using rule 37 (macro_type)


State 113

   34 macro_declaration: T_IDENT .

    $default  reduce using rule 34 (macro_declaration)


State 114

   35 macro_declaration: T_FUNC .

    $default  reduce using rule 35 (macro_declaration)


State 115

   38 macrostart: macro_type macro_declaration . '(' argument_list ')' optional_description

    '('  shift, and go to state 164


State 116

   68 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 69 (var_decls)

    var_decls  go to state 165


State 117

   67 macro_definition: $@7 macrostart block .

    $default  reduce using rule 67 (macro_definition)


State 118

  114 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 166


State 119

  206 call_expression: T_FUNC '(' . @23 parameter_list closing_paren

    $default  reduce using rule 205 (@23)

    @23  go to state 167


State 120

  115 unary_expression: '!' binary_expression .
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 115 (unary_expression)


State 121

  116 unary_expression: '~' binary_expression .
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 116 (unary_expression)


State 122

  117 unary_expression: '+' binary_expression .
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 117 (unary_expression)


State 123

   33 variable_reference: T_IDENT .

    $default  reduce using rule 33 (variable_reference)


State 124

   32 variable_reference: T_VARIABLE .

    $default  reduce using rule 32 (variable_reference)


State 125

  118 unary_expression: '-' variable_reference .

    $default  reduce using rule 118 (unary_expression)


State 126

  221 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 221 (function_id_or_pointer)


State 127

  212 array_constructor: '[' @25 . parameter_list ']'

    error                    shift, and go to state 168
    T_NEW                    shift, and go to state 77
    T_ELLIPSIS               shift, and go to state 169
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    ','  reduce using rule 103 (range_expression)
    ']'  reduce using rule 48 (parameter_list)
    ']'  [reduce using rule 103 (range_expression)]

    variable_reference      go to state 90
    parameter_list          go to state 170
    non_empty_parameters    go to state 171
    expression              go to state 172
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    parameter               go to state 173
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 128

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  145                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155
    ')'            shift, and go to state 174


State 129

  225 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 175


State 130

  214 map_constructor: '{' @26 . optional_map_associates '}'

    T_STRING  shift, and go to state 176

    $default  reduce using rule 215 (optional_map_associates)

    optional_map_associates  go to state 177
    map_associates           go to state 178
    map_associate            go to state 179


State 131

  146 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 146 (binary_expression)


State 132

  105 range_expression: binary_expression T_DOTDOT . binary_expression $@10 range_increment

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 180
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 133

  125 binary_expression: binary_expression T_NMATCH . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 181
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 134

  144 binary_expression: binary_expression T_NE . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 182
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 135

  143 binary_expression: binary_expression T_EQ . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 183
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 136

  134 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 184
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 137

  135 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 185
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 138

  138 binary_expression: binary_expression T_OR . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 186
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 139

  137 binary_expression: binary_expression T_AND . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 187
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 140

  141 binary_expression: binary_expression T_LE . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 188
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 141

  142 binary_expression: binary_expression T_GE . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 189
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 142

  136 binary_expression: binary_expression T_POWER_TO . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 190
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 143

  126 binary_expression: binary_expression '&' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 191
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 144

  127 binary_expression: binary_expression '|' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 192
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 145

  129 binary_expression: binary_expression '^' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 193
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 146

  124 binary_expression: binary_expression '~' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 194
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 147

  139 binary_expression: binary_expression '<' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 195
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 148

  140 binary_expression: binary_expression '>' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 196
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 149

  128 binary_expression: binary_expression '+' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 197
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 150

  130 binary_expression: binary_expression '-' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 198
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 151

  131 binary_expression: binary_expression '*' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 199
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 152

  132 binary_expression: binary_expression '/' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 200
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 153

  133 binary_expression: binary_expression '%' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 201
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 154

  123 binary_expression: binary_expression '[' . expression ']'

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 90
    expression              go to state 202
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 155

  121 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 203


State 156

  154 string: string T_STRING .

    $default  reduce using rule 154 (string)


State 157

  208 call_expression: function_id_or_pointer '(' . @24 parameter_list closing_paren

    $default  reduce using rule 207 (@24)

    @24  go to state 204


State 158

  152 value: T_IDENT .
  222 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 222 (function_id_or_pointer)
    $default  reduce using rule 152 (value)


State 159

  149 value: T_VARIABLE .

    $default  reduce using rule 149 (value)


State 160

  120 binary_expression: type_cast simple_term .

    $default  reduce using rule 120 (binary_expression)


State 161

   59 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 205


State 162

   63 annotation_values: annotation_value ',' . annotation_values

    T_IDENT  shift, and go to state 107

    $default  reduce using rule 61 (annotation_values)

    annotation_value   go to state 108
    annotation_values  go to state 206


State 163

   58 annotation: T_ANNOTATION $@5 '(' annotation_values ')' .

    $default  reduce using rule 58 (annotation)


State 164

   38 macrostart: macro_type macro_declaration '(' . argument_list ')' optional_description

    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_ELLIPSIS         shift, and go to state 207

    $default  reduce using rule 44 (argument_list)

    argument_list         go to state 208
    non_empty_arguments   go to state 209
    argument_declaration  go to state 210
    type_name             go to state 211


State 165

   68 block: '{' var_decls . stmntlist closing_brace
   70 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 222
    '{'                shift, and go to state 223

    '}'  reduce using rule 202 (stmntlist)

    variable_reference      go to state 224
    var_decl                go to state 225
    block                   go to state 226
    statement               go to state 227
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    if_expression           go to state 240
    stmntlist               go to state 241
    call_expression         go to state 242
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 166

  114 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 243


State 167

  206 call_expression: T_FUNC '(' @23 . parameter_list closing_paren

    error                    shift, and go to state 168
    T_NEW                    shift, and go to state 77
    T_ELLIPSIS               shift, and go to state 169
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    ','  reduce using rule 103 (range_expression)
    ')'  reduce using rule 48 (parameter_list)
    ')'  [reduce using rule 103 (range_expression)]

    variable_reference      go to state 90
    parameter_list          go to state 244
    non_empty_parameters    go to state 171
    expression              go to state 172
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    parameter               go to state 173
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 168

   52 non_empty_parameters: error .

    $default  reduce using rule 52 (non_empty_parameters)


State 169

  224 parameter: T_ELLIPSIS . expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 90
    expression              go to state 245
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 170

  212 array_constructor: '[' @25 parameter_list . ']'

    ']'  shift, and go to state 246


State 171

   49 parameter_list: non_empty_parameters .
   51 non_empty_parameters: non_empty_parameters . ',' parameter

    ','  shift, and go to state 247

    $default  reduce using rule 49 (parameter_list)


State 172

  223 parameter: expression .

    $default  reduce using rule 223 (parameter)


State 173

   50 non_empty_parameters: parameter .

    $default  reduce using rule 50 (non_empty_parameters)


State 174

  145 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 145 (binary_expression)


State 175

  225 type_cast: '(' type_name ')' .

    $default  reduce using rule 225 (type_cast)


State 176

  220 map_associate: T_STRING . ':' @27 value

    ':'  shift, and go to state 248


State 177

  214 map_constructor: '{' @26 optional_map_associates . '}'

    '}'  shift, and go to state 249


State 178

  216 optional_map_associates: map_associates .
  218 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 250

    $default  reduce using rule 216 (optional_map_associates)


State 179

  217 map_associates: map_associate .

    $default  reduce using rule 217 (map_associates)


State 180

  105 range_expression: binary_expression T_DOTDOT binary_expression . $@10 range_increment
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH       [reduce using rule 104 ($@10)]
    T_NE           [reduce using rule 104 ($@10)]
    T_EQ           [reduce using rule 104 ($@10)]
    T_SHIFT_LEFT   [reduce using rule 104 ($@10)]
    T_SHIFT_RIGHT  [reduce using rule 104 ($@10)]
    T_OR           [reduce using rule 104 ($@10)]
    T_AND          [reduce using rule 104 ($@10)]
    T_LE           [reduce using rule 104 ($@10)]
    T_GE           [reduce using rule 104 ($@10)]
    T_POWER_TO     [reduce using rule 104 ($@10)]
    '&'            [reduce using rule 104 ($@10)]
    '|'            [reduce using rule 104 ($@10)]
    '^'            [reduce using rule 104 ($@10)]
    '~'            [reduce using rule 104 ($@10)]
    '<'            [reduce using rule 104 ($@10)]
    '>'            [reduce using rule 104 ($@10)]
    '+'            [reduce using rule 104 ($@10)]
    '-'            [reduce using rule 104 ($@10)]
    '*'            [reduce using rule 104 ($@10)]
    '/'            [reduce using rule 104 ($@10)]
    '%'            [reduce using rule 104 ($@10)]
    '['            [reduce using rule 104 ($@10)]
    '.'            [reduce using rule 104 ($@10)]
    $default       reduce using rule 104 ($@10)

    $@10  go to state 251


State 181

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  125                  | binary_expression T_NMATCH binary_expression .
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 125 (binary_expression)


State 182

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  144                  | binary_expression T_NE binary_expression .

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 144 (binary_expression)


State 183

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  143                  | binary_expression T_EQ binary_expression .
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 143 (binary_expression)


State 184

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  134                  | binary_expression T_SHIFT_LEFT binary_expression .
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '+'         shift, and go to state 149
    '-'         shift, and go to state 150
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 134 (binary_expression)


State 185

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  135                  | binary_expression T_SHIFT_RIGHT binary_expression .
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '+'         shift, and go to state 149
    '-'         shift, and go to state 150
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 135 (binary_expression)


State 186

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  138                  | binary_expression T_OR binary_expression .
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 138 (binary_expression)


State 187

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  137                  | binary_expression T_AND binary_expression .
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 137 (binary_expression)


State 188

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  141                  | binary_expression T_LE binary_expression .
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_POWER_TO     shift, and go to state 142
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 141 (binary_expression)


State 189

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  142                  | binary_expression T_GE binary_expression .
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_POWER_TO     shift, and go to state 142
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 142 (binary_expression)


State 190

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  136                  | binary_expression T_POWER_TO binary_expression .
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 136 (binary_expression)


State 191

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  126                  | binary_expression '&' binary_expression .
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 126 (binary_expression)


State 192

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  127                  | binary_expression '|' binary_expression .
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 127 (binary_expression)


State 193

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  129                  | binary_expression '^' binary_expression .
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 129 (binary_expression)


State 194

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  124                  | binary_expression '~' binary_expression .
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 124 (binary_expression)


State 195

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  139                  | binary_expression '<' binary_expression .
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_POWER_TO     shift, and go to state 142
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 139 (binary_expression)


State 196

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  140                  | binary_expression '>' binary_expression .
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_POWER_TO     shift, and go to state 142
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 140 (binary_expression)


State 197

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  128                  | binary_expression '+' binary_expression .
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 128 (binary_expression)


State 198

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  130                  | binary_expression '-' binary_expression .
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 130 (binary_expression)


State 199

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  131                  | binary_expression '*' binary_expression .
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 131 (binary_expression)


State 200

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  132                  | binary_expression '/' binary_expression .
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 132 (binary_expression)


State 201

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  133                  | binary_expression '%' binary_expression .
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 133 (binary_expression)


State 202

  123 binary_expression: binary_expression '[' expression . ']'

    ']'  shift, and go to state 252


State 203

  121 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 121 (binary_expression)


State 204

  208 call_expression: function_id_or_pointer '(' @24 . parameter_list closing_paren

    error                    shift, and go to state 168
    T_NEW                    shift, and go to state 77
    T_ELLIPSIS               shift, and go to state 169
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    ','  reduce using rule 103 (range_expression)
    ')'  reduce using rule 48 (parameter_list)
    ')'  [reduce using rule 103 (range_expression)]

    variable_reference      go to state 90
    parameter_list          go to state 253
    non_empty_parameters    go to state 171
    expression              go to state 172
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    parameter               go to state 173
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 205

   59 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 59 (annotation_value)


State 206

   63 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 63 (annotation_values)


State 207

   54 argument_declaration: T_ELLIPSIS .

    $default  reduce using rule 54 (argument_declaration)


State 208

   38 macrostart: macro_type macro_declaration '(' argument_list . ')' optional_description

    ')'  shift, and go to state 254


State 209

   45 argument_list: non_empty_arguments .
   47 non_empty_arguments: non_empty_arguments . ',' argument_declaration

    ','  shift, and go to state 255

    $default  reduce using rule 45 (argument_list)


State 210

   46 non_empty_arguments: argument_declaration .

    $default  reduce using rule 46 (non_empty_arguments)


State 211

   53 argument_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 256


State 212

   86 statement: error . ';'

    ';'  shift, and go to state 257


State 213

  175 for_loop_expression: T_FOR . for_clause $@12 local_block

    error  shift, and go to state 258
    '('    shift, and go to state 259

    for_to_clause  go to state 260
    for_clause     go to state 261
    in_clause      go to state 262


State 214

   33 variable_reference: T_IDENT .
  170 label: T_IDENT . ':'
  222 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 263

    '('       reduce using rule 222 (function_id_or_pointer)
    $default  reduce using rule 33 (variable_reference)


State 215

  198 if_expression: T_IF . condition $@20 local_block $@21 else_clause

    '('  shift, and go to state 264

    condition  go to state 265


State 216

  192 while: T_WHILE . $@18 condition $@19 local_block

    $default  reduce using rule 190 ($@18)

    $@18  go to state 266


State 217

  171 goto_expression: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 267


State 218

  173 switch_expression: T_SWITCH . '(' value ')' $@11 '{' case_clauses '}'

    '('  shift, and go to state 268


State 219

  155 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 269

    $default  reduce using rule 160 (opt_num)

    opt_num  go to state 270


State 220

  156 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 269

    $default  reduce using rule 160 (opt_num)

    opt_num  go to state 271


State 221

  157 return_expression: T_RETURN . optional_bterm

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 158 (optional_bterm)

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 272
    value                   go to state 97
    string                  go to state 98
    optional_bterm          go to state 273
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 222

   71 statement: ';' .

    $default  reduce using rule 71 (statement)


State 223

   68 block: '{' . var_decls stmntlist closing_brace
  214 map_constructor: '{' . @26 optional_map_associates '}'

    T_STRING  reduce using rule 213 (@26)
    '}'       reduce using rule 69 (var_decls)
    '}'       [reduce using rule 213 (@26)]
    $default  reduce using rule 69 (var_decls)

    var_decls  go to state 165
    @26        go to state 130


State 224

   87 assignment: variable_reference . assignment_expression
   93 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator expression
   94 assignment_target: variable_reference .
  110 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 274
    T_MINUSMINUS  shift, and go to state 275
    T_ASSIGN      shift, and go to state 55

    '['       reduce using rule 94 (assignment_target)
    '.'       reduce using rule 94 (assignment_target)
    $default  reduce using rule 92 ($@9)

    $@9                    go to state 276
    assignment_expression  go to state 277
    minusminus_plusplus    go to state 278


State 225

   70 var_decls: var_decls var_decl . ';'
   85 statement: var_decl .

    ';'  shift, and go to state 279

    ';'       [reduce using rule 85 (statement)]
    $default  reduce using rule 85 (statement)


State 226

   82 statement: block .

    $default  reduce using rule 82 (statement)


State 227

  203 stmntlist: statement . stmntlist

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 222
    '{'                shift, and go to state 223

    T_CASE     reduce using rule 202 (stmntlist)
    T_DEFAULT  reduce using rule 202 (stmntlist)
    '}'        reduce using rule 202 (stmntlist)

    variable_reference      go to state 224
    var_decl                go to state 280
    block                   go to state 226
    statement               go to state 227
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    if_expression           go to state 240
    stmntlist               go to state 281
    call_expression         go to state 242
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 228

   73 statement: assignment . ';'

    ';'  shift, and go to state 282


State 229

   91 assignment: shorthand_assignment .

    $default  reduce using rule 91 (assignment)


State 230

   89 assignment: assignment_target . '.' T_IDENT $@8 assignment_expression
   90           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 283
    '.'  shift, and go to state 284


State 231

   83 statement: increment_expression . ';'

    ';'  shift, and go to state 285


State 232

   78 statement: break .

    $default  reduce using rule 78 (statement)


State 233

   79 statement: continue .

    $default  reduce using rule 79 (statement)


State 234

   80 statement: return_expression . ';'

    ';'  shift, and go to state 286


State 235

   84 statement: label .

    $default  reduce using rule 84 (statement)


State 236

   81 statement: goto_expression . ';'

    ';'  shift, and go to state 287


State 237

   77 statement: switch_expression .

    $default  reduce using rule 77 (statement)


State 238

   76 statement: for_loop_expression .

    $default  reduce using rule 76 (statement)


State 239

   75 statement: while .

    $default  reduce using rule 75 (statement)


State 240

   74 statement: if_expression .

    $default  reduce using rule 74 (statement)


State 241

   68 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 288

    closing_brace  go to state 289


State 242

   72 statement: call_expression . ';'

    ';'  shift, and go to state 290


State 243

  114 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 114 (constructor_expression)


State 244

  206 call_expression: T_FUNC '(' @23 parameter_list . closing_paren

    ')'  shift, and go to state 291

    closing_paren  go to state 292


State 245

  224 parameter: T_ELLIPSIS expression .

    $default  reduce using rule 224 (parameter)


State 246

  212 array_constructor: '[' @25 parameter_list ']' .

    $default  reduce using rule 212 (array_constructor)


State 247

   51 non_empty_parameters: non_empty_parameters ',' . parameter

    T_NEW                    shift, and go to state 77
    T_ELLIPSIS               shift, and go to state 169
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 90
    expression              go to state 172
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    parameter               go to state 293
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 248

  220 map_associate: T_STRING ':' . @27 value

    $default  reduce using rule 219 (@27)

    @27  go to state 294


State 249

  214 map_constructor: '{' @26 optional_map_associates '}' .

    $default  reduce using rule 214 (map_constructor)


State 250

  218 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 176

    map_associate  go to state 295


State 251

  105 range_expression: binary_expression T_DOTDOT binary_expression $@10 . range_increment

    T_DOTDOT  shift, and go to state 296

    T_DOTDOT  [reduce using rule 106 (range_increment)]
    $default  reduce using rule 106 (range_increment)

    range_increment  go to state 297


State 252

  123 binary_expression: binary_expression '[' expression ']' .

    $default  reduce using rule 123 (binary_expression)


State 253

  208 call_expression: function_id_or_pointer '(' @24 parameter_list . closing_paren

    ')'  shift, and go to state 291

    closing_paren  go to state 298


State 254

   38 macrostart: macro_type macro_declaration '(' argument_list ')' . optional_description

    T_STRING  shift, and go to state 299

    $default  reduce using rule 42 (optional_description)

    optional_description  go to state 300


State 255

   47 non_empty_arguments: non_empty_arguments ',' . argument_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_ELLIPSIS         shift, and go to state 207

    argument_declaration  go to state 301
    type_name             go to state 211


State 256

   53 argument_declaration: type_name variable_identifier .

    $default  reduce using rule 53 (argument_declaration)


State 257

   86 statement: error ';' .

    $default  reduce using rule 86 (statement)


State 258

  187 for_clause: error .

    $default  reduce using rule 187 (for_clause)


State 259

  181 for_to_clause: '(' . opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'
  189 in_clause: '(' . type_name variable_identifier $@17 ':' expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 25

    $default  reduce using rule 182 (opt_for_initializer)

    opt_for_initializer  go to state 302
    type_name            go to state 303


State 260

  185 for_clause: for_to_clause .

    $default  reduce using rule 185 (for_clause)


State 261

  175 for_loop_expression: T_FOR for_clause . $@12 local_block

    $default  reduce using rule 174 ($@12)

    $@12  go to state 304


State 262

  186 for_clause: in_clause .

    $default  reduce using rule 186 (for_clause)


State 263

  170 label: T_IDENT ':' .

    $default  reduce using rule 170 (label)


State 264

  147 condition: '(' . binary_expression ')'
  148          | '(' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 305
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 265

  198 if_expression: T_IF condition . $@20 local_block $@21 else_clause

    $default  reduce using rule 196 ($@20)

    $@20  go to state 306


State 266

  192 while: T_WHILE $@18 . condition $@19 local_block

    '('  shift, and go to state 264

    condition  go to state 307


State 267

  171 goto_expression: T_GOTO T_IDENT .

    $default  reduce using rule 171 (goto_expression)


State 268

  173 switch_expression: T_SWITCH '(' . value ')' $@11 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 308
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_VARIABLE               shift, and go to state 159
    '-'                      shift, and go to state 63

    value              go to state 309
    string             go to state 98
    boolean_literal    go to state 65
    float_literal      go to state 66
    integer_literal    go to state 67
    character_literal  go to state 68
    simple_literal     go to state 104


State 269

  161 opt_num: T_NUM .

    $default  reduce using rule 161 (opt_num)


State 270

  155 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 310


State 271

  156 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 311


State 272

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  159 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 159 (optional_bterm)


State 273

  157 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 157 (return_expression)


State 274

  109 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 109 (minusminus_plusplus)


State 275

  108 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 108 (minusminus_plusplus)


State 276

   93 shorthand_assignment: variable_reference $@9 . shorthand_assignment_operator expression

    T_SH_ASSIGN_PLUS   shift, and go to state 312
    T_SH_ASSIGN_MINUS  shift, and go to state 313
    T_SH_ASSIGN_MULT   shift, and go to state 314
    T_SH_ASSIGN_DIV    shift, and go to state 315
    T_SH_ASSIGN_MOD    shift, and go to state 316

    shorthand_assignment_operator  go to state 317


State 277

   87 assignment: variable_reference assignment_expression .

    $default  reduce using rule 87 (assignment)


State 278

  110 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 110 (increment_expression)


State 279

   70 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 70 (var_decls)


State 280

   85 statement: var_decl .

    $default  reduce using rule 85 (statement)


State 281

  203 stmntlist: statement stmntlist .

    $default  reduce using rule 203 (stmntlist)


State 282

   73 statement: assignment ';' .

    $default  reduce using rule 73 (statement)


State 283

   90 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 318
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 284

   89 assignment: assignment_target '.' . T_IDENT $@8 assignment_expression

    T_IDENT  shift, and go to state 319


State 285

   83 statement: increment_expression ';' .

    $default  reduce using rule 83 (statement)


State 286

   80 statement: return_expression ';' .

    $default  reduce using rule 80 (statement)


State 287

   81 statement: goto_expression ';' .

    $default  reduce using rule 81 (statement)


State 288

  195 closing_brace: '}' .

    $default  reduce using rule 195 (closing_brace)


State 289

   68 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 68 (block)


State 290

   72 statement: call_expression ';' .

    $default  reduce using rule 72 (statement)


State 291

  204 closing_paren: ')' .

    $default  reduce using rule 204 (closing_paren)


State 292

  206 call_expression: T_FUNC '(' @23 parameter_list closing_paren .

    $default  reduce using rule 206 (call_expression)


State 293

   51 non_empty_parameters: non_empty_parameters ',' parameter .

    $default  reduce using rule 51 (non_empty_parameters)


State 294

  220 map_associate: T_STRING ':' @27 . value

    T_IDENT                  shift, and go to state 308
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_VARIABLE               shift, and go to state 159
    '-'                      shift, and go to state 63

    value              go to state 320
    string             go to state 98
    boolean_literal    go to state 65
    float_literal      go to state 66
    integer_literal    go to state 67
    character_literal  go to state 68
    simple_literal     go to state 104


State 295

  218 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 218 (map_associates)


State 296

  107 range_increment: T_DOTDOT . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 321
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 297

  105 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment .

    $default  reduce using rule 105 (range_expression)


State 298

  208 call_expression: function_id_or_pointer '(' @24 parameter_list closing_paren .

    $default  reduce using rule 208 (call_expression)


State 299

   43 optional_description: T_STRING .

    $default  reduce using rule 43 (optional_description)


State 300

   38 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description .

    $default  reduce using rule 38 (macrostart)


State 301

   47 non_empty_arguments: non_empty_arguments ',' argument_declaration .

    $default  reduce using rule 47 (non_empty_arguments)


State 302

  181 for_to_clause: '(' opt_for_initializer . $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'

    $default  reduce using rule 178 ($@13)

    $@13  go to state 322


State 303

  184 opt_for_initializer: type_name . variable_identifier $@16 assignment_expression
  189 in_clause: '(' type_name . variable_identifier $@17 ':' expression ')'

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 323


State 304

  175 for_loop_expression: T_FOR for_clause $@12 . local_block

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 222
    '{'                shift, and go to state 324

    variable_reference      go to state 224
    var_decl                go to state 280
    block                   go to state 226
    statement               go to state 325
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    local_block             go to state 326
    if_expression           go to state 240
    call_expression         go to state 242
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 305

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  147 condition: '(' binary_expression . ')'
  148          | '(' binary_expression .

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155
    ')'            shift, and go to state 327

    '*'       [reduce using rule 148 (condition)]
    '['       [reduce using rule 148 (condition)]
    $default  reduce using rule 148 (condition)


State 306

  198 if_expression: T_IF condition $@20 . local_block $@21 else_clause

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 222
    '{'                shift, and go to state 324

    variable_reference      go to state 224
    var_decl                go to state 280
    block                   go to state 226
    statement               go to state 325
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    local_block             go to state 328
    if_expression           go to state 240
    call_expression         go to state 242
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 307

  192 while: T_WHILE $@18 condition . $@19 local_block

    $default  reduce using rule 191 ($@19)

    $@19  go to state 329


State 308

  152 value: T_IDENT .

    $default  reduce using rule 152 (value)


State 309

  173 switch_expression: T_SWITCH '(' value . ')' $@11 '{' case_clauses '}'

    ')'  shift, and go to state 330


State 310

  155 break: T_BREAK opt_num ';' .

    $default  reduce using rule 155 (break)


State 311

  156 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 156 (continue)


State 312

   98 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 98 (shorthand_assignment_operator)


State 313

   99 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 99 (shorthand_assignment_operator)


State 314

   95 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 95 (shorthand_assignment_operator)


State 315

   96 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 96 (shorthand_assignment_operator)


State 316

   97 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 97 (shorthand_assignment_operator)


State 317

   93 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator . expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 90
    expression              go to state 331
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 318

   90 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155
    ']'            shift, and go to state 332


State 319

   89 assignment: assignment_target '.' T_IDENT . $@8 assignment_expression

    $default  reduce using rule 88 ($@8)

    $@8  go to state 333


State 320

  220 map_associate: T_STRING ':' @27 value .

    $default  reduce using rule 220 (map_associate)


State 321

  107 range_increment: T_DOTDOT binary_expression .
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 107 (range_increment)


State 322

  181 for_to_clause: '(' opt_for_initializer $@13 . ';' binary_expression ';' $@14 for_increment $@15 ')'

    ';'  shift, and go to state 334


State 323

  184 opt_for_initializer: type_name variable_identifier . $@16 assignment_expression
  189 in_clause: '(' type_name variable_identifier . $@17 ':' expression ')'

    ':'       reduce using rule 188 ($@17)
    $default  reduce using rule 183 ($@16)

    $@16  go to state 335
    $@17  go to state 336


State 324

   68 block: '{' . var_decls stmntlist closing_brace
  194 local_block: '{' . stmntlist closing_brace
  214 map_constructor: '{' . @26 optional_map_associates '}'

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 222
    '{'                shift, and go to state 223

    error              [reduce using rule 69 (var_decls)]
    T_FOR              [reduce using rule 69 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 69 (var_decls)]
    T_IDENT            [reduce using rule 69 (var_decls)]
    T_STRING           reduce using rule 213 (@26)
    T_FUNC             [reduce using rule 69 (var_decls)]
    T_IF               [reduce using rule 69 (var_decls)]
    T_WHILE            [reduce using rule 69 (var_decls)]
    T_GOTO             [reduce using rule 69 (var_decls)]
    T_SWITCH           [reduce using rule 69 (var_decls)]
    T_BREAK            [reduce using rule 69 (var_decls)]
    T_CONTINUE         [reduce using rule 69 (var_decls)]
    T_RETURN           [reduce using rule 69 (var_decls)]
    T_VARIABLE         [reduce using rule 69 (var_decls)]
    '*'                [reduce using rule 69 (var_decls)]
    '['                [reduce using rule 69 (var_decls)]
    ';'                [reduce using rule 69 (var_decls)]
    '{'                [reduce using rule 69 (var_decls)]
    '}'                reduce using rule 69 (var_decls)
    '}'                [reduce using rule 202 (stmntlist)]
    '}'                [reduce using rule 213 (@26)]

    variable_reference      go to state 224
    var_decl                go to state 280
    block                   go to state 226
    var_decls               go to state 165
    statement               go to state 227
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    if_expression           go to state 240
    stmntlist               go to state 337
    call_expression         go to state 242
    array_constructor       go to state 100
    map_constructor         go to state 101
    @26                     go to state 130
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 325

  193 local_block: statement .

    $default  reduce using rule 193 (local_block)


State 326

  175 for_loop_expression: T_FOR for_clause $@12 local_block .

    $default  reduce using rule 175 (for_loop_expression)


State 327

  147 condition: '(' binary_expression ')' .

    $default  reduce using rule 147 (condition)


State 328

  198 if_expression: T_IF condition $@20 local_block . $@21 else_clause

    $default  reduce using rule 197 ($@21)

    $@21  go to state 338


State 329

  192 while: T_WHILE $@18 condition $@19 . local_block

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 222
    '{'                shift, and go to state 324

    variable_reference      go to state 224
    var_decl                go to state 280
    block                   go to state 226
    statement               go to state 325
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    local_block             go to state 339
    if_expression           go to state 240
    call_expression         go to state 242
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 330

  173 switch_expression: T_SWITCH '(' value ')' . $@11 '{' case_clauses '}'

    $default  reduce using rule 172 ($@11)

    $@11  go to state 340


State 331

   93 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator expression .

    $default  reduce using rule 93 (shorthand_assignment)


State 332

   90 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 55

    assignment_expression  go to state 341


State 333

   89 assignment: assignment_target '.' T_IDENT $@8 . assignment_expression

    T_ASSIGN  shift, and go to state 55

    assignment_expression  go to state 342


State 334

  181 for_to_clause: '(' opt_for_initializer $@13 ';' . binary_expression ';' $@14 for_increment $@15 ')'

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 343
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 335

  184 opt_for_initializer: type_name variable_identifier $@16 . assignment_expression

    T_ASSIGN  shift, and go to state 55

    assignment_expression  go to state 344


State 336

  189 in_clause: '(' type_name variable_identifier $@17 . ':' expression ')'

    ':'  shift, and go to state 345


State 337

  194 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 288

    closing_brace  go to state 346


State 338

  198 if_expression: T_IF condition $@20 local_block $@21 . else_clause

    T_ELSE  shift, and go to state 347

    T_ELSE    [reduce using rule 199 (else_clause)]
    $default  reduce using rule 199 (else_clause)

    else_clause  go to state 348


State 339

  192 while: T_WHILE $@18 condition $@19 local_block .

    $default  reduce using rule 192 (while)


State 340

  173 switch_expression: T_SWITCH '(' value ')' $@11 . '{' case_clauses '}'

    '{'  shift, and go to state 349


State 341

   90 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 90 (assignment)


State 342

   89 assignment: assignment_target '.' T_IDENT $@8 assignment_expression .

    $default  reduce using rule 89 (assignment)


State 343

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  181 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression . ';' $@14 for_increment $@15 ')'

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155
    ';'            shift, and go to state 350


State 344

  184 opt_for_initializer: type_name variable_identifier $@16 assignment_expression .

    $default  reduce using rule 184 (opt_for_initializer)


State 345

  189 in_clause: '(' type_name variable_identifier $@17 ':' . expression ')'

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 90
    expression              go to state 351
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 346

  194 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 194 (local_block)


State 347

  201 else_clause: T_ELSE . $@22 local_block

    $default  reduce using rule 200 ($@22)

    $@22  go to state 352


State 348

  198 if_expression: T_IF condition $@20 local_block $@21 else_clause .

    $default  reduce using rule 198 (if_expression)


State 349

  173 switch_expression: T_SWITCH '(' value ')' $@11 '{' . case_clauses '}'

    T_CASE     shift, and go to state 353
    T_DEFAULT  shift, and go to state 354

    $default  reduce using rule 162 (case_clauses)

    case_clauses   go to state 355
    case_clause    go to state 356
    case_selector  go to state 357


State 350

  181 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' . $@14 for_increment $@15 ')'

    $default  reduce using rule 179 ($@14)

    $@14  go to state 358


State 351

  189 in_clause: '(' type_name variable_identifier $@17 ':' expression . ')'

    ')'  shift, and go to state 359


State 352

  201 else_clause: T_ELSE $@22 . local_block

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 222
    '{'                shift, and go to state 324

    variable_reference      go to state 224
    var_decl                go to state 280
    block                   go to state 226
    statement               go to state 325
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    local_block             go to state 360
    if_expression           go to state 240
    call_expression         go to state 242
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 353

  165 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 361
    T_STRING  shift, and go to state 362
    '-'       shift, and go to state 63

    case_condition   go to state 363
    integer_literal  go to state 364


State 354

  166 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 365


State 355

  173 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses . '}'

    '}'  shift, and go to state 366


State 356

  163 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 353
    T_DEFAULT  shift, and go to state 354

    $default  reduce using rule 162 (case_clauses)

    case_clauses   go to state 367
    case_clause    go to state 356
    case_selector  go to state 357


State 357

  164 case_clause: case_selector . stmntlist

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 222
    '{'                shift, and go to state 223

    T_CASE     reduce using rule 202 (stmntlist)
    T_DEFAULT  reduce using rule 202 (stmntlist)
    '}'        reduce using rule 202 (stmntlist)

    variable_reference      go to state 224
    var_decl                go to state 280
    block                   go to state 226
    statement               go to state 227
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    if_expression           go to state 240
    stmntlist               go to state 368
    call_expression         go to state 242
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 358

  181 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 . for_increment $@15 ')'

    T_IDENT     shift, and go to state 123
    T_VARIABLE  shift, and go to state 124

    variable_reference    go to state 369
    shorthand_assignment  go to state 370
    increment_expression  go to state 371
    for_increment         go to state 372


State 359

  189 in_clause: '(' type_name variable_identifier $@17 ':' expression ')' .

    $default  reduce using rule 189 (in_clause)


State 360

  201 else_clause: T_ELSE $@22 local_block .

    $default  reduce using rule 201 (else_clause)


State 361

  169 case_condition: T_NUM . T_DOTDOT T_NUM
  233 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 373

    $default  reduce using rule 233 (integer_literal)


State 362

  168 case_condition: T_STRING .

    $default  reduce using rule 168 (case_condition)


State 363

  165 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 374


State 364

  167 case_condition: integer_literal .

    $default  reduce using rule 167 (case_condition)


State 365

  166 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 166 (case_selector)


State 366

  173 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses '}' .

    $default  reduce using rule 173 (switch_expression)


State 367

  163 case_clauses: case_clause case_clauses .

    $default  reduce using rule 163 (case_clauses)


State 368

  164 case_clause: case_selector stmntlist .

    $default  reduce using rule 164 (case_clause)


State 369

   93 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator expression
  110 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 274
    T_MINUSMINUS  shift, and go to state 275

    $default  reduce using rule 92 ($@9)

    $@9                  go to state 276
    minusminus_plusplus  go to state 278


State 370

  177 for_increment: shorthand_assignment .

    $default  reduce using rule 177 (for_increment)


State 371

  176 for_increment: increment_expression .

    $default  reduce using rule 176 (for_increment)


State 372

  181 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment . $@15 ')'

    $default  reduce using rule 180 ($@15)

    $@15  go to state 375


State 373

  169 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 376


State 374

  165 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 165 (case_selector)


State 375

  181 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 . ')'

    ')'  shift, and go to state 377


State 376

  169 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 169 (case_condition)


State 377

  181 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')' .

    $default  reduce using rule 181 (for_to_clause)
