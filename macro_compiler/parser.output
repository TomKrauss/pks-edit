State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 77 conflicts: 9 shift/reduce
State 131 conflicts: 24 shift/reduce
State 163 conflicts: 1 reduce/reduce
State 221 conflicts: 1 reduce/reduce
State 223 conflicts: 1 shift/reduce
State 242 conflicts: 1 reduce/reduce
State 255 conflicts: 23 shift/reduce
State 279 conflicts: 1 reduce/reduce
State 326 conflicts: 1 shift/reduce
State 335 conflicts: 2 shift/reduce
State 360 conflicts: 17 shift/reduce, 2 reduce/reduce
State 376 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter macro_definitions

    3 header_delimiter: %empty
    4                 | '!'

    5 macro_definitions: %empty
    6                  | element_with_annotations macro_definitions

    7 element_with_annotations: annotations macro_or_native_function

    8 macro_or_native_function: native_function_definition ';'
    9                         | macro_definition

   10 namespace: %empty
   11          | T_NAMESPACE T_IDENT ';'

   12 prerequisites: %empty
   13              | prerequisites require

   14 require: T_REQUIRE T_STRING ';'

   15 global_declarations: %empty
   16                    | global_declarations constants ';'
   17                    | global_declarations global_var ';'
   18                    | global_declarations T_TYPEDEF typedef ';'

   19 typedef: enum_definition
   20        | struct_definition
   21        | native_type_definition

   22 $@2: %empty

   23 struct_definition: T_STRUCT $@2 '{' struct_element_definitions '}' typedef_identifier

   24 $@3: %empty

   25 enum_definition: T_ENUM $@3 '{' enum_value_definitions '}' typedef_identifier

   26 $@4: %empty

   27 native_type_definition: T_NATIVE $@4 typedef_identifier

   28 typedef_identifier: T_IDENT
   29                   | T_TYPE_IDENTIFIER

   30 struct_element_definitions: struct_element
   31                           | struct_element struct_element_definitions

   32 struct_element: type_name variable_identifier ';'

   33 enum_value_definitions: %empty
   34                       | enum_values

   35 enum_values: enum_value
   36            | enum_value ',' enum_values

   37 enum_value: T_IDENT opt_enum_assignment

   38 opt_enum_assignment: %empty
   39                    | T_ASSIGN T_NUM
   40                    | T_ASSIGN '-' T_NUM

   41 scope: %empty
   42      | T_STATIC

   43 constants: T_CONST constant_list

   44 constant_list: constdef
   45              | constant_list ',' constdef

   46 $@5: %empty

   47 $@6: %empty

   48 constdef: $@5 variable_identifier T_ASSIGN constant_literal $@6

   49 constant_literal: simple_literal
   50                 | T_STRING

   51 variable_identifier: T_IDENT
   52                    | T_NUM
   53                    | T_STRING

   54 variable_reference: T_VARIABLE
   55                   | T_IDENT

   56 macro_declaration: T_IDENT
   57                  | T_FUNC

   58 macro_type: scope T_VOID
   59           | scope type_name

   60 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description

   61 global_var: scope var_decl

   62 var_decl: type_name variable_identifier assignment_expression
   63         | type_name variable_identifier

   64 optional_description: %empty
   65                     | T_STRING

   66 argument_list: %empty
   67              | non_empty_arguments

   68 non_empty_arguments: argument_declaration
   69                    | non_empty_arguments ',' argument_declaration

   70 parameter_list: %empty
   71               | non_empty_parameters

   72 non_empty_parameters: parameter
   73                     | non_empty_parameters ',' parameter
   74                     | error

   75 argument_declaration: type_name variable_identifier
   76                     | T_ELLIPSIS

   77 annotations: %empty
   78            | annotation annotations

   79 $@7: %empty

   80 annotation: T_ANNOTATION $@7 '(' annotation_values ')'

   81 annotation_value: T_IDENT T_ASSIGN T_STRING
   82                 | T_IDENT
   83                 | T_STRING

   84 annotation_values: %empty
   85                  | annotation_value
   86                  | annotation_value ',' annotation_values

   87 $@8: %empty

   88 native_function_definition: T_NATIVE $@8 macrostart

   89 $@9: %empty

   90 macro_definition: $@9 macrostart block

   91 block: '{' var_decls stmntlist closing_brace

   92 var_decls: %empty
   93          | var_decls var_decl ';'

   94 statement: ';'
   95          | call_expression ';'
   96          | assignment ';'
   97          | if_expression
   98          | while
   99          | for_loop_expression
  100          | switch_expression
  101          | break
  102          | continue
  103          | return_expression ';'
  104          | goto_expression ';'
  105          | block
  106          | increment_expression ';'
  107          | label
  108          | var_decl
  109          | error ';'

  110 assignment: variable_reference assignment_expression

  111 $@10: %empty

  112 assignment: assignment_target '.' T_IDENT $@10 assignment_expression
  113           | assignment_target '[' binary_expression ']' assignment_expression
  114           | shorthand_assignment

  115 $@11: %empty

  116 shorthand_assignment: variable_reference $@11 shorthand_assignment_operator expression

  117 assignment_target: variable_reference

  118 shorthand_assignment_operator: T_SH_ASSIGN_MULT
  119                              | T_SH_ASSIGN_DIV
  120                              | T_SH_ASSIGN_MOD
  121                              | T_SH_ASSIGN_PLUS
  122                              | T_SH_ASSIGN_MINUS

  123 assignment_expression: T_ASSIGN expression

  124 expression: binary_expression
  125           | range_expression

  126 range_expression: %empty

  127 $@12: %empty

  128 range_expression: binary_expression T_DOTDOT binary_expression $@12 range_increment

  129 range_increment: %empty
  130                | T_DOTDOT binary_expression

  131 minusminus_plusplus: T_MINUSMINUS
  132                    | T_PLUSPLUS

  133 increment_expression: variable_reference minusminus_plusplus

  134 simple_term: value
  135            | call_expression
  136            | constructor_expression

  137 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  138 unary_expression: '!' binary_expression
  139                 | '~' binary_expression
  140                 | '+' binary_expression
  141                 | '-' variable_reference

  142 binary_expression: simple_term
  143                  | type_cast simple_term
  144                  | binary_expression '.' T_IDENT
  145                  | unary_expression
  146                  | binary_expression '[' expression ']'
  147                  | binary_expression '~' binary_expression
  148                  | binary_expression T_NMATCH binary_expression
  149                  | binary_expression '&' binary_expression
  150                  | binary_expression '|' binary_expression
  151                  | binary_expression '+' binary_expression
  152                  | binary_expression '^' binary_expression
  153                  | binary_expression '-' binary_expression
  154                  | binary_expression '*' binary_expression
  155                  | binary_expression '/' binary_expression
  156                  | binary_expression '%' binary_expression
  157                  | binary_expression T_SHIFT_LEFT binary_expression
  158                  | binary_expression T_SHIFT_RIGHT binary_expression
  159                  | binary_expression T_POWER_TO binary_expression
  160                  | binary_expression T_AND binary_expression
  161                  | binary_expression T_OR binary_expression
  162                  | binary_expression '<' binary_expression
  163                  | binary_expression '>' binary_expression
  164                  | binary_expression T_LE binary_expression
  165                  | binary_expression T_GE binary_expression
  166                  | binary_expression T_EQ binary_expression
  167                  | binary_expression T_NE binary_expression
  168                  | '(' binary_expression ')'
  169                  | variable_reference assignment_expression

  170 condition: '(' binary_expression ')'
  171          | '(' binary_expression

  172 value: T_VARIABLE
  173      | string
  174      | simple_literal
  175      | T_IDENT

  176 string: T_STRING
  177       | string T_STRING

  178 break: T_BREAK opt_num ';'

  179 continue: T_CONTINUE opt_num ';'

  180 return_expression: T_RETURN optional_bterm

  181 optional_bterm: %empty
  182               | binary_expression

  183 opt_num: %empty
  184        | T_NUM

  185 case_clauses: %empty
  186             | case_clause case_clauses

  187 case_clause: case_selector stmntlist

  188 case_selector: T_CASE case_condition ':'
  189              | T_DEFAULT ':'

  190 case_condition: integer_literal
  191               | T_STRING
  192               | T_NUM T_DOTDOT T_NUM

  193 label: T_IDENT ':'

  194 goto_expression: T_GOTO T_IDENT

  195 $@13: %empty

  196 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses '}'

  197 $@14: %empty

  198 for_loop_expression: T_FOR for_clause $@14 local_block

  199 for_increment: increment_expression
  200              | shorthand_assignment

  201 $@15: %empty

  202 $@16: %empty

  203 $@17: %empty

  204 for_to_clause: '(' opt_for_initializer $@15 ';' binary_expression ';' $@16 for_increment $@17 ')'

  205 opt_for_initializer: %empty

  206 $@18: %empty

  207 opt_for_initializer: type_name variable_identifier $@18 assignment_expression

  208 for_clause: for_to_clause
  209           | in_clause
  210           | error

  211 $@19: %empty

  212 in_clause: '(' type_name variable_identifier $@19 ':' expression ')'

  213 $@20: %empty

  214 $@21: %empty

  215 while: T_WHILE $@20 condition $@21 local_block

  216 local_block: statement
  217            | '{' stmntlist closing_brace

  218 closing_brace: '}'

  219 $@22: %empty

  220 $@23: %empty

  221 if_expression: T_IF condition $@22 local_block $@23 else_clause

  222 else_clause: %empty

  223 $@24: %empty

  224 else_clause: T_ELSE $@24 local_block

  225 stmntlist: %empty
  226          | statement stmntlist

  227 closing_paren: ')'

  228 @25: %empty

  229 call_expression: T_FUNC '(' @25 parameter_list closing_paren

  230 @26: %empty

  231 call_expression: function_id_or_pointer '(' @26 parameter_list closing_paren
  232                | array_constructor
  233                | map_constructor

  234 @27: %empty

  235 array_constructor: '[' @27 parameter_list ']'

  236 @28: %empty

  237 map_constructor: '{' @28 optional_map_associates '}'

  238 optional_map_associates: %empty
  239                        | map_associates

  240 map_associates: map_associate
  241               | map_associates ',' map_associate

  242 @29: %empty

  243 map_associate: T_STRING ':' @29 value

  244 function_id_or_pointer: '*' variable_reference
  245                       | T_IDENT

  246 parameter: expression
  247          | T_ELLIPSIS expression

  248 type_cast: '(' type_name ')'

  249 type_name: T_TYPE_IDENTIFIER
  250          | T_TYPE_IDENTIFIER array_size

  251 array_size: '[' ']'
  252           | '[' T_NUM ']'

  253 boolean_literal: T_TRUE
  254                | T_FALSE

  255 float_literal: T_FLOATING_POINT_NUMBER

  256 integer_literal: T_NUM
  257                | '-' T_NUM

  258 character_literal: T_CHARACTER

  259 simple_literal: integer_literal
  260               | float_literal
  261               | character_literal
  262               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 4 138
    '%' (37) 156
    '&' (38) 149
    '(' (40) 60 80 137 168 170 171 196 204 212 229 231 248
    ')' (41) 60 80 137 168 170 196 204 212 227 248
    '*' (42) 154 244
    '+' (43) 140 151
    ',' (44) 36 45 69 73 86 241
    '-' (45) 40 141 153 257
    '.' (46) 112 144
    '/' (47) 155
    ':' (58) 188 189 193 212 243
    ';' (59) 8 11 14 16 17 18 32 93 94 95 96 103 104 106 109 178 179 204
    '<' (60) 162
    '>' (62) 163
    '[' (91) 113 146 235 251 252
    ']' (93) 113 146 235 251 252
    '^' (94) 152
    '{' (123) 23 25 91 196 217 237
    '|' (124) 150
    '}' (125) 23 25 196 218 237
    '~' (126) 139 147
    error (256) 74 109 210
    T_NAMESPACE (258) 11
    T_TYPEDEF (259) 18
    T_ENUM (260) 25
    T_STRUCT (261) 23
    T_REQUIRE (262) 14
    T_FOR (263) 198
    T_ANNOTATION (264) 80
    T_NATIVE (265) 27 88
    T_NEW (266) 137
    T_STATIC (267) 42
    T_VOID (268) 58
    T_TYPE_IDENTIFIER (269) 29 137 249 250
    T_ELLIPSIS (270) 76 247
    T_IDENT (271) 11 28 37 51 55 56 81 82 112 144 175 193 194 245
    T_NUM (272) 39 40 52 184 192 252 256 257
    T_FLOATING_POINT_NUMBER (273) 255
    T_STRING (274) 14 50 53 65 81 83 176 177 191 243
    T_CHARACTER (275) 258
    T_CONST (276) 43
    T_TRUE (277) 253
    T_FALSE (278) 254
    T_FUNC (279) 57 229
    T_DOTDOT (280) 128 130 192
    T_PLUSPLUS (281) 132
    T_MINUSMINUS (282) 131
    T_IF (283) 221
    T_ELSE (284) 224
    T_WHILE (285) 215
    T_GOTO (286) 194
    T_SH_ASSIGN_PLUS (287) 121
    T_SH_ASSIGN_MINUS (288) 122
    T_SH_ASSIGN_MULT (289) 118
    T_SH_ASSIGN_DIV (290) 119
    T_SH_ASSIGN_MOD (291) 120
    T_SWITCH (292) 196
    T_CASE (293) 188
    T_DEFAULT (294) 189
    T_BREAK (295) 178
    T_CONTINUE (296) 179
    T_RETURN (297) 180
    T_VARIABLE (298) 54 172
    T_NMATCH (299) 148
    T_ASSIGN (300) 39 40 48 81 123
    T_NE (301) 167
    T_EQ (302) 166
    T_SHIFT_LEFT (303) 157
    T_SHIFT_RIGHT (304) 158
    T_OR (305) 161
    T_AND (306) 160
    T_LE (307) 164
    T_GE (308) 165
    T_POWER_TO (309) 159


Nonterminals, with rules where they appear

    $accept (77)
        on left: 0
    file_structure (78)
        on left: 2
        on right: 0
    $@1 (79)
        on left: 1
        on right: 2
    header_delimiter (80)
        on left: 3 4
        on right: 2
    macro_definitions (81)
        on left: 5 6
        on right: 2 6
    element_with_annotations (82)
        on left: 7
        on right: 6
    macro_or_native_function (83)
        on left: 8 9
        on right: 7
    namespace (84)
        on left: 10 11
        on right: 2
    prerequisites (85)
        on left: 12 13
        on right: 2 13
    require (86)
        on left: 14
        on right: 13
    global_declarations (87)
        on left: 15 16 17 18
        on right: 2 16 17 18
    typedef (88)
        on left: 19 20 21
        on right: 18
    struct_definition (89)
        on left: 23
        on right: 20
    $@2 (90)
        on left: 22
        on right: 23
    enum_definition (91)
        on left: 25
        on right: 19
    $@3 (92)
        on left: 24
        on right: 25
    native_type_definition (93)
        on left: 27
        on right: 21
    $@4 (94)
        on left: 26
        on right: 27
    typedef_identifier (95)
        on left: 28 29
        on right: 23 25 27
    struct_element_definitions (96)
        on left: 30 31
        on right: 23 31
    struct_element (97)
        on left: 32
        on right: 30 31
    enum_value_definitions (98)
        on left: 33 34
        on right: 25
    enum_values (99)
        on left: 35 36
        on right: 34 36
    enum_value (100)
        on left: 37
        on right: 35 36
    opt_enum_assignment (101)
        on left: 38 39 40
        on right: 37
    scope (102)
        on left: 41 42
        on right: 58 59 61
    constants (103)
        on left: 43
        on right: 16
    constant_list (104)
        on left: 44 45
        on right: 43 45
    constdef (105)
        on left: 48
        on right: 44 45
    $@5 (106)
        on left: 46
        on right: 48
    $@6 (107)
        on left: 47
        on right: 48
    constant_literal (108)
        on left: 49 50
        on right: 48
    variable_identifier (109)
        on left: 51 52 53
        on right: 32 48 62 63 75 207 212
    variable_reference (110)
        on left: 54 55
        on right: 110 116 117 133 141 169 244
    macro_declaration (111)
        on left: 56 57
        on right: 60
    macro_type (112)
        on left: 58 59
        on right: 60
    macrostart (113)
        on left: 60
        on right: 88 90
    global_var (114)
        on left: 61
        on right: 17
    var_decl (115)
        on left: 62 63
        on right: 61 93 108
    optional_description (116)
        on left: 64 65
        on right: 60
    argument_list (117)
        on left: 66 67
        on right: 60
    non_empty_arguments (118)
        on left: 68 69
        on right: 67 69
    parameter_list (119)
        on left: 70 71
        on right: 229 231 235
    non_empty_parameters (120)
        on left: 72 73 74
        on right: 71 73
    argument_declaration (121)
        on left: 75 76
        on right: 68 69
    annotations (122)
        on left: 77 78
        on right: 7 78
    annotation (123)
        on left: 80
        on right: 78
    $@7 (124)
        on left: 79
        on right: 80
    annotation_value (125)
        on left: 81 82 83
        on right: 85 86
    annotation_values (126)
        on left: 84 85 86
        on right: 80 86
    native_function_definition (127)
        on left: 88
        on right: 8
    $@8 (128)
        on left: 87
        on right: 88
    macro_definition (129)
        on left: 90
        on right: 9
    $@9 (130)
        on left: 89
        on right: 90
    block (131)
        on left: 91
        on right: 90 105
    var_decls (132)
        on left: 92 93
        on right: 91 93
    statement (133)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
        on right: 216 226
    assignment (134)
        on left: 110 112 113 114
        on right: 96
    $@10 (135)
        on left: 111
        on right: 112
    shorthand_assignment (136)
        on left: 116
        on right: 114 200
    $@11 (137)
        on left: 115
        on right: 116
    assignment_target (138)
        on left: 117
        on right: 112 113
    shorthand_assignment_operator (139)
        on left: 118 119 120 121 122
        on right: 116
    assignment_expression (140)
        on left: 123
        on right: 62 110 112 113 169 207
    expression (141)
        on left: 124 125
        on right: 116 123 146 212 246 247
    range_expression (142)
        on left: 126 128
        on right: 125
    $@12 (143)
        on left: 127
        on right: 128
    range_increment (144)
        on left: 129 130
        on right: 128
    minusminus_plusplus (145)
        on left: 131 132
        on right: 133
    increment_expression (146)
        on left: 133
        on right: 106 199
    simple_term (147)
        on left: 134 135 136
        on right: 142 143
    constructor_expression (148)
        on left: 137
        on right: 136
    unary_expression (149)
        on left: 138 139 140 141
        on right: 145
    binary_expression (150)
        on left: 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169
        on right: 113 124 128 130 138 139 140 144 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 170 171 182 204
    condition (151)
        on left: 170 171
        on right: 215 221
    value (152)
        on left: 172 173 174 175
        on right: 134 196 243
    string (153)
        on left: 176 177
        on right: 173 177
    break (154)
        on left: 178
        on right: 101
    continue (155)
        on left: 179
        on right: 102
    return_expression (156)
        on left: 180
        on right: 103
    optional_bterm (157)
        on left: 181 182
        on right: 180
    opt_num (158)
        on left: 183 184
        on right: 178 179
    case_clauses (159)
        on left: 185 186
        on right: 186 196
    case_clause (160)
        on left: 187
        on right: 186
    case_selector (161)
        on left: 188 189
        on right: 187
    case_condition (162)
        on left: 190 191 192
        on right: 188
    label (163)
        on left: 193
        on right: 107
    goto_expression (164)
        on left: 194
        on right: 104
    switch_expression (165)
        on left: 196
        on right: 100
    $@13 (166)
        on left: 195
        on right: 196
    for_loop_expression (167)
        on left: 198
        on right: 99
    $@14 (168)
        on left: 197
        on right: 198
    for_increment (169)
        on left: 199 200
        on right: 204
    for_to_clause (170)
        on left: 204
        on right: 208
    $@15 (171)
        on left: 201
        on right: 204
    $@16 (172)
        on left: 202
        on right: 204
    $@17 (173)
        on left: 203
        on right: 204
    opt_for_initializer (174)
        on left: 205 207
        on right: 204
    $@18 (175)
        on left: 206
        on right: 207
    for_clause (176)
        on left: 208 209 210
        on right: 198
    in_clause (177)
        on left: 212
        on right: 209
    $@19 (178)
        on left: 211
        on right: 212
    while (179)
        on left: 215
        on right: 98
    $@20 (180)
        on left: 213
        on right: 215
    $@21 (181)
        on left: 214
        on right: 215
    local_block (182)
        on left: 216 217
        on right: 198 215 221 224
    closing_brace (183)
        on left: 218
        on right: 91 217
    if_expression (184)
        on left: 221
        on right: 97
    $@22 (185)
        on left: 219
        on right: 221
    $@23 (186)
        on left: 220
        on right: 221
    else_clause (187)
        on left: 222 224
        on right: 221
    $@24 (188)
        on left: 223
        on right: 224
    stmntlist (189)
        on left: 225 226
        on right: 91 187 217 226
    closing_paren (190)
        on left: 227
        on right: 229 231
    call_expression (191)
        on left: 229 231 232 233
        on right: 95 135
    @25 (192)
        on left: 228
        on right: 229
    @26 (193)
        on left: 230
        on right: 231
    array_constructor (194)
        on left: 235
        on right: 232
    @27 (195)
        on left: 234
        on right: 235
    map_constructor (196)
        on left: 237
        on right: 233
    @28 (197)
        on left: 236
        on right: 237
    optional_map_associates (198)
        on left: 238 239
        on right: 237
    map_associates (199)
        on left: 240 241
        on right: 239 241
    map_associate (200)
        on left: 243
        on right: 240 241
    @29 (201)
        on left: 242
        on right: 243
    function_id_or_pointer (202)
        on left: 244 245
        on right: 231
    parameter (203)
        on left: 246 247
        on right: 72 73
    type_cast (204)
        on left: 248
        on right: 143
    type_name (205)
        on left: 249 250
        on right: 32 59 62 63 75 207 212 248
    array_size (206)
        on left: 251 252
        on right: 250
    boolean_literal (207)
        on left: 253 254
        on right: 262
    float_literal (208)
        on left: 255
        on right: 260
    integer_literal (209)
        on left: 256 257
        on right: 190 259
    character_literal (210)
        on left: 258
        on right: 261
    simple_literal (211)
        on left: 259 260 261 262
        on right: 49 174


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    2 file_structure: $@1 . namespace prerequisites global_declarations header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 10 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

   11 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    2 file_structure: $@1 namespace . prerequisites global_declarations header_delimiter macro_definitions

    $default  reduce using rule 12 (prerequisites)

    prerequisites  go to state 7


State 6

   11 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    2 file_structure: $@1 namespace prerequisites . global_declarations header_delimiter macro_definitions
   13 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 15 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

   11 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 11 (namespace)


State 9

   14 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   13 prerequisites: prerequisites require .

    $default  reduce using rule 13 (prerequisites)


State 11

    2 file_structure: $@1 namespace prerequisites global_declarations . header_delimiter macro_definitions
   16 global_declarations: global_declarations . constants ';'
   17                    | global_declarations . global_var ';'
   18                    | global_declarations . T_TYPEDEF typedef ';'

    T_TYPEDEF  shift, and go to state 13
    T_STATIC   shift, and go to state 14
    T_CONST    shift, and go to state 15
    '!'        shift, and go to state 16

    T_STATIC           [reduce using rule 3 (header_delimiter)]
    T_TYPE_IDENTIFIER  reduce using rule 3 (header_delimiter)
    T_TYPE_IDENTIFIER  [reduce using rule 41 (scope)]
    $default           reduce using rule 3 (header_delimiter)

    header_delimiter  go to state 17
    scope             go to state 18
    constants         go to state 19
    global_var        go to state 20


State 12

   14 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 21


State 13

   18 global_declarations: global_declarations T_TYPEDEF . typedef ';'

    T_ENUM    shift, and go to state 22
    T_STRUCT  shift, and go to state 23
    T_NATIVE  shift, and go to state 24

    typedef                 go to state 25
    struct_definition       go to state 26
    enum_definition         go to state 27
    native_type_definition  go to state 28


State 14

   42 scope: T_STATIC .

    $default  reduce using rule 42 (scope)


State 15

   43 constants: T_CONST . constant_list

    $default  reduce using rule 46 ($@5)

    constant_list  go to state 29
    constdef       go to state 30
    $@5            go to state 31


State 16

    4 header_delimiter: '!' .

    $default  reduce using rule 4 (header_delimiter)


State 17

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter . macro_definitions

    T_ANNOTATION  shift, and go to state 32

    $end      reduce using rule 5 (macro_definitions)
    $default  reduce using rule 77 (annotations)

    macro_definitions         go to state 33
    element_with_annotations  go to state 34
    annotations               go to state 35
    annotation                go to state 36


State 18

   61 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 37

    var_decl   go to state 38
    type_name  go to state 39


State 19

   16 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 40


State 20

   17 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 41


State 21

   14 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 14 (require)


State 22

   25 enum_definition: T_ENUM . $@3 '{' enum_value_definitions '}' typedef_identifier

    $default  reduce using rule 24 ($@3)

    $@3  go to state 42


State 23

   23 struct_definition: T_STRUCT . $@2 '{' struct_element_definitions '}' typedef_identifier

    $default  reduce using rule 22 ($@2)

    $@2  go to state 43


State 24

   27 native_type_definition: T_NATIVE . $@4 typedef_identifier

    $default  reduce using rule 26 ($@4)

    $@4  go to state 44


State 25

   18 global_declarations: global_declarations T_TYPEDEF typedef . ';'

    ';'  shift, and go to state 45


State 26

   20 typedef: struct_definition .

    $default  reduce using rule 20 (typedef)


State 27

   19 typedef: enum_definition .

    $default  reduce using rule 19 (typedef)


State 28

   21 typedef: native_type_definition .

    $default  reduce using rule 21 (typedef)


State 29

   43 constants: T_CONST constant_list .
   45 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 46

    $default  reduce using rule 43 (constants)


State 30

   44 constant_list: constdef .

    $default  reduce using rule 44 (constant_list)


State 31

   48 constdef: $@5 . variable_identifier T_ASSIGN constant_literal $@6

    T_IDENT   shift, and go to state 47
    T_NUM     shift, and go to state 48
    T_STRING  shift, and go to state 49

    variable_identifier  go to state 50


State 32

   80 annotation: T_ANNOTATION . $@7 '(' annotation_values ')'

    $default  reduce using rule 79 ($@7)

    $@7  go to state 51


State 33

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter macro_definitions .

    $default  reduce using rule 2 (file_structure)


State 34

    6 macro_definitions: element_with_annotations . macro_definitions

    T_ANNOTATION  shift, and go to state 32

    $end      reduce using rule 5 (macro_definitions)
    $default  reduce using rule 77 (annotations)

    macro_definitions         go to state 52
    element_with_annotations  go to state 34
    annotations               go to state 35
    annotation                go to state 36


State 35

    7 element_with_annotations: annotations . macro_or_native_function

    T_NATIVE  shift, and go to state 53

    $default  reduce using rule 89 ($@9)

    macro_or_native_function    go to state 54
    native_function_definition  go to state 55
    macro_definition            go to state 56
    $@9                         go to state 57


State 36

   78 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 32

    $default  reduce using rule 77 (annotations)

    annotations  go to state 58
    annotation   go to state 36


State 37

  249 type_name: T_TYPE_IDENTIFIER .
  250          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 59

    $default  reduce using rule 249 (type_name)

    array_size  go to state 60


State 38

   61 global_var: scope var_decl .

    $default  reduce using rule 61 (global_var)


State 39

   62 var_decl: type_name . variable_identifier assignment_expression
   63         | type_name . variable_identifier

    T_IDENT   shift, and go to state 47
    T_NUM     shift, and go to state 48
    T_STRING  shift, and go to state 49

    variable_identifier  go to state 61


State 40

   16 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 16 (global_declarations)


State 41

   17 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 17 (global_declarations)


State 42

   25 enum_definition: T_ENUM $@3 . '{' enum_value_definitions '}' typedef_identifier

    '{'  shift, and go to state 62


State 43

   23 struct_definition: T_STRUCT $@2 . '{' struct_element_definitions '}' typedef_identifier

    '{'  shift, and go to state 63


State 44

   27 native_type_definition: T_NATIVE $@4 . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 64
    T_IDENT            shift, and go to state 65

    typedef_identifier  go to state 66


State 45

   18 global_declarations: global_declarations T_TYPEDEF typedef ';' .

    $default  reduce using rule 18 (global_declarations)


State 46

   45 constant_list: constant_list ',' . constdef

    $default  reduce using rule 46 ($@5)

    constdef  go to state 67
    $@5       go to state 31


State 47

   51 variable_identifier: T_IDENT .

    $default  reduce using rule 51 (variable_identifier)


State 48

   52 variable_identifier: T_NUM .

    $default  reduce using rule 52 (variable_identifier)


State 49

   53 variable_identifier: T_STRING .

    $default  reduce using rule 53 (variable_identifier)


State 50

   48 constdef: $@5 variable_identifier . T_ASSIGN constant_literal $@6

    T_ASSIGN  shift, and go to state 68


State 51

   80 annotation: T_ANNOTATION $@7 . '(' annotation_values ')'

    '('  shift, and go to state 69


State 52

    6 macro_definitions: element_with_annotations macro_definitions .

    $default  reduce using rule 6 (macro_definitions)


State 53

   88 native_function_definition: T_NATIVE . $@8 macrostart

    $default  reduce using rule 87 ($@8)

    $@8  go to state 70


State 54

    7 element_with_annotations: annotations macro_or_native_function .

    $default  reduce using rule 7 (element_with_annotations)


State 55

    8 macro_or_native_function: native_function_definition . ';'

    ';'  shift, and go to state 71


State 56

    9 macro_or_native_function: macro_definition .

    $default  reduce using rule 9 (macro_or_native_function)


State 57

   90 macro_definition: $@9 . macrostart block

    T_STATIC  shift, and go to state 14

    $default  reduce using rule 41 (scope)

    scope       go to state 72
    macro_type  go to state 73
    macrostart  go to state 74


State 58

   78 annotations: annotation annotations .

    $default  reduce using rule 78 (annotations)


State 59

  251 array_size: '[' . ']'
  252           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 75
    ']'    shift, and go to state 76


State 60

  250 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 250 (type_name)


State 61

   62 var_decl: type_name variable_identifier . assignment_expression
   63         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 77

    $default  reduce using rule 63 (var_decl)

    assignment_expression  go to state 78


State 62

   25 enum_definition: T_ENUM $@3 '{' . enum_value_definitions '}' typedef_identifier

    T_IDENT  shift, and go to state 79

    $default  reduce using rule 33 (enum_value_definitions)

    enum_value_definitions  go to state 80
    enum_values             go to state 81
    enum_value              go to state 82


State 63

   23 struct_definition: T_STRUCT $@2 '{' . struct_element_definitions '}' typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 37

    struct_element_definitions  go to state 83
    struct_element              go to state 84
    type_name                   go to state 85


State 64

   29 typedef_identifier: T_TYPE_IDENTIFIER .

    $default  reduce using rule 29 (typedef_identifier)


State 65

   28 typedef_identifier: T_IDENT .

    $default  reduce using rule 28 (typedef_identifier)


State 66

   27 native_type_definition: T_NATIVE $@4 typedef_identifier .

    $default  reduce using rule 27 (native_type_definition)


State 67

   45 constant_list: constant_list ',' constdef .

    $default  reduce using rule 45 (constant_list)


State 68

   48 constdef: $@5 variable_identifier T_ASSIGN . constant_literal $@6

    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 88
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    '-'                      shift, and go to state 92

    constant_literal   go to state 93
    boolean_literal    go to state 94
    float_literal      go to state 95
    integer_literal    go to state 96
    character_literal  go to state 97
    simple_literal     go to state 98


State 69

   80 annotation: T_ANNOTATION $@7 '(' . annotation_values ')'

    T_IDENT   shift, and go to state 99
    T_STRING  shift, and go to state 100

    $default  reduce using rule 84 (annotation_values)

    annotation_value   go to state 101
    annotation_values  go to state 102


State 70

   88 native_function_definition: T_NATIVE $@8 . macrostart

    T_STATIC  shift, and go to state 14

    $default  reduce using rule 41 (scope)

    scope       go to state 72
    macro_type  go to state 73
    macrostart  go to state 103


State 71

    8 macro_or_native_function: native_function_definition ';' .

    $default  reduce using rule 8 (macro_or_native_function)


State 72

   58 macro_type: scope . T_VOID
   59           | scope . type_name

    T_VOID             shift, and go to state 104
    T_TYPE_IDENTIFIER  shift, and go to state 37

    type_name  go to state 105


State 73

   60 macrostart: macro_type . macro_declaration '(' argument_list ')' optional_description

    T_IDENT  shift, and go to state 106
    T_FUNC   shift, and go to state 107

    macro_declaration  go to state 108


State 74

   90 macro_definition: $@9 macrostart . block

    '{'  shift, and go to state 109

    block  go to state 110


State 75

  252 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 111


State 76

  251 array_size: '[' ']' .

    $default  reduce using rule 251 (array_size)


State 77

  123 assignment_expression: T_ASSIGN . expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    T_IDENT     [reduce using rule 126 (range_expression)]
    T_FUNC      [reduce using rule 126 (range_expression)]
    T_VARIABLE  [reduce using rule 126 (range_expression)]
    '~'         [reduce using rule 126 (range_expression)]
    '+'         [reduce using rule 126 (range_expression)]
    '-'         [reduce using rule 126 (range_expression)]
    '*'         [reduce using rule 126 (range_expression)]
    '['         [reduce using rule 126 (range_expression)]
    '{'         [reduce using rule 126 (range_expression)]
    $default    reduce using rule 126 (range_expression)

    variable_reference      go to state 125
    expression              go to state 126
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 78

   62 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 62 (var_decl)


State 79

   37 enum_value: T_IDENT . opt_enum_assignment

    T_ASSIGN  shift, and go to state 140

    $default  reduce using rule 38 (opt_enum_assignment)

    opt_enum_assignment  go to state 141


State 80

   25 enum_definition: T_ENUM $@3 '{' enum_value_definitions . '}' typedef_identifier

    '}'  shift, and go to state 142


State 81

   34 enum_value_definitions: enum_values .

    $default  reduce using rule 34 (enum_value_definitions)


State 82

   35 enum_values: enum_value .
   36            | enum_value . ',' enum_values

    ','  shift, and go to state 143

    $default  reduce using rule 35 (enum_values)


State 83

   23 struct_definition: T_STRUCT $@2 '{' struct_element_definitions . '}' typedef_identifier

    '}'  shift, and go to state 144


State 84

   30 struct_element_definitions: struct_element .
   31                           | struct_element . struct_element_definitions

    T_TYPE_IDENTIFIER  shift, and go to state 37

    $default  reduce using rule 30 (struct_element_definitions)

    struct_element_definitions  go to state 145
    struct_element              go to state 84
    type_name                   go to state 85


State 85

   32 struct_element: type_name . variable_identifier ';'

    T_IDENT   shift, and go to state 47
    T_NUM     shift, and go to state 48
    T_STRING  shift, and go to state 49

    variable_identifier  go to state 146


State 86

  256 integer_literal: T_NUM .

    $default  reduce using rule 256 (integer_literal)


State 87

  255 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 255 (float_literal)


State 88

   50 constant_literal: T_STRING .

    $default  reduce using rule 50 (constant_literal)


State 89

  258 character_literal: T_CHARACTER .

    $default  reduce using rule 258 (character_literal)


State 90

  253 boolean_literal: T_TRUE .

    $default  reduce using rule 253 (boolean_literal)


State 91

  254 boolean_literal: T_FALSE .

    $default  reduce using rule 254 (boolean_literal)


State 92

  257 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 147


State 93

   48 constdef: $@5 variable_identifier T_ASSIGN constant_literal . $@6

    $default  reduce using rule 47 ($@6)

    $@6  go to state 148


State 94

  262 simple_literal: boolean_literal .

    $default  reduce using rule 262 (simple_literal)


State 95

  260 simple_literal: float_literal .

    $default  reduce using rule 260 (simple_literal)


State 96

  259 simple_literal: integer_literal .

    $default  reduce using rule 259 (simple_literal)


State 97

  261 simple_literal: character_literal .

    $default  reduce using rule 261 (simple_literal)


State 98

   49 constant_literal: simple_literal .

    $default  reduce using rule 49 (constant_literal)


State 99

   81 annotation_value: T_IDENT . T_ASSIGN T_STRING
   82                 | T_IDENT .

    T_ASSIGN  shift, and go to state 149

    $default  reduce using rule 82 (annotation_value)


State 100

   83 annotation_value: T_STRING .

    $default  reduce using rule 83 (annotation_value)


State 101

   85 annotation_values: annotation_value .
   86                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 150

    $default  reduce using rule 85 (annotation_values)


State 102

   80 annotation: T_ANNOTATION $@7 '(' annotation_values . ')'

    ')'  shift, and go to state 151


State 103

   88 native_function_definition: T_NATIVE $@8 macrostart .

    $default  reduce using rule 88 (native_function_definition)


State 104

   58 macro_type: scope T_VOID .

    $default  reduce using rule 58 (macro_type)


State 105

   59 macro_type: scope type_name .

    $default  reduce using rule 59 (macro_type)


State 106

   56 macro_declaration: T_IDENT .

    $default  reduce using rule 56 (macro_declaration)


State 107

   57 macro_declaration: T_FUNC .

    $default  reduce using rule 57 (macro_declaration)


State 108

   60 macrostart: macro_type macro_declaration . '(' argument_list ')' optional_description

    '('  shift, and go to state 152


State 109

   91 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 92 (var_decls)

    var_decls  go to state 153


State 110

   90 macro_definition: $@9 macrostart block .

    $default  reduce using rule 90 (macro_definition)


State 111

  252 array_size: '[' T_NUM ']' .

    $default  reduce using rule 252 (array_size)


State 112

  137 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 154


State 113

   55 variable_reference: T_IDENT .
  175 value: T_IDENT .
  245 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 55 (variable_reference)
    '('       reduce using rule 245 (function_id_or_pointer)
    $default  reduce using rule 175 (value)


State 114

  176 string: T_STRING .

    $default  reduce using rule 176 (string)


State 115

  229 call_expression: T_FUNC . '(' @25 parameter_list closing_paren

    '('  shift, and go to state 155


State 116

   54 variable_reference: T_VARIABLE .
  172 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 54 (variable_reference)
    $default  reduce using rule 172 (value)


State 117

  138 unary_expression: '!' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 156
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 118

  139 unary_expression: '~' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 157
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 119

  140 unary_expression: '+' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 158
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 120

  141 unary_expression: '-' . variable_reference
  257 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 159
    T_NUM       shift, and go to state 147
    T_VARIABLE  shift, and go to state 160

    variable_reference  go to state 161


State 121

  244 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 159
    T_VARIABLE  shift, and go to state 160

    variable_reference  go to state 162


State 122

  235 array_constructor: '[' . @27 parameter_list ']'

    $default  reduce using rule 234 (@27)

    @27  go to state 163


State 123

  237 map_constructor: '{' . @28 optional_map_associates '}'

    $default  reduce using rule 236 (@28)

    @28  go to state 164


State 124

  168 binary_expression: '(' . binary_expression ')'
  248 type_cast: '(' . type_name ')'

    T_NEW                    shift, and go to state 112
    T_TYPE_IDENTIFIER        shift, and go to state 37
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 165
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    type_name               go to state 166
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 125

  169 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 77

    assignment_expression  go to state 167


State 126

  123 assignment_expression: T_ASSIGN expression .

    $default  reduce using rule 123 (assignment_expression)


State 127

  125 expression: range_expression .

    $default  reduce using rule 125 (expression)


State 128

  142 binary_expression: simple_term .

    $default  reduce using rule 142 (binary_expression)


State 129

  136 simple_term: constructor_expression .

    $default  reduce using rule 136 (simple_term)


State 130

  145 binary_expression: unary_expression .

    $default  reduce using rule 145 (binary_expression)


State 131

  124 expression: binary_expression .
  128 range_expression: binary_expression . T_DOTDOT binary_expression $@12 range_increment
  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 168
    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_OR           shift, and go to state 174
    T_AND          shift, and go to state 175
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    T_DOTDOT       [reduce using rule 124 (expression)]
    T_NMATCH       [reduce using rule 124 (expression)]
    T_NE           [reduce using rule 124 (expression)]
    T_EQ           [reduce using rule 124 (expression)]
    T_SHIFT_LEFT   [reduce using rule 124 (expression)]
    T_SHIFT_RIGHT  [reduce using rule 124 (expression)]
    T_OR           [reduce using rule 124 (expression)]
    T_AND          [reduce using rule 124 (expression)]
    T_LE           [reduce using rule 124 (expression)]
    T_GE           [reduce using rule 124 (expression)]
    T_POWER_TO     [reduce using rule 124 (expression)]
    '&'            [reduce using rule 124 (expression)]
    '|'            [reduce using rule 124 (expression)]
    '^'            [reduce using rule 124 (expression)]
    '~'            [reduce using rule 124 (expression)]
    '<'            [reduce using rule 124 (expression)]
    '>'            [reduce using rule 124 (expression)]
    '+'            [reduce using rule 124 (expression)]
    '-'            [reduce using rule 124 (expression)]
    '*'            [reduce using rule 124 (expression)]
    '/'            [reduce using rule 124 (expression)]
    '%'            [reduce using rule 124 (expression)]
    '['            [reduce using rule 124 (expression)]
    '.'            [reduce using rule 124 (expression)]
    $default       reduce using rule 124 (expression)


State 132

  134 simple_term: value .

    $default  reduce using rule 134 (simple_term)


State 133

  173 value: string .
  177 string: string . T_STRING

    T_STRING  shift, and go to state 192

    $default  reduce using rule 173 (value)


State 134

  135 simple_term: call_expression .

    $default  reduce using rule 135 (simple_term)


State 135

  232 call_expression: array_constructor .

    $default  reduce using rule 232 (call_expression)


State 136

  233 call_expression: map_constructor .

    $default  reduce using rule 233 (call_expression)


State 137

  231 call_expression: function_id_or_pointer . '(' @26 parameter_list closing_paren

    '('  shift, and go to state 193


State 138

  143 binary_expression: type_cast . simple_term

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 194
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 195
    '-'                      shift, and go to state 92
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123

    simple_term             go to state 196
    constructor_expression  go to state 129
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 139

  174 value: simple_literal .

    $default  reduce using rule 174 (value)


State 140

   39 opt_enum_assignment: T_ASSIGN . T_NUM
   40                    | T_ASSIGN . '-' T_NUM

    T_NUM  shift, and go to state 197
    '-'    shift, and go to state 198


State 141

   37 enum_value: T_IDENT opt_enum_assignment .

    $default  reduce using rule 37 (enum_value)


State 142

   25 enum_definition: T_ENUM $@3 '{' enum_value_definitions '}' . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 64
    T_IDENT            shift, and go to state 65

    typedef_identifier  go to state 199


State 143

   36 enum_values: enum_value ',' . enum_values

    T_IDENT  shift, and go to state 79

    enum_values  go to state 200
    enum_value   go to state 82


State 144

   23 struct_definition: T_STRUCT $@2 '{' struct_element_definitions '}' . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 64
    T_IDENT            shift, and go to state 65

    typedef_identifier  go to state 201


State 145

   31 struct_element_definitions: struct_element struct_element_definitions .

    $default  reduce using rule 31 (struct_element_definitions)


State 146

   32 struct_element: type_name variable_identifier . ';'

    ';'  shift, and go to state 202


State 147

  257 integer_literal: '-' T_NUM .

    $default  reduce using rule 257 (integer_literal)


State 148

   48 constdef: $@5 variable_identifier T_ASSIGN constant_literal $@6 .

    $default  reduce using rule 48 (constdef)


State 149

   81 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 203


State 150

   86 annotation_values: annotation_value ',' . annotation_values

    T_IDENT   shift, and go to state 99
    T_STRING  shift, and go to state 100

    $default  reduce using rule 84 (annotation_values)

    annotation_value   go to state 101
    annotation_values  go to state 204


State 151

   80 annotation: T_ANNOTATION $@7 '(' annotation_values ')' .

    $default  reduce using rule 80 (annotation)


State 152

   60 macrostart: macro_type macro_declaration '(' . argument_list ')' optional_description

    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_ELLIPSIS         shift, and go to state 205

    $default  reduce using rule 66 (argument_list)

    argument_list         go to state 206
    non_empty_arguments   go to state 207
    argument_declaration  go to state 208
    type_name             go to state 209


State 153

   91 block: '{' var_decls . stmntlist closing_brace
   93 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 210
    T_FOR              shift, and go to state 211
    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_IDENT            shift, and go to state 212
    T_FUNC             shift, and go to state 115
    T_IF               shift, and go to state 213
    T_WHILE            shift, and go to state 214
    T_GOTO             shift, and go to state 215
    T_SWITCH           shift, and go to state 216
    T_BREAK            shift, and go to state 217
    T_CONTINUE         shift, and go to state 218
    T_RETURN           shift, and go to state 219
    T_VARIABLE         shift, and go to state 160
    '*'                shift, and go to state 121
    '['                shift, and go to state 122
    ';'                shift, and go to state 220
    '{'                shift, and go to state 221

    '}'  reduce using rule 225 (stmntlist)

    variable_reference      go to state 222
    var_decl                go to state 223
    block                   go to state 224
    statement               go to state 225
    assignment              go to state 226
    shorthand_assignment    go to state 227
    assignment_target       go to state 228
    increment_expression    go to state 229
    break                   go to state 230
    continue                go to state 231
    return_expression       go to state 232
    label                   go to state 233
    goto_expression         go to state 234
    switch_expression       go to state 235
    for_loop_expression     go to state 236
    while                   go to state 237
    if_expression           go to state 238
    stmntlist               go to state 239
    call_expression         go to state 240
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_name               go to state 39


State 154

  137 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 241


State 155

  229 call_expression: T_FUNC '(' . @25 parameter_list closing_paren

    $default  reduce using rule 228 (@25)

    @25  go to state 242


State 156

  138 unary_expression: '!' binary_expression .
  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 138 (unary_expression)


State 157

  139 unary_expression: '~' binary_expression .
  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 139 (unary_expression)


State 158

  140 unary_expression: '+' binary_expression .
  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 178
    '*'         shift, and go to state 187
    '/'         shift, and go to state 188
    '%'         shift, and go to state 189
    '['         shift, and go to state 190
    '.'         shift, and go to state 191

    $default  reduce using rule 140 (unary_expression)


State 159

   55 variable_reference: T_IDENT .

    $default  reduce using rule 55 (variable_reference)


State 160

   54 variable_reference: T_VARIABLE .

    $default  reduce using rule 54 (variable_reference)


State 161

  141 unary_expression: '-' variable_reference .

    $default  reduce using rule 141 (unary_expression)


State 162

  244 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 244 (function_id_or_pointer)


State 163

  235 array_constructor: '[' @27 . parameter_list ']'

    error                    shift, and go to state 243
    T_NEW                    shift, and go to state 112
    T_ELLIPSIS               shift, and go to state 244
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    ','  reduce using rule 126 (range_expression)
    ']'  reduce using rule 70 (parameter_list)
    ']'  [reduce using rule 126 (range_expression)]

    variable_reference      go to state 125
    parameter_list          go to state 245
    non_empty_parameters    go to state 246
    expression              go to state 247
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    parameter               go to state 248
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 164

  237 map_constructor: '{' @28 . optional_map_associates '}'

    T_STRING  shift, and go to state 249

    $default  reduce using rule 238 (optional_map_associates)

    optional_map_associates  go to state 250
    map_associates           go to state 251
    map_associate            go to state 252


State 165

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression
  168                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_OR           shift, and go to state 174
    T_AND          shift, and go to state 175
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191
    ')'            shift, and go to state 253


State 166

  248 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 254


State 167

  169 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 169 (binary_expression)


State 168

  128 range_expression: binary_expression T_DOTDOT . binary_expression $@12 range_increment

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 255
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 169

  148 binary_expression: binary_expression T_NMATCH . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 256
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 170

  167 binary_expression: binary_expression T_NE . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 257
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 171

  166 binary_expression: binary_expression T_EQ . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 258
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 172

  157 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 259
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 173

  158 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 260
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 174

  161 binary_expression: binary_expression T_OR . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 261
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 175

  160 binary_expression: binary_expression T_AND . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 262
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 176

  164 binary_expression: binary_expression T_LE . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 263
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 177

  165 binary_expression: binary_expression T_GE . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 264
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 178

  159 binary_expression: binary_expression T_POWER_TO . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 265
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 179

  149 binary_expression: binary_expression '&' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 266
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 180

  150 binary_expression: binary_expression '|' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 267
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 181

  152 binary_expression: binary_expression '^' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 268
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 182

  147 binary_expression: binary_expression '~' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 269
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 183

  162 binary_expression: binary_expression '<' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 270
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 184

  163 binary_expression: binary_expression '>' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 271
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 185

  151 binary_expression: binary_expression '+' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 272
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 186

  153 binary_expression: binary_expression '-' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 273
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 187

  154 binary_expression: binary_expression '*' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 274
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 188

  155 binary_expression: binary_expression '/' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 275
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 189

  156 binary_expression: binary_expression '%' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 276
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 190

  146 binary_expression: binary_expression '[' . expression ']'

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    $default  reduce using rule 126 (range_expression)

    variable_reference      go to state 125
    expression              go to state 277
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 191

  144 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 278


State 192

  177 string: string T_STRING .

    $default  reduce using rule 177 (string)


State 193

  231 call_expression: function_id_or_pointer '(' . @26 parameter_list closing_paren

    $default  reduce using rule 230 (@26)

    @26  go to state 279


State 194

  175 value: T_IDENT .
  245 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 245 (function_id_or_pointer)
    $default  reduce using rule 175 (value)


State 195

  172 value: T_VARIABLE .

    $default  reduce using rule 172 (value)


State 196

  143 binary_expression: type_cast simple_term .

    $default  reduce using rule 143 (binary_expression)


State 197

   39 opt_enum_assignment: T_ASSIGN T_NUM .

    $default  reduce using rule 39 (opt_enum_assignment)


State 198

   40 opt_enum_assignment: T_ASSIGN '-' . T_NUM

    T_NUM  shift, and go to state 280


State 199

   25 enum_definition: T_ENUM $@3 '{' enum_value_definitions '}' typedef_identifier .

    $default  reduce using rule 25 (enum_definition)


State 200

   36 enum_values: enum_value ',' enum_values .

    $default  reduce using rule 36 (enum_values)


State 201

   23 struct_definition: T_STRUCT $@2 '{' struct_element_definitions '}' typedef_identifier .

    $default  reduce using rule 23 (struct_definition)


State 202

   32 struct_element: type_name variable_identifier ';' .

    $default  reduce using rule 32 (struct_element)


State 203

   81 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 81 (annotation_value)


State 204

   86 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 86 (annotation_values)


State 205

   76 argument_declaration: T_ELLIPSIS .

    $default  reduce using rule 76 (argument_declaration)


State 206

   60 macrostart: macro_type macro_declaration '(' argument_list . ')' optional_description

    ')'  shift, and go to state 281


State 207

   67 argument_list: non_empty_arguments .
   69 non_empty_arguments: non_empty_arguments . ',' argument_declaration

    ','  shift, and go to state 282

    $default  reduce using rule 67 (argument_list)


State 208

   68 non_empty_arguments: argument_declaration .

    $default  reduce using rule 68 (non_empty_arguments)


State 209

   75 argument_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 47
    T_NUM     shift, and go to state 48
    T_STRING  shift, and go to state 49

    variable_identifier  go to state 283


State 210

  109 statement: error . ';'

    ';'  shift, and go to state 284


State 211

  198 for_loop_expression: T_FOR . for_clause $@14 local_block

    error  shift, and go to state 285
    '('    shift, and go to state 286

    for_to_clause  go to state 287
    for_clause     go to state 288
    in_clause      go to state 289


State 212

   55 variable_reference: T_IDENT .
  193 label: T_IDENT . ':'
  245 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 290

    '('       reduce using rule 245 (function_id_or_pointer)
    $default  reduce using rule 55 (variable_reference)


State 213

  221 if_expression: T_IF . condition $@22 local_block $@23 else_clause

    '('  shift, and go to state 291

    condition  go to state 292


State 214

  215 while: T_WHILE . $@20 condition $@21 local_block

    $default  reduce using rule 213 ($@20)

    $@20  go to state 293


State 215

  194 goto_expression: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 294


State 216

  196 switch_expression: T_SWITCH . '(' value ')' $@13 '{' case_clauses '}'

    '('  shift, and go to state 295


State 217

  178 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 296

    $default  reduce using rule 183 (opt_num)

    opt_num  go to state 297


State 218

  179 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 296

    $default  reduce using rule 183 (opt_num)

    opt_num  go to state 298


State 219

  180 return_expression: T_RETURN . optional_bterm

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    $default  reduce using rule 181 (optional_bterm)

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 299
    value                   go to state 132
    string                  go to state 133
    optional_bterm          go to state 300
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 220

   94 statement: ';' .

    $default  reduce using rule 94 (statement)


State 221

   91 block: '{' . var_decls stmntlist closing_brace
  237 map_constructor: '{' . @28 optional_map_associates '}'

    T_STRING  reduce using rule 236 (@28)
    '}'       reduce using rule 92 (var_decls)
    '}'       [reduce using rule 236 (@28)]
    $default  reduce using rule 92 (var_decls)

    var_decls  go to state 153
    @28        go to state 164


State 222

  110 assignment: variable_reference . assignment_expression
  116 shorthand_assignment: variable_reference . $@11 shorthand_assignment_operator expression
  117 assignment_target: variable_reference .
  133 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 301
    T_MINUSMINUS  shift, and go to state 302
    T_ASSIGN      shift, and go to state 77

    '['       reduce using rule 117 (assignment_target)
    '.'       reduce using rule 117 (assignment_target)
    $default  reduce using rule 115 ($@11)

    $@11                   go to state 303
    assignment_expression  go to state 304
    minusminus_plusplus    go to state 305


State 223

   93 var_decls: var_decls var_decl . ';'
  108 statement: var_decl .

    ';'  shift, and go to state 306

    ';'       [reduce using rule 108 (statement)]
    $default  reduce using rule 108 (statement)


State 224

  105 statement: block .

    $default  reduce using rule 105 (statement)


State 225

  226 stmntlist: statement . stmntlist

    error              shift, and go to state 210
    T_FOR              shift, and go to state 211
    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_IDENT            shift, and go to state 212
    T_FUNC             shift, and go to state 115
    T_IF               shift, and go to state 213
    T_WHILE            shift, and go to state 214
    T_GOTO             shift, and go to state 215
    T_SWITCH           shift, and go to state 216
    T_BREAK            shift, and go to state 217
    T_CONTINUE         shift, and go to state 218
    T_RETURN           shift, and go to state 219
    T_VARIABLE         shift, and go to state 160
    '*'                shift, and go to state 121
    '['                shift, and go to state 122
    ';'                shift, and go to state 220
    '{'                shift, and go to state 221

    T_CASE     reduce using rule 225 (stmntlist)
    T_DEFAULT  reduce using rule 225 (stmntlist)
    '}'        reduce using rule 225 (stmntlist)

    variable_reference      go to state 222
    var_decl                go to state 307
    block                   go to state 224
    statement               go to state 225
    assignment              go to state 226
    shorthand_assignment    go to state 227
    assignment_target       go to state 228
    increment_expression    go to state 229
    break                   go to state 230
    continue                go to state 231
    return_expression       go to state 232
    label                   go to state 233
    goto_expression         go to state 234
    switch_expression       go to state 235
    for_loop_expression     go to state 236
    while                   go to state 237
    if_expression           go to state 238
    stmntlist               go to state 308
    call_expression         go to state 240
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_name               go to state 39


State 226

   96 statement: assignment . ';'

    ';'  shift, and go to state 309


State 227

  114 assignment: shorthand_assignment .

    $default  reduce using rule 114 (assignment)


State 228

  112 assignment: assignment_target . '.' T_IDENT $@10 assignment_expression
  113           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 310
    '.'  shift, and go to state 311


State 229

  106 statement: increment_expression . ';'

    ';'  shift, and go to state 312


State 230

  101 statement: break .

    $default  reduce using rule 101 (statement)


State 231

  102 statement: continue .

    $default  reduce using rule 102 (statement)


State 232

  103 statement: return_expression . ';'

    ';'  shift, and go to state 313


State 233

  107 statement: label .

    $default  reduce using rule 107 (statement)


State 234

  104 statement: goto_expression . ';'

    ';'  shift, and go to state 314


State 235

  100 statement: switch_expression .

    $default  reduce using rule 100 (statement)


State 236

   99 statement: for_loop_expression .

    $default  reduce using rule 99 (statement)


State 237

   98 statement: while .

    $default  reduce using rule 98 (statement)


State 238

   97 statement: if_expression .

    $default  reduce using rule 97 (statement)


State 239

   91 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 315

    closing_brace  go to state 316


State 240

   95 statement: call_expression . ';'

    ';'  shift, and go to state 317


State 241

  137 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 318


State 242

  229 call_expression: T_FUNC '(' @25 . parameter_list closing_paren

    error                    shift, and go to state 243
    T_NEW                    shift, and go to state 112
    T_ELLIPSIS               shift, and go to state 244
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    ','  reduce using rule 126 (range_expression)
    ')'  reduce using rule 70 (parameter_list)
    ')'  [reduce using rule 126 (range_expression)]

    variable_reference      go to state 125
    parameter_list          go to state 319
    non_empty_parameters    go to state 246
    expression              go to state 247
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    parameter               go to state 248
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 243

   74 non_empty_parameters: error .

    $default  reduce using rule 74 (non_empty_parameters)


State 244

  247 parameter: T_ELLIPSIS . expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    $default  reduce using rule 126 (range_expression)

    variable_reference      go to state 125
    expression              go to state 320
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 245

  235 array_constructor: '[' @27 parameter_list . ']'

    ']'  shift, and go to state 321


State 246

   71 parameter_list: non_empty_parameters .
   73 non_empty_parameters: non_empty_parameters . ',' parameter

    ','  shift, and go to state 322

    $default  reduce using rule 71 (parameter_list)


State 247

  246 parameter: expression .

    $default  reduce using rule 246 (parameter)


State 248

   72 non_empty_parameters: parameter .

    $default  reduce using rule 72 (non_empty_parameters)


State 249

  243 map_associate: T_STRING . ':' @29 value

    ':'  shift, and go to state 323


State 250

  237 map_constructor: '{' @28 optional_map_associates . '}'

    '}'  shift, and go to state 324


State 251

  239 optional_map_associates: map_associates .
  241 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 325

    $default  reduce using rule 239 (optional_map_associates)


State 252

  240 map_associates: map_associate .

    $default  reduce using rule 240 (map_associates)


State 253

  168 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 168 (binary_expression)


State 254

  248 type_cast: '(' type_name ')' .

    $default  reduce using rule 248 (type_cast)


State 255

  128 range_expression: binary_expression T_DOTDOT binary_expression . $@12 range_increment
  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_OR           shift, and go to state 174
    T_AND          shift, and go to state 175
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    T_NMATCH       [reduce using rule 127 ($@12)]
    T_NE           [reduce using rule 127 ($@12)]
    T_EQ           [reduce using rule 127 ($@12)]
    T_SHIFT_LEFT   [reduce using rule 127 ($@12)]
    T_SHIFT_RIGHT  [reduce using rule 127 ($@12)]
    T_OR           [reduce using rule 127 ($@12)]
    T_AND          [reduce using rule 127 ($@12)]
    T_LE           [reduce using rule 127 ($@12)]
    T_GE           [reduce using rule 127 ($@12)]
    T_POWER_TO     [reduce using rule 127 ($@12)]
    '&'            [reduce using rule 127 ($@12)]
    '|'            [reduce using rule 127 ($@12)]
    '^'            [reduce using rule 127 ($@12)]
    '~'            [reduce using rule 127 ($@12)]
    '<'            [reduce using rule 127 ($@12)]
    '>'            [reduce using rule 127 ($@12)]
    '+'            [reduce using rule 127 ($@12)]
    '-'            [reduce using rule 127 ($@12)]
    '*'            [reduce using rule 127 ($@12)]
    '/'            [reduce using rule 127 ($@12)]
    '%'            [reduce using rule 127 ($@12)]
    '['            [reduce using rule 127 ($@12)]
    '.'            [reduce using rule 127 ($@12)]
    $default       reduce using rule 127 ($@12)

    $@12  go to state 326


State 256

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  148                  | binary_expression T_NMATCH binary_expression .
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 148 (binary_expression)


State 257

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression
  167                  | binary_expression T_NE binary_expression .

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 167 (binary_expression)


State 258

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  166                  | binary_expression T_EQ binary_expression .
  167                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 166 (binary_expression)


State 259

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  157                  | binary_expression T_SHIFT_LEFT binary_expression .
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 178
    '+'         shift, and go to state 185
    '-'         shift, and go to state 186
    '*'         shift, and go to state 187
    '/'         shift, and go to state 188
    '%'         shift, and go to state 189
    '['         shift, and go to state 190
    '.'         shift, and go to state 191

    $default  reduce using rule 157 (binary_expression)


State 260

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  158                  | binary_expression T_SHIFT_RIGHT binary_expression .
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 178
    '+'         shift, and go to state 185
    '-'         shift, and go to state 186
    '*'         shift, and go to state 187
    '/'         shift, and go to state 188
    '%'         shift, and go to state 189
    '['         shift, and go to state 190
    '.'         shift, and go to state 191

    $default  reduce using rule 158 (binary_expression)


State 261

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  161                  | binary_expression T_OR binary_expression .
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 161 (binary_expression)


State 262

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  160                  | binary_expression T_AND binary_expression .
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 160 (binary_expression)


State 263

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  164                  | binary_expression T_LE binary_expression .
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_POWER_TO     shift, and go to state 178
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 164 (binary_expression)


State 264

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  165                  | binary_expression T_GE binary_expression .
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_POWER_TO     shift, and go to state 178
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 165 (binary_expression)


State 265

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  159                  | binary_expression T_POWER_TO binary_expression .
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 190
    '.'  shift, and go to state 191

    $default  reduce using rule 159 (binary_expression)


State 266

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  149                  | binary_expression '&' binary_expression .
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 149 (binary_expression)


State 267

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  150                  | binary_expression '|' binary_expression .
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 150 (binary_expression)


State 268

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  152                  | binary_expression '^' binary_expression .
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 152 (binary_expression)


State 269

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  147                  | binary_expression '~' binary_expression .
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 147 (binary_expression)


State 270

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  162                  | binary_expression '<' binary_expression .
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_POWER_TO     shift, and go to state 178
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 162 (binary_expression)


State 271

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  163                  | binary_expression '>' binary_expression .
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_POWER_TO     shift, and go to state 178
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 163 (binary_expression)


State 272

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  151                  | binary_expression '+' binary_expression .
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 178
    '*'         shift, and go to state 187
    '/'         shift, and go to state 188
    '%'         shift, and go to state 189
    '['         shift, and go to state 190
    '.'         shift, and go to state 191

    $default  reduce using rule 151 (binary_expression)


State 273

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  153                  | binary_expression '-' binary_expression .
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 178
    '*'         shift, and go to state 187
    '/'         shift, and go to state 188
    '%'         shift, and go to state 189
    '['         shift, and go to state 190
    '.'         shift, and go to state 191

    $default  reduce using rule 153 (binary_expression)


State 274

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  154                  | binary_expression '*' binary_expression .
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 190
    '.'  shift, and go to state 191

    $default  reduce using rule 154 (binary_expression)


State 275

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  155                  | binary_expression '/' binary_expression .
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 190
    '.'  shift, and go to state 191

    $default  reduce using rule 155 (binary_expression)


State 276

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  156                  | binary_expression '%' binary_expression .
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 190
    '.'  shift, and go to state 191

    $default  reduce using rule 156 (binary_expression)


State 277

  146 binary_expression: binary_expression '[' expression . ']'

    ']'  shift, and go to state 327


State 278

  144 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 144 (binary_expression)


State 279

  231 call_expression: function_id_or_pointer '(' @26 . parameter_list closing_paren

    error                    shift, and go to state 243
    T_NEW                    shift, and go to state 112
    T_ELLIPSIS               shift, and go to state 244
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    ','  reduce using rule 126 (range_expression)
    ')'  reduce using rule 70 (parameter_list)
    ')'  [reduce using rule 126 (range_expression)]

    variable_reference      go to state 125
    parameter_list          go to state 328
    non_empty_parameters    go to state 246
    expression              go to state 247
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    parameter               go to state 248
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 280

   40 opt_enum_assignment: T_ASSIGN '-' T_NUM .

    $default  reduce using rule 40 (opt_enum_assignment)


State 281

   60 macrostart: macro_type macro_declaration '(' argument_list ')' . optional_description

    T_STRING  shift, and go to state 329

    $default  reduce using rule 64 (optional_description)

    optional_description  go to state 330


State 282

   69 non_empty_arguments: non_empty_arguments ',' . argument_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_ELLIPSIS         shift, and go to state 205

    argument_declaration  go to state 331
    type_name             go to state 209


State 283

   75 argument_declaration: type_name variable_identifier .

    $default  reduce using rule 75 (argument_declaration)


State 284

  109 statement: error ';' .

    $default  reduce using rule 109 (statement)


State 285

  210 for_clause: error .

    $default  reduce using rule 210 (for_clause)


State 286

  204 for_to_clause: '(' . opt_for_initializer $@15 ';' binary_expression ';' $@16 for_increment $@17 ')'
  212 in_clause: '(' . type_name variable_identifier $@19 ':' expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 37

    $default  reduce using rule 205 (opt_for_initializer)

    opt_for_initializer  go to state 332
    type_name            go to state 333


State 287

  208 for_clause: for_to_clause .

    $default  reduce using rule 208 (for_clause)


State 288

  198 for_loop_expression: T_FOR for_clause . $@14 local_block

    $default  reduce using rule 197 ($@14)

    $@14  go to state 334


State 289

  209 for_clause: in_clause .

    $default  reduce using rule 209 (for_clause)


State 290

  193 label: T_IDENT ':' .

    $default  reduce using rule 193 (label)


State 291

  170 condition: '(' . binary_expression ')'
  171          | '(' . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 335
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 292

  221 if_expression: T_IF condition . $@22 local_block $@23 else_clause

    $default  reduce using rule 219 ($@22)

    $@22  go to state 336


State 293

  215 while: T_WHILE $@20 . condition $@21 local_block

    '('  shift, and go to state 291

    condition  go to state 337


State 294

  194 goto_expression: T_GOTO T_IDENT .

    $default  reduce using rule 194 (goto_expression)


State 295

  196 switch_expression: T_SWITCH '(' . value ')' $@13 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 338
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_VARIABLE               shift, and go to state 195
    '-'                      shift, and go to state 92

    value              go to state 339
    string             go to state 133
    boolean_literal    go to state 94
    float_literal      go to state 95
    integer_literal    go to state 96
    character_literal  go to state 97
    simple_literal     go to state 139


State 296

  184 opt_num: T_NUM .

    $default  reduce using rule 184 (opt_num)


State 297

  178 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 340


State 298

  179 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 341


State 299

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression
  182 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_OR           shift, and go to state 174
    T_AND          shift, and go to state 175
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191

    $default  reduce using rule 182 (optional_bterm)


State 300

  180 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 180 (return_expression)


State 301

  132 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 132 (minusminus_plusplus)


State 302

  131 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 131 (minusminus_plusplus)


State 303

  116 shorthand_assignment: variable_reference $@11 . shorthand_assignment_operator expression

    T_SH_ASSIGN_PLUS   shift, and go to state 342
    T_SH_ASSIGN_MINUS  shift, and go to state 343
    T_SH_ASSIGN_MULT   shift, and go to state 344
    T_SH_ASSIGN_DIV    shift, and go to state 345
    T_SH_ASSIGN_MOD    shift, and go to state 346

    shorthand_assignment_operator  go to state 347


State 304

  110 assignment: variable_reference assignment_expression .

    $default  reduce using rule 110 (assignment)


State 305

  133 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 133 (increment_expression)


State 306

   93 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 93 (var_decls)


State 307

  108 statement: var_decl .

    $default  reduce using rule 108 (statement)


State 308

  226 stmntlist: statement stmntlist .

    $default  reduce using rule 226 (stmntlist)


State 309

   96 statement: assignment ';' .

    $default  reduce using rule 96 (statement)


State 310

  113 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 348
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 311

  112 assignment: assignment_target '.' . T_IDENT $@10 assignment_expression

    T_IDENT  shift, and go to state 349


State 312

  106 statement: increment_expression ';' .

    $default  reduce using rule 106 (statement)


State 313

  103 statement: return_expression ';' .

    $default  reduce using rule 103 (statement)


State 314

  104 statement: goto_expression ';' .

    $default  reduce using rule 104 (statement)


State 315

  218 closing_brace: '}' .

    $default  reduce using rule 218 (closing_brace)


State 316

   91 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 91 (block)


State 317

   95 statement: call_expression ';' .

    $default  reduce using rule 95 (statement)


State 318

  137 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 137 (constructor_expression)


State 319

  229 call_expression: T_FUNC '(' @25 parameter_list . closing_paren

    ')'  shift, and go to state 350

    closing_paren  go to state 351


State 320

  247 parameter: T_ELLIPSIS expression .

    $default  reduce using rule 247 (parameter)


State 321

  235 array_constructor: '[' @27 parameter_list ']' .

    $default  reduce using rule 235 (array_constructor)


State 322

   73 non_empty_parameters: non_empty_parameters ',' . parameter

    T_NEW                    shift, and go to state 112
    T_ELLIPSIS               shift, and go to state 244
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    $default  reduce using rule 126 (range_expression)

    variable_reference      go to state 125
    expression              go to state 247
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    parameter               go to state 352
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 323

  243 map_associate: T_STRING ':' . @29 value

    $default  reduce using rule 242 (@29)

    @29  go to state 353


State 324

  237 map_constructor: '{' @28 optional_map_associates '}' .

    $default  reduce using rule 237 (map_constructor)


State 325

  241 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 249

    map_associate  go to state 354


State 326

  128 range_expression: binary_expression T_DOTDOT binary_expression $@12 . range_increment

    T_DOTDOT  shift, and go to state 355

    T_DOTDOT  [reduce using rule 129 (range_increment)]
    $default  reduce using rule 129 (range_increment)

    range_increment  go to state 356


State 327

  146 binary_expression: binary_expression '[' expression ']' .

    $default  reduce using rule 146 (binary_expression)


State 328

  231 call_expression: function_id_or_pointer '(' @26 parameter_list . closing_paren

    ')'  shift, and go to state 350

    closing_paren  go to state 357


State 329

   65 optional_description: T_STRING .

    $default  reduce using rule 65 (optional_description)


State 330

   60 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description .

    $default  reduce using rule 60 (macrostart)


State 331

   69 non_empty_arguments: non_empty_arguments ',' argument_declaration .

    $default  reduce using rule 69 (non_empty_arguments)


State 332

  204 for_to_clause: '(' opt_for_initializer . $@15 ';' binary_expression ';' $@16 for_increment $@17 ')'

    $default  reduce using rule 201 ($@15)

    $@15  go to state 358


State 333

  207 opt_for_initializer: type_name . variable_identifier $@18 assignment_expression
  212 in_clause: '(' type_name . variable_identifier $@19 ':' expression ')'

    T_IDENT   shift, and go to state 47
    T_NUM     shift, and go to state 48
    T_STRING  shift, and go to state 49

    variable_identifier  go to state 359


State 334

  198 for_loop_expression: T_FOR for_clause $@14 . local_block

    error              shift, and go to state 210
    T_FOR              shift, and go to state 211
    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_IDENT            shift, and go to state 212
    T_FUNC             shift, and go to state 115
    T_IF               shift, and go to state 213
    T_WHILE            shift, and go to state 214
    T_GOTO             shift, and go to state 215
    T_SWITCH           shift, and go to state 216
    T_BREAK            shift, and go to state 217
    T_CONTINUE         shift, and go to state 218
    T_RETURN           shift, and go to state 219
    T_VARIABLE         shift, and go to state 160
    '*'                shift, and go to state 121
    '['                shift, and go to state 122
    ';'                shift, and go to state 220
    '{'                shift, and go to state 360

    variable_reference      go to state 222
    var_decl                go to state 307
    block                   go to state 224
    statement               go to state 361
    assignment              go to state 226
    shorthand_assignment    go to state 227
    assignment_target       go to state 228
    increment_expression    go to state 229
    break                   go to state 230
    continue                go to state 231
    return_expression       go to state 232
    label                   go to state 233
    goto_expression         go to state 234
    switch_expression       go to state 235
    for_loop_expression     go to state 236
    while                   go to state 237
    local_block             go to state 362
    if_expression           go to state 238
    call_expression         go to state 240
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_name               go to state 39


State 335

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression
  170 condition: '(' binary_expression . ')'
  171          | '(' binary_expression .

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_OR           shift, and go to state 174
    T_AND          shift, and go to state 175
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191
    ')'            shift, and go to state 363

    '*'       [reduce using rule 171 (condition)]
    '['       [reduce using rule 171 (condition)]
    $default  reduce using rule 171 (condition)


State 336

  221 if_expression: T_IF condition $@22 . local_block $@23 else_clause

    error              shift, and go to state 210
    T_FOR              shift, and go to state 211
    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_IDENT            shift, and go to state 212
    T_FUNC             shift, and go to state 115
    T_IF               shift, and go to state 213
    T_WHILE            shift, and go to state 214
    T_GOTO             shift, and go to state 215
    T_SWITCH           shift, and go to state 216
    T_BREAK            shift, and go to state 217
    T_CONTINUE         shift, and go to state 218
    T_RETURN           shift, and go to state 219
    T_VARIABLE         shift, and go to state 160
    '*'                shift, and go to state 121
    '['                shift, and go to state 122
    ';'                shift, and go to state 220
    '{'                shift, and go to state 360

    variable_reference      go to state 222
    var_decl                go to state 307
    block                   go to state 224
    statement               go to state 361
    assignment              go to state 226
    shorthand_assignment    go to state 227
    assignment_target       go to state 228
    increment_expression    go to state 229
    break                   go to state 230
    continue                go to state 231
    return_expression       go to state 232
    label                   go to state 233
    goto_expression         go to state 234
    switch_expression       go to state 235
    for_loop_expression     go to state 236
    while                   go to state 237
    local_block             go to state 364
    if_expression           go to state 238
    call_expression         go to state 240
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_name               go to state 39


State 337

  215 while: T_WHILE $@20 condition . $@21 local_block

    $default  reduce using rule 214 ($@21)

    $@21  go to state 365


State 338

  175 value: T_IDENT .

    $default  reduce using rule 175 (value)


State 339

  196 switch_expression: T_SWITCH '(' value . ')' $@13 '{' case_clauses '}'

    ')'  shift, and go to state 366


State 340

  178 break: T_BREAK opt_num ';' .

    $default  reduce using rule 178 (break)


State 341

  179 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 179 (continue)


State 342

  121 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 121 (shorthand_assignment_operator)


State 343

  122 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 122 (shorthand_assignment_operator)


State 344

  118 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 118 (shorthand_assignment_operator)


State 345

  119 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 119 (shorthand_assignment_operator)


State 346

  120 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 120 (shorthand_assignment_operator)


State 347

  116 shorthand_assignment: variable_reference $@11 shorthand_assignment_operator . expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    $default  reduce using rule 126 (range_expression)

    variable_reference      go to state 125
    expression              go to state 367
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 348

  113 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_OR           shift, and go to state 174
    T_AND          shift, and go to state 175
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191
    ']'            shift, and go to state 368


State 349

  112 assignment: assignment_target '.' T_IDENT . $@10 assignment_expression

    $default  reduce using rule 111 ($@10)

    $@10  go to state 369


State 350

  227 closing_paren: ')' .

    $default  reduce using rule 227 (closing_paren)


State 351

  229 call_expression: T_FUNC '(' @25 parameter_list closing_paren .

    $default  reduce using rule 229 (call_expression)


State 352

   73 non_empty_parameters: non_empty_parameters ',' parameter .

    $default  reduce using rule 73 (non_empty_parameters)


State 353

  243 map_associate: T_STRING ':' @29 . value

    T_IDENT                  shift, and go to state 338
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_VARIABLE               shift, and go to state 195
    '-'                      shift, and go to state 92

    value              go to state 370
    string             go to state 133
    boolean_literal    go to state 94
    float_literal      go to state 95
    integer_literal    go to state 96
    character_literal  go to state 97
    simple_literal     go to state 139


State 354

  241 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 241 (map_associates)


State 355

  130 range_increment: T_DOTDOT . binary_expression

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 371
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 356

  128 range_expression: binary_expression T_DOTDOT binary_expression $@12 range_increment .

    $default  reduce using rule 128 (range_expression)


State 357

  231 call_expression: function_id_or_pointer '(' @26 parameter_list closing_paren .

    $default  reduce using rule 231 (call_expression)


State 358

  204 for_to_clause: '(' opt_for_initializer $@15 . ';' binary_expression ';' $@16 for_increment $@17 ')'

    ';'  shift, and go to state 372


State 359

  207 opt_for_initializer: type_name variable_identifier . $@18 assignment_expression
  212 in_clause: '(' type_name variable_identifier . $@19 ':' expression ')'

    ':'       reduce using rule 211 ($@19)
    $default  reduce using rule 206 ($@18)

    $@18  go to state 373
    $@19  go to state 374


State 360

   91 block: '{' . var_decls stmntlist closing_brace
  217 local_block: '{' . stmntlist closing_brace
  237 map_constructor: '{' . @28 optional_map_associates '}'

    error              shift, and go to state 210
    T_FOR              shift, and go to state 211
    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_IDENT            shift, and go to state 212
    T_FUNC             shift, and go to state 115
    T_IF               shift, and go to state 213
    T_WHILE            shift, and go to state 214
    T_GOTO             shift, and go to state 215
    T_SWITCH           shift, and go to state 216
    T_BREAK            shift, and go to state 217
    T_CONTINUE         shift, and go to state 218
    T_RETURN           shift, and go to state 219
    T_VARIABLE         shift, and go to state 160
    '*'                shift, and go to state 121
    '['                shift, and go to state 122
    ';'                shift, and go to state 220
    '{'                shift, and go to state 221

    error              [reduce using rule 92 (var_decls)]
    T_FOR              [reduce using rule 92 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 92 (var_decls)]
    T_IDENT            [reduce using rule 92 (var_decls)]
    T_STRING           reduce using rule 236 (@28)
    T_FUNC             [reduce using rule 92 (var_decls)]
    T_IF               [reduce using rule 92 (var_decls)]
    T_WHILE            [reduce using rule 92 (var_decls)]
    T_GOTO             [reduce using rule 92 (var_decls)]
    T_SWITCH           [reduce using rule 92 (var_decls)]
    T_BREAK            [reduce using rule 92 (var_decls)]
    T_CONTINUE         [reduce using rule 92 (var_decls)]
    T_RETURN           [reduce using rule 92 (var_decls)]
    T_VARIABLE         [reduce using rule 92 (var_decls)]
    '*'                [reduce using rule 92 (var_decls)]
    '['                [reduce using rule 92 (var_decls)]
    ';'                [reduce using rule 92 (var_decls)]
    '{'                [reduce using rule 92 (var_decls)]
    '}'                reduce using rule 92 (var_decls)
    '}'                [reduce using rule 225 (stmntlist)]
    '}'                [reduce using rule 236 (@28)]

    variable_reference      go to state 222
    var_decl                go to state 307
    block                   go to state 224
    var_decls               go to state 153
    statement               go to state 225
    assignment              go to state 226
    shorthand_assignment    go to state 227
    assignment_target       go to state 228
    increment_expression    go to state 229
    break                   go to state 230
    continue                go to state 231
    return_expression       go to state 232
    label                   go to state 233
    goto_expression         go to state 234
    switch_expression       go to state 235
    for_loop_expression     go to state 236
    while                   go to state 237
    if_expression           go to state 238
    stmntlist               go to state 375
    call_expression         go to state 240
    array_constructor       go to state 135
    map_constructor         go to state 136
    @28                     go to state 164
    function_id_or_pointer  go to state 137
    type_name               go to state 39


State 361

  216 local_block: statement .

    $default  reduce using rule 216 (local_block)


State 362

  198 for_loop_expression: T_FOR for_clause $@14 local_block .

    $default  reduce using rule 198 (for_loop_expression)


State 363

  170 condition: '(' binary_expression ')' .

    $default  reduce using rule 170 (condition)


State 364

  221 if_expression: T_IF condition $@22 local_block . $@23 else_clause

    $default  reduce using rule 220 ($@23)

    $@23  go to state 376


State 365

  215 while: T_WHILE $@20 condition $@21 . local_block

    error              shift, and go to state 210
    T_FOR              shift, and go to state 211
    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_IDENT            shift, and go to state 212
    T_FUNC             shift, and go to state 115
    T_IF               shift, and go to state 213
    T_WHILE            shift, and go to state 214
    T_GOTO             shift, and go to state 215
    T_SWITCH           shift, and go to state 216
    T_BREAK            shift, and go to state 217
    T_CONTINUE         shift, and go to state 218
    T_RETURN           shift, and go to state 219
    T_VARIABLE         shift, and go to state 160
    '*'                shift, and go to state 121
    '['                shift, and go to state 122
    ';'                shift, and go to state 220
    '{'                shift, and go to state 360

    variable_reference      go to state 222
    var_decl                go to state 307
    block                   go to state 224
    statement               go to state 361
    assignment              go to state 226
    shorthand_assignment    go to state 227
    assignment_target       go to state 228
    increment_expression    go to state 229
    break                   go to state 230
    continue                go to state 231
    return_expression       go to state 232
    label                   go to state 233
    goto_expression         go to state 234
    switch_expression       go to state 235
    for_loop_expression     go to state 236
    while                   go to state 237
    local_block             go to state 377
    if_expression           go to state 238
    call_expression         go to state 240
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_name               go to state 39


State 366

  196 switch_expression: T_SWITCH '(' value ')' . $@13 '{' case_clauses '}'

    $default  reduce using rule 195 ($@13)

    $@13  go to state 378


State 367

  116 shorthand_assignment: variable_reference $@11 shorthand_assignment_operator expression .

    $default  reduce using rule 116 (shorthand_assignment)


State 368

  113 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 77

    assignment_expression  go to state 379


State 369

  112 assignment: assignment_target '.' T_IDENT $@10 . assignment_expression

    T_ASSIGN  shift, and go to state 77

    assignment_expression  go to state 380


State 370

  243 map_associate: T_STRING ':' @29 value .

    $default  reduce using rule 243 (map_associate)


State 371

  130 range_increment: T_DOTDOT binary_expression .
  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 130 (range_increment)


State 372

  204 for_to_clause: '(' opt_for_initializer $@15 ';' . binary_expression ';' $@16 for_increment $@17 ')'

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    variable_reference      go to state 125
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 381
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 373

  207 opt_for_initializer: type_name variable_identifier $@18 . assignment_expression

    T_ASSIGN  shift, and go to state 77

    assignment_expression  go to state 382


State 374

  212 in_clause: '(' type_name variable_identifier $@19 . ':' expression ')'

    ':'  shift, and go to state 383


State 375

  217 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 315

    closing_brace  go to state 384


State 376

  221 if_expression: T_IF condition $@22 local_block $@23 . else_clause

    T_ELSE  shift, and go to state 385

    T_ELSE    [reduce using rule 222 (else_clause)]
    $default  reduce using rule 222 (else_clause)

    else_clause  go to state 386


State 377

  215 while: T_WHILE $@20 condition $@21 local_block .

    $default  reduce using rule 215 (while)


State 378

  196 switch_expression: T_SWITCH '(' value ')' $@13 . '{' case_clauses '}'

    '{'  shift, and go to state 387


State 379

  113 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 113 (assignment)


State 380

  112 assignment: assignment_target '.' T_IDENT $@10 assignment_expression .

    $default  reduce using rule 112 (assignment)


State 381

  144 binary_expression: binary_expression . '.' T_IDENT
  146                  | binary_expression . '[' expression ']'
  147                  | binary_expression . '~' binary_expression
  148                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression . '&' binary_expression
  150                  | binary_expression . '|' binary_expression
  151                  | binary_expression . '+' binary_expression
  152                  | binary_expression . '^' binary_expression
  153                  | binary_expression . '-' binary_expression
  154                  | binary_expression . '*' binary_expression
  155                  | binary_expression . '/' binary_expression
  156                  | binary_expression . '%' binary_expression
  157                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression . T_AND binary_expression
  161                  | binary_expression . T_OR binary_expression
  162                  | binary_expression . '<' binary_expression
  163                  | binary_expression . '>' binary_expression
  164                  | binary_expression . T_LE binary_expression
  165                  | binary_expression . T_GE binary_expression
  166                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression . T_NE binary_expression
  204 for_to_clause: '(' opt_for_initializer $@15 ';' binary_expression . ';' $@16 for_increment $@17 ')'

    T_NMATCH       shift, and go to state 169
    T_NE           shift, and go to state 170
    T_EQ           shift, and go to state 171
    T_SHIFT_LEFT   shift, and go to state 172
    T_SHIFT_RIGHT  shift, and go to state 173
    T_OR           shift, and go to state 174
    T_AND          shift, and go to state 175
    T_LE           shift, and go to state 176
    T_GE           shift, and go to state 177
    T_POWER_TO     shift, and go to state 178
    '&'            shift, and go to state 179
    '|'            shift, and go to state 180
    '^'            shift, and go to state 181
    '~'            shift, and go to state 182
    '<'            shift, and go to state 183
    '>'            shift, and go to state 184
    '+'            shift, and go to state 185
    '-'            shift, and go to state 186
    '*'            shift, and go to state 187
    '/'            shift, and go to state 188
    '%'            shift, and go to state 189
    '['            shift, and go to state 190
    '.'            shift, and go to state 191
    ';'            shift, and go to state 388


State 382

  207 opt_for_initializer: type_name variable_identifier $@18 assignment_expression .

    $default  reduce using rule 207 (opt_for_initializer)


State 383

  212 in_clause: '(' type_name variable_identifier $@19 ':' . expression ')'

    T_NEW                    shift, and go to state 112
    T_IDENT                  shift, and go to state 113
    T_NUM                    shift, and go to state 86
    T_FLOATING_POINT_NUMBER  shift, and go to state 87
    T_STRING                 shift, and go to state 114
    T_CHARACTER              shift, and go to state 89
    T_TRUE                   shift, and go to state 90
    T_FALSE                  shift, and go to state 91
    T_FUNC                   shift, and go to state 115
    T_VARIABLE               shift, and go to state 116
    '!'                      shift, and go to state 117
    '~'                      shift, and go to state 118
    '+'                      shift, and go to state 119
    '-'                      shift, and go to state 120
    '*'                      shift, and go to state 121
    '['                      shift, and go to state 122
    '{'                      shift, and go to state 123
    '('                      shift, and go to state 124

    $default  reduce using rule 126 (range_expression)

    variable_reference      go to state 125
    expression              go to state 389
    range_expression        go to state 127
    simple_term             go to state 128
    constructor_expression  go to state 129
    unary_expression        go to state 130
    binary_expression       go to state 131
    value                   go to state 132
    string                  go to state 133
    call_expression         go to state 134
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_cast               go to state 138
    boolean_literal         go to state 94
    float_literal           go to state 95
    integer_literal         go to state 96
    character_literal       go to state 97
    simple_literal          go to state 139


State 384

  217 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 217 (local_block)


State 385

  224 else_clause: T_ELSE . $@24 local_block

    $default  reduce using rule 223 ($@24)

    $@24  go to state 390


State 386

  221 if_expression: T_IF condition $@22 local_block $@23 else_clause .

    $default  reduce using rule 221 (if_expression)


State 387

  196 switch_expression: T_SWITCH '(' value ')' $@13 '{' . case_clauses '}'

    T_CASE     shift, and go to state 391
    T_DEFAULT  shift, and go to state 392

    $default  reduce using rule 185 (case_clauses)

    case_clauses   go to state 393
    case_clause    go to state 394
    case_selector  go to state 395


State 388

  204 for_to_clause: '(' opt_for_initializer $@15 ';' binary_expression ';' . $@16 for_increment $@17 ')'

    $default  reduce using rule 202 ($@16)

    $@16  go to state 396


State 389

  212 in_clause: '(' type_name variable_identifier $@19 ':' expression . ')'

    ')'  shift, and go to state 397


State 390

  224 else_clause: T_ELSE $@24 . local_block

    error              shift, and go to state 210
    T_FOR              shift, and go to state 211
    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_IDENT            shift, and go to state 212
    T_FUNC             shift, and go to state 115
    T_IF               shift, and go to state 213
    T_WHILE            shift, and go to state 214
    T_GOTO             shift, and go to state 215
    T_SWITCH           shift, and go to state 216
    T_BREAK            shift, and go to state 217
    T_CONTINUE         shift, and go to state 218
    T_RETURN           shift, and go to state 219
    T_VARIABLE         shift, and go to state 160
    '*'                shift, and go to state 121
    '['                shift, and go to state 122
    ';'                shift, and go to state 220
    '{'                shift, and go to state 360

    variable_reference      go to state 222
    var_decl                go to state 307
    block                   go to state 224
    statement               go to state 361
    assignment              go to state 226
    shorthand_assignment    go to state 227
    assignment_target       go to state 228
    increment_expression    go to state 229
    break                   go to state 230
    continue                go to state 231
    return_expression       go to state 232
    label                   go to state 233
    goto_expression         go to state 234
    switch_expression       go to state 235
    for_loop_expression     go to state 236
    while                   go to state 237
    local_block             go to state 398
    if_expression           go to state 238
    call_expression         go to state 240
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_name               go to state 39


State 391

  188 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 399
    T_STRING  shift, and go to state 400
    '-'       shift, and go to state 92

    case_condition   go to state 401
    integer_literal  go to state 402


State 392

  189 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 403


State 393

  196 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses . '}'

    '}'  shift, and go to state 404


State 394

  186 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 391
    T_DEFAULT  shift, and go to state 392

    $default  reduce using rule 185 (case_clauses)

    case_clauses   go to state 405
    case_clause    go to state 394
    case_selector  go to state 395


State 395

  187 case_clause: case_selector . stmntlist

    error              shift, and go to state 210
    T_FOR              shift, and go to state 211
    T_TYPE_IDENTIFIER  shift, and go to state 37
    T_IDENT            shift, and go to state 212
    T_FUNC             shift, and go to state 115
    T_IF               shift, and go to state 213
    T_WHILE            shift, and go to state 214
    T_GOTO             shift, and go to state 215
    T_SWITCH           shift, and go to state 216
    T_BREAK            shift, and go to state 217
    T_CONTINUE         shift, and go to state 218
    T_RETURN           shift, and go to state 219
    T_VARIABLE         shift, and go to state 160
    '*'                shift, and go to state 121
    '['                shift, and go to state 122
    ';'                shift, and go to state 220
    '{'                shift, and go to state 221

    T_CASE     reduce using rule 225 (stmntlist)
    T_DEFAULT  reduce using rule 225 (stmntlist)
    '}'        reduce using rule 225 (stmntlist)

    variable_reference      go to state 222
    var_decl                go to state 307
    block                   go to state 224
    statement               go to state 225
    assignment              go to state 226
    shorthand_assignment    go to state 227
    assignment_target       go to state 228
    increment_expression    go to state 229
    break                   go to state 230
    continue                go to state 231
    return_expression       go to state 232
    label                   go to state 233
    goto_expression         go to state 234
    switch_expression       go to state 235
    for_loop_expression     go to state 236
    while                   go to state 237
    if_expression           go to state 238
    stmntlist               go to state 406
    call_expression         go to state 240
    array_constructor       go to state 135
    map_constructor         go to state 136
    function_id_or_pointer  go to state 137
    type_name               go to state 39


State 396

  204 for_to_clause: '(' opt_for_initializer $@15 ';' binary_expression ';' $@16 . for_increment $@17 ')'

    T_IDENT     shift, and go to state 159
    T_VARIABLE  shift, and go to state 160

    variable_reference    go to state 407
    shorthand_assignment  go to state 408
    increment_expression  go to state 409
    for_increment         go to state 410


State 397

  212 in_clause: '(' type_name variable_identifier $@19 ':' expression ')' .

    $default  reduce using rule 212 (in_clause)


State 398

  224 else_clause: T_ELSE $@24 local_block .

    $default  reduce using rule 224 (else_clause)


State 399

  192 case_condition: T_NUM . T_DOTDOT T_NUM
  256 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 411

    $default  reduce using rule 256 (integer_literal)


State 400

  191 case_condition: T_STRING .

    $default  reduce using rule 191 (case_condition)


State 401

  188 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 412


State 402

  190 case_condition: integer_literal .

    $default  reduce using rule 190 (case_condition)


State 403

  189 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 189 (case_selector)


State 404

  196 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses '}' .

    $default  reduce using rule 196 (switch_expression)


State 405

  186 case_clauses: case_clause case_clauses .

    $default  reduce using rule 186 (case_clauses)


State 406

  187 case_clause: case_selector stmntlist .

    $default  reduce using rule 187 (case_clause)


State 407

  116 shorthand_assignment: variable_reference . $@11 shorthand_assignment_operator expression
  133 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 301
    T_MINUSMINUS  shift, and go to state 302

    $default  reduce using rule 115 ($@11)

    $@11                 go to state 303
    minusminus_plusplus  go to state 305


State 408

  200 for_increment: shorthand_assignment .

    $default  reduce using rule 200 (for_increment)


State 409

  199 for_increment: increment_expression .

    $default  reduce using rule 199 (for_increment)


State 410

  204 for_to_clause: '(' opt_for_initializer $@15 ';' binary_expression ';' $@16 for_increment . $@17 ')'

    $default  reduce using rule 203 ($@17)

    $@17  go to state 413


State 411

  192 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 414


State 412

  188 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 188 (case_selector)


State 413

  204 for_to_clause: '(' opt_for_initializer $@15 ';' binary_expression ';' $@16 for_increment $@17 . ')'

    ')'  shift, and go to state 415


State 414

  192 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 192 (case_condition)


State 415

  204 for_to_clause: '(' opt_for_initializer $@15 ';' binary_expression ';' $@16 for_increment $@17 ')' .

    $default  reduce using rule 204 (for_to_clause)
