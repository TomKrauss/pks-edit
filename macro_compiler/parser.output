State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 49 conflicts: 10 shift/reduce
State 90 conflicts: 23 shift/reduce
State 101 conflicts: 1 reduce/reduce
State 108 conflicts: 45 reduce/reduce
State 115 conflicts: 22 shift/reduce
State 166 conflicts: 6 shift/reduce
State 169 conflicts: 1 shift/reduce
State 187 conflicts: 1 reduce/reduce
State 204 conflicts: 22 shift/reduce
State 230 conflicts: 1 reduce/reduce
State 246 conflicts: 1 shift/reduce
State 267 conflicts: 1 shift/reduce
State 276 conflicts: 1 shift/reduce
State 305 conflicts: 16 shift/reduce, 1 reduce/reduce
State 317 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | macro_definition macro_definitions

    8 namespace: %empty
    9          | T_NAMESPACE T_IDENT ';'

   10 prerequisites: %empty
   11              | prerequisites require

   12 require: T_REQUIRE T_STRING ';'

   13 global_declarations: %empty
   14                    | global_declarations constants ';'
   15                    | global_declarations global_var ';'

   16 scope: %empty
   17      | T_STATIC

   18 constants: T_CONST constant_list

   19 constant_list: constdef
   20              | constant_list ',' constdef

   21 $@3: %empty

   22 $@4: %empty

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   24 constant_literal: simple_literal
   25                 | T_STRING

   26 variable_identifier: T_IDENT
   27                    | T_NUM
   28                    | T_STRING

   29 variable_reference: T_VARIABLE
   30                   | T_IDENT

   31 macro_declaration: T_IDENT
   32                  | T_FUNC

   33 macro_type: scope T_VOID
   34           | scope type_name

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description

   36 global_var: scope var_decl

   37 var_decl: type_name variable_identifier assignment_expression
   38         | type_name variable_identifier

   39 optional_description: %empty
   40                     | T_STRING

   41 parameter_list: %empty
   42               | non_empty_pardecl

   43 non_empty_pardecl: par_decl
   44                  | non_empty_pardecl ',' par_decl

   45 par_decl: type_name variable_identifier

   46 $@5: %empty

   47 macro_definition: $@5 macrostart block

   48 block: '{' var_decls stmntlist closing_brace

   49 var_decls: %empty
   50          | var_decls var_decl ';'

   51 statement: ';'
   52          | call_expression ';'
   53          | assignment ';'
   54          | if_expression
   55          | while
   56          | foreach
   57          | switch_expression
   58          | break
   59          | continue
   60          | return_expression
   61          | goto
   62          | block
   63          | increment_expression
   64          | label
   65          | var_decl
   66          | error ';'

   67 assignment: variable_reference assignment_expression

   68 $@6: %empty

   69 assignment: assignment_target '.' T_IDENT $@6 assignment_expression
   70           | assignment_target '[' binary_expression ']' assignment_expression

   71 $@7: %empty

   72 assignment: variable_reference $@7 shorthand_assignment_operator simple_expression

   73 assignment_target: variable_reference

   74 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   75                              | T_SH_ASSIGN_DIV
   76                              | T_SH_ASSIGN_MOD
   77                              | T_SH_ASSIGN_PLUS
   78                              | T_SH_ASSIGN_MINUS

   79 assignment_expression: T_ASSIGN simple_expression

   80 simple_expression: binary_expression
   81                  | range_expression

   82 binary_expression_or_range: binary_expression
   83                           | range_expression

   84 range_expression: %empty

   85 $@8: %empty

   86 range_expression: binary_expression T_DOTDOT binary_expression $@8 range_increment

   87 range_increment: %empty
   88                | T_DOTDOT binary_expression

   89 increment_expression: variable_reference T_MINUSMINUS
   90                     | variable_reference T_PLUSPLUS

   91 s_bterm: value
   92        | call_expression
   93        | constructor_expression

   94 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

   95 binary_expression: s_bterm
   96                  | type_cast s_bterm
   97                  | '-' T_NUM
   98                  | binary_expression '[' binary_expression_or_range ']'
   99                  | '!' binary_expression
  100                  | '~' binary_expression
  101                  | '+' binary_expression
  102                  | '-' binary_expression
  103                  | binary_expression '~' binary_expression
  104                  | binary_expression T_NMATCH binary_expression
  105                  | binary_expression '&' binary_expression
  106                  | binary_expression '|' binary_expression
  107                  | binary_expression '+' binary_expression
  108                  | binary_expression '^' binary_expression
  109                  | binary_expression '-' binary_expression
  110                  | binary_expression '*' binary_expression
  111                  | binary_expression '/' binary_expression
  112                  | binary_expression '%' binary_expression
  113                  | binary_expression T_SHIFT_LEFT binary_expression
  114                  | binary_expression T_SHIFT_RIGHT binary_expression
  115                  | binary_expression T_POWER_TO binary_expression
  116                  | binary_expression T_AND binary_expression
  117                  | binary_expression T_OR binary_expression
  118                  | binary_expression '<' binary_expression
  119                  | binary_expression '>' binary_expression
  120                  | binary_expression T_LE binary_expression
  121                  | binary_expression T_GE binary_expression
  122                  | binary_expression T_EQ binary_expression
  123                  | binary_expression T_NE binary_expression
  124                  | '(' binary_expression ')'
  125                  | variable_reference assignment_expression

  126 condition: '(' binary_expression ')'
  127          | '(' binary_expression

  128 value: T_VARIABLE
  129      | struct_reference
  130      | string
  131      | simple_literal
  132      | map_literal
  133      | array_literal
  134      | T_IDENT

  135 struct_reference: T_VARIABLE '.' T_IDENT
  136                 | struct_reference '.' T_IDENT

  137 $@9: %empty

  138 map_literal: '{' $@9 optional_map_associates closing_brace

  139 optional_map_associates: %empty
  140                        | map_associates

  141 map_associates: map_associate
  142               | map_associates ',' map_associate

  143 map_associate: T_STRING T_ASSOC_ARROW simple_literal
  144              | T_STRING T_ASSOC_ARROW T_STRING

  145 $@10: %empty

  146 array_literal: '[' $@10 ']'

  147 $@11: %empty

  148 array_literal: '[' $@11 array_elements ']'

  149 array_elements: array_elements ',' array_element
  150               | array_element

  151 array_element: simple_array_element
  152              | T_STRING

  153 simple_array_element: T_NUM
  154                     | T_CHARACTER
  155                     | T_TRUE
  156                     | T_FALSE

  157 string: T_STRING
  158       | string T_STRING

  159 break: T_BREAK opt_num ';'

  160 continue: T_CONTINUE opt_num ';'

  161 return_expression: T_RETURN optional_bterm

  162 optional_bterm: %empty
  163               | binary_expression

  164 opt_num: %empty
  165        | T_NUM

  166 case_clauses: %empty
  167             | case_clause case_clauses

  168 case_clause: case_selector stmntlist

  169 case_selector: T_CASE case_condition ':'
  170              | T_DEFAULT ':'

  171 case_condition: T_NUM
  172               | T_STRING
  173               | T_NUM T_DOTDOT T_NUM

  174 label: T_IDENT ':'

  175 goto: T_GOTO T_IDENT

  176 $@12: %empty

  177 in_clause: '(' type_name variable_identifier $@12 ':' simple_expression ')'

  178 $@13: %empty

  179 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses '}'

  180 $@14: %empty

  181 $@15: %empty

  182 foreach: T_FOR $@14 in_clause $@15 local_block

  183 $@16: %empty

  184 $@17: %empty

  185 while: T_WHILE $@16 condition $@17 local_block

  186 local_block: statement
  187            | '{' stmntlist closing_brace

  188 closing_brace: '}'

  189 $@18: %empty

  190 $@19: %empty

  191 if_expression: T_IF condition $@18 local_block $@19 else_clause

  192 else_clause: %empty

  193 $@20: %empty

  194 else_clause: T_ELSE $@20 local_block

  195 stmntlist: %empty

  196 $@21: %empty

  197 stmntlist: statement $@21 stmntlist

  198 closing_paren: ')'

  199 @22: %empty

  200 call_expression: T_FUNC '(' @22 parameter_list closing_paren

  201 @23: %empty

  202 call_expression: function_id_or_pointer '(' @23 parameter_list closing_paren

  203 function_id_or_pointer: '*' variable_reference
  204                       | T_IDENT
  205                       | error

  206 parameter_list: nonempty_parameters

  207 nonempty_parameters: parameter
  208                    | nonempty_parameters ',' parameter
  209                    | error

  210 parameter: simple_expression

  211 type_cast: '(' type_name ')'

  212 type_name: T_TYPE_IDENTIFIER
  213          | T_TYPE_IDENTIFIER array_size

  214 array_size: '[' ']'
  215           | '[' T_NUM ']'

  216 boolean_literal: T_TRUE
  217                | T_FALSE

  218 float_literal: T_FLOATING_POINT_NUMBER

  219 integer_literal: T_NUM

  220 character_literal: T_CHARACTER

  221 simple_literal: integer_literal
  222               | float_literal
  223               | character_literal
  224               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 99
    '%' (37) 112
    '&' (38) 105
    '(' (40) 35 94 124 126 127 177 179 200 202 211
    ')' (41) 35 94 124 126 177 179 198 211
    '*' (42) 110 203
    '+' (43) 101 107
    ',' (44) 20 44 142 149 208
    '-' (45) 97 102 109
    '.' (46) 69 135 136
    '/' (47) 111
    ':' (58) 169 170 174 177
    ';' (59) 9 12 14 15 50 51 52 53 66 159 160
    '<' (60) 118
    '>' (62) 119
    '[' (91) 70 98 146 148 214 215
    ']' (93) 70 98 146 148 214 215
    '^' (94) 108
    '{' (123) 48 138 179 187
    '|' (124) 106
    '}' (125) 179 188
    '~' (126) 100 103
    error (256) 66 205 209
    T_NAMESPACE (258) 9
    T_REQUIRE (259) 12
    T_FOR (260) 182
    T_NEW (261) 94
    T_STATIC (262) 17
    T_VOID (263) 33
    T_TYPE_IDENTIFIER (264) 94 212 213
    T_IDENT (265) 9 26 30 31 69 134 135 136 174 175 204
    T_NUM (266) 27 97 153 165 171 173 215 219
    T_FLOATING_POINT_NUMBER (267) 218
    T_STRING (268) 12 25 28 40 143 144 152 157 158 172
    T_CHARACTER (269) 154 220
    T_CONST (270) 18
    T_TRUE (271) 155 216
    T_FALSE (272) 156 217
    T_FUNC (273) 32 200
    T_DOTDOT (274) 86 88 173
    T_PLUSPLUS (275) 90
    T_MINUSMINUS (276) 89
    T_IF (277) 191
    T_ELSE (278) 194
    T_WHILE (279) 185
    T_GOTO (280) 175
    T_SH_ASSIGN_PLUS (281) 77
    T_SH_ASSIGN_MINUS (282) 78
    T_SH_ASSIGN_MULT (283) 74
    T_SH_ASSIGN_DIV (284) 75
    T_SH_ASSIGN_MOD (285) 76
    T_SWITCH (286) 179
    T_CASE (287) 169
    T_DEFAULT (288) 170
    T_BREAK (289) 159
    T_CONTINUE (290) 160
    T_RETURN (291) 161
    T_VARIABLE (292) 29 128 135
    T_ASSOC_ARROW (293) 143 144
    T_NMATCH (294) 104
    T_ASSIGN (295) 23 79
    T_NE (296) 123
    T_EQ (297) 122
    T_SHIFT_LEFT (298) 113
    T_SHIFT_RIGHT (299) 114
    T_OR (300) 117
    T_AND (301) 116
    T_LE (302) 120
    T_GE (303) 121
    T_POWER_TO (304) 115


Nonterminals, with rules where they appear

    $accept (72)
        on left: 0
    file_structure (73)
        on left: 3
        on right: 0
    $@1 (74)
        on left: 1
        on right: 3
    $@2 (75)
        on left: 2
        on right: 3
    header_delimiter (76)
        on left: 4 5
        on right: 3
    macro_definitions (77)
        on left: 6 7
        on right: 3 7
    namespace (78)
        on left: 8 9
        on right: 3
    prerequisites (79)
        on left: 10 11
        on right: 3 11
    require (80)
        on left: 12
        on right: 11
    global_declarations (81)
        on left: 13 14 15
        on right: 3 14 15
    scope (82)
        on left: 16 17
        on right: 33 34 36
    constants (83)
        on left: 18
        on right: 14
    constant_list (84)
        on left: 19 20
        on right: 18 20
    constdef (85)
        on left: 23
        on right: 19 20
    $@3 (86)
        on left: 21
        on right: 23
    $@4 (87)
        on left: 22
        on right: 23
    constant_literal (88)
        on left: 24 25
        on right: 23
    variable_identifier (89)
        on left: 26 27 28
        on right: 23 37 38 45 177
    variable_reference (90)
        on left: 29 30
        on right: 67 72 73 89 90 125 203
    macro_declaration (91)
        on left: 31 32
        on right: 35
    macro_type (92)
        on left: 33 34
        on right: 35
    macrostart (93)
        on left: 35
        on right: 47
    global_var (94)
        on left: 36
        on right: 15
    var_decl (95)
        on left: 37 38
        on right: 36 50 65
    optional_description (96)
        on left: 39 40
        on right: 35
    parameter_list (97)
        on left: 41 42 206
        on right: 35 200 202
    non_empty_pardecl (98)
        on left: 43 44
        on right: 42 44
    par_decl (99)
        on left: 45
        on right: 43 44
    macro_definition (100)
        on left: 47
        on right: 7
    $@5 (101)
        on left: 46
        on right: 47
    block (102)
        on left: 48
        on right: 47 62
    var_decls (103)
        on left: 49 50
        on right: 48 50
    statement (104)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
        on right: 186 197
    assignment (105)
        on left: 67 69 70 72
        on right: 53
    $@6 (106)
        on left: 68
        on right: 69
    $@7 (107)
        on left: 71
        on right: 72
    assignment_target (108)
        on left: 73
        on right: 69 70
    shorthand_assignment_operator (109)
        on left: 74 75 76 77 78
        on right: 72
    assignment_expression (110)
        on left: 79
        on right: 37 67 69 70 125
    simple_expression (111)
        on left: 80 81
        on right: 72 79 177 210
    binary_expression_or_range (112)
        on left: 82 83
        on right: 98
    range_expression (113)
        on left: 84 86
        on right: 81 83
    $@8 (114)
        on left: 85
        on right: 86
    range_increment (115)
        on left: 87 88
        on right: 86
    increment_expression (116)
        on left: 89 90
        on right: 63
    s_bterm (117)
        on left: 91 92 93
        on right: 95 96
    constructor_expression (118)
        on left: 94
        on right: 93
    binary_expression (119)
        on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
        on right: 70 80 82 86 88 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 126 127 163
    condition (120)
        on left: 126 127
        on right: 185 191
    value (121)
        on left: 128 129 130 131 132 133 134
        on right: 91 179
    struct_reference (122)
        on left: 135 136
        on right: 129 136
    map_literal (123)
        on left: 138
        on right: 132
    $@9 (124)
        on left: 137
        on right: 138
    optional_map_associates (125)
        on left: 139 140
        on right: 138
    map_associates (126)
        on left: 141 142
        on right: 140 142
    map_associate (127)
        on left: 143 144
        on right: 141 142
    array_literal (128)
        on left: 146 148
        on right: 133
    $@10 (129)
        on left: 145
        on right: 146
    $@11 (130)
        on left: 147
        on right: 148
    array_elements (131)
        on left: 149 150
        on right: 148 149
    array_element (132)
        on left: 151 152
        on right: 149 150
    simple_array_element (133)
        on left: 153 154 155 156
        on right: 151
    string (134)
        on left: 157 158
        on right: 130 158
    break (135)
        on left: 159
        on right: 58
    continue (136)
        on left: 160
        on right: 59
    return_expression (137)
        on left: 161
        on right: 60
    optional_bterm (138)
        on left: 162 163
        on right: 161
    opt_num (139)
        on left: 164 165
        on right: 159 160
    case_clauses (140)
        on left: 166 167
        on right: 167 179
    case_clause (141)
        on left: 168
        on right: 167
    case_selector (142)
        on left: 169 170
        on right: 168
    case_condition (143)
        on left: 171 172 173
        on right: 169
    label (144)
        on left: 174
        on right: 64
    goto (145)
        on left: 175
        on right: 61
    in_clause (146)
        on left: 177
        on right: 182
    $@12 (147)
        on left: 176
        on right: 177
    switch_expression (148)
        on left: 179
        on right: 57
    $@13 (149)
        on left: 178
        on right: 179
    foreach (150)
        on left: 182
        on right: 56
    $@14 (151)
        on left: 180
        on right: 182
    $@15 (152)
        on left: 181
        on right: 182
    while (153)
        on left: 185
        on right: 55
    $@16 (154)
        on left: 183
        on right: 185
    $@17 (155)
        on left: 184
        on right: 185
    local_block (156)
        on left: 186 187
        on right: 182 185 191 194
    closing_brace (157)
        on left: 188
        on right: 48 138 187
    if_expression (158)
        on left: 191
        on right: 54
    $@18 (159)
        on left: 189
        on right: 191
    $@19 (160)
        on left: 190
        on right: 191
    else_clause (161)
        on left: 192 194
        on right: 191
    $@20 (162)
        on left: 193
        on right: 194
    stmntlist (163)
        on left: 195 197
        on right: 48 168 187 197
    $@21 (164)
        on left: 196
        on right: 197
    closing_paren (165)
        on left: 198
        on right: 200 202
    call_expression (166)
        on left: 200 202
        on right: 52 92
    @22 (167)
        on left: 199
        on right: 200
    @23 (168)
        on left: 201
        on right: 202
    function_id_or_pointer (169)
        on left: 203 204 205
        on right: 202
    nonempty_parameters (170)
        on left: 207 208 209
        on right: 206 208
    parameter (171)
        on left: 210
        on right: 207 208
    type_cast (172)
        on left: 211
        on right: 96
    type_name (173)
        on left: 212 213
        on right: 34 37 38 45 177 211
    array_size (174)
        on left: 214 215
        on right: 213
    boolean_literal (175)
        on left: 216 217
        on right: 224
    float_literal (176)
        on left: 218
        on right: 222
    integer_literal (177)
        on left: 219
        on right: 221
    character_literal (178)
        on left: 220
        on right: 223
    simple_literal (179)
        on left: 221 222 223 224
        on right: 24 131 143


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 8 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

    9 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites global_declarations $@2 header_delimiter macro_definitions

    $default  reduce using rule 10 (prerequisites)

    prerequisites  go to state 7


State 6

    9 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . global_declarations $@2 header_delimiter macro_definitions
   11 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 13 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

    9 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 9 (namespace)


State 9

   12 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   11 prerequisites: prerequisites require .

    $default  reduce using rule 11 (prerequisites)


State 11

    3 file_structure: $@1 namespace prerequisites global_declarations . $@2 header_delimiter macro_definitions
   14 global_declarations: global_declarations . constants ';'
   15                    | global_declarations . global_var ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14

    T_STATIC           [reduce using rule 2 ($@2)]
    T_TYPE_IDENTIFIER  reduce using rule 2 ($@2)
    T_TYPE_IDENTIFIER  [reduce using rule 16 (scope)]
    $default           reduce using rule 2 ($@2)

    $@2         go to state 15
    scope       go to state 16
    constants   go to state 17
    global_var  go to state 18


State 12

   12 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 19


State 13

   17 scope: T_STATIC .

    $default  reduce using rule 17 (scope)


State 14

   18 constants: T_CONST . constant_list

    $default  reduce using rule 21 ($@3)

    constant_list  go to state 20
    constdef       go to state 21
    $@3            go to state 22


State 15

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 . header_delimiter macro_definitions

    '!'  shift, and go to state 23

    $default  reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 24


State 16

   36 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    var_decl   go to state 26
    type_name  go to state 27


State 17

   14 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 28


State 18

   15 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 29


State 19

   12 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 12 (require)


State 20

   18 constants: T_CONST constant_list .
   20 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 30

    $default  reduce using rule 18 (constants)


State 21

   19 constant_list: constdef .

    $default  reduce using rule 19 (constant_list)


State 22

   23 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 34


State 23

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 24

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 46 ($@5)

    macro_definitions  go to state 35
    macro_definition   go to state 36
    $@5                go to state 37


State 25

  212 type_name: T_TYPE_IDENTIFIER .
  213          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 38

    $default  reduce using rule 212 (type_name)

    array_size  go to state 39


State 26

   36 global_var: scope var_decl .

    $default  reduce using rule 36 (global_var)


State 27

   37 var_decl: type_name . variable_identifier assignment_expression
   38         | type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 40


State 28

   14 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 14 (global_declarations)


State 29

   15 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 15 (global_declarations)


State 30

   20 constant_list: constant_list ',' . constdef

    $default  reduce using rule 21 ($@3)

    constdef  go to state 41
    $@3       go to state 22


State 31

   26 variable_identifier: T_IDENT .

    $default  reduce using rule 26 (variable_identifier)


State 32

   27 variable_identifier: T_NUM .

    $default  reduce using rule 27 (variable_identifier)


State 33

   28 variable_identifier: T_STRING .

    $default  reduce using rule 28 (variable_identifier)


State 34

   23 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 42


State 35

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 36

    7 macro_definitions: macro_definition . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 46 ($@5)

    macro_definitions  go to state 43
    macro_definition   go to state 36
    $@5                go to state 37


State 37

   47 macro_definition: $@5 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 16 (scope)

    scope       go to state 44
    macro_type  go to state 45
    macrostart  go to state 46


State 38

  214 array_size: '[' . ']'
  215           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 47
    ']'    shift, and go to state 48


State 39

  213 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 213 (type_name)


State 40

   37 var_decl: type_name variable_identifier . assignment_expression
   38         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 49

    $default  reduce using rule 38 (var_decl)

    assignment_expression  go to state 50


State 41

   20 constant_list: constant_list ',' constdef .

    $default  reduce using rule 20 (constant_list)


State 42

   23 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 53
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56

    constant_literal   go to state 57
    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 62


State 43

    7 macro_definitions: macro_definition macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 44

   33 macro_type: scope . T_VOID
   34           | scope . type_name

    T_VOID             shift, and go to state 63
    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 64


State 45

   35 macrostart: macro_type . macro_declaration '(' parameter_list ')' optional_description

    T_IDENT  shift, and go to state 65
    T_FUNC   shift, and go to state 66

    macro_declaration  go to state 67


State 46

   47 macro_definition: $@5 macrostart . block

    '{'  shift, and go to state 68

    block  go to state 69


State 47

  215 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 70


State 48

  214 array_size: '[' ']' .

    $default  reduce using rule 214 (array_size)


State 49

   79 assignment_expression: T_ASSIGN . simple_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    error              [reduce using rule 84 (range_expression)]
    T_FOR              reduce using rule 84 (range_expression)
    T_TYPE_IDENTIFIER  reduce using rule 84 (range_expression)
    T_IDENT            [reduce using rule 84 (range_expression)]
    T_FUNC             [reduce using rule 84 (range_expression)]
    T_DOTDOT           reduce using rule 84 (range_expression)
    T_IF               reduce using rule 84 (range_expression)
    T_ELSE             reduce using rule 84 (range_expression)
    T_WHILE            reduce using rule 84 (range_expression)
    T_GOTO             reduce using rule 84 (range_expression)
    T_SWITCH           reduce using rule 84 (range_expression)
    T_CASE             reduce using rule 84 (range_expression)
    T_DEFAULT          reduce using rule 84 (range_expression)
    T_BREAK            reduce using rule 84 (range_expression)
    T_CONTINUE         reduce using rule 84 (range_expression)
    T_RETURN           reduce using rule 84 (range_expression)
    T_VARIABLE         [reduce using rule 84 (range_expression)]
    T_NMATCH           reduce using rule 84 (range_expression)
    T_NE               reduce using rule 84 (range_expression)
    T_EQ               reduce using rule 84 (range_expression)
    T_SHIFT_LEFT       reduce using rule 84 (range_expression)
    T_SHIFT_RIGHT      reduce using rule 84 (range_expression)
    T_OR               reduce using rule 84 (range_expression)
    T_AND              reduce using rule 84 (range_expression)
    T_LE               reduce using rule 84 (range_expression)
    T_GE               reduce using rule 84 (range_expression)
    T_POWER_TO         reduce using rule 84 (range_expression)
    '&'                reduce using rule 84 (range_expression)
    '|'                reduce using rule 84 (range_expression)
    '^'                reduce using rule 84 (range_expression)
    '~'                [reduce using rule 84 (range_expression)]
    '<'                reduce using rule 84 (range_expression)
    '>'                reduce using rule 84 (range_expression)
    '+'                [reduce using rule 84 (range_expression)]
    '-'                [reduce using rule 84 (range_expression)]
    '*'                [reduce using rule 84 (range_expression)]
    '/'                reduce using rule 84 (range_expression)
    '%'                reduce using rule 84 (range_expression)
    '['                [reduce using rule 84 (range_expression)]
    ';'                reduce using rule 84 (range_expression)
    ','                reduce using rule 84 (range_expression)
    ')'                reduce using rule 84 (range_expression)
    '{'                [reduce using rule 84 (range_expression)]
    ']'                reduce using rule 84 (range_expression)
    '}'                reduce using rule 84 (range_expression)

    variable_reference      go to state 85
    simple_expression       go to state 86
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 50

   37 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 37 (var_decl)


State 51

  219 integer_literal: T_NUM .

    $default  reduce using rule 219 (integer_literal)


State 52

  218 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 218 (float_literal)


State 53

   25 constant_literal: T_STRING .

    $default  reduce using rule 25 (constant_literal)


State 54

  220 character_literal: T_CHARACTER .

    $default  reduce using rule 220 (character_literal)


State 55

  216 boolean_literal: T_TRUE .

    $default  reduce using rule 216 (boolean_literal)


State 56

  217 boolean_literal: T_FALSE .

    $default  reduce using rule 217 (boolean_literal)


State 57

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 22 ($@4)

    $@4  go to state 100


State 58

  224 simple_literal: boolean_literal .

    $default  reduce using rule 224 (simple_literal)


State 59

  222 simple_literal: float_literal .

    $default  reduce using rule 222 (simple_literal)


State 60

  221 simple_literal: integer_literal .

    $default  reduce using rule 221 (simple_literal)


State 61

  223 simple_literal: character_literal .

    $default  reduce using rule 223 (simple_literal)


State 62

   24 constant_literal: simple_literal .

    $default  reduce using rule 24 (constant_literal)


State 63

   33 macro_type: scope T_VOID .

    $default  reduce using rule 33 (macro_type)


State 64

   34 macro_type: scope type_name .

    $default  reduce using rule 34 (macro_type)


State 65

   31 macro_declaration: T_IDENT .

    $default  reduce using rule 31 (macro_declaration)


State 66

   32 macro_declaration: T_FUNC .

    $default  reduce using rule 32 (macro_declaration)


State 67

   35 macrostart: macro_type macro_declaration . '(' parameter_list ')' optional_description

    '('  shift, and go to state 101


State 68

   48 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 49 (var_decls)

    var_decls  go to state 102


State 69

   47 macro_definition: $@5 macrostart block .

    $default  reduce using rule 47 (macro_definition)


State 70

  215 array_size: '[' T_NUM ']' .

    $default  reduce using rule 215 (array_size)


State 71

  205 function_id_or_pointer: error .

    $default  reduce using rule 205 (function_id_or_pointer)


State 72

   94 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 103


State 73

   30 variable_reference: T_IDENT .
  134 value: T_IDENT .
  204 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 30 (variable_reference)
    '('       reduce using rule 204 (function_id_or_pointer)
    $default  reduce using rule 134 (value)


State 74

  157 string: T_STRING .

    $default  reduce using rule 157 (string)


State 75

  200 call_expression: T_FUNC . '(' @22 parameter_list closing_paren

    '('  shift, and go to state 104


State 76

   29 variable_reference: T_VARIABLE .
  128 value: T_VARIABLE .
  135 struct_reference: T_VARIABLE . '.' T_IDENT

    '.'  shift, and go to state 105

    T_ASSIGN  reduce using rule 29 (variable_reference)
    $default  reduce using rule 128 (value)


State 77

  100 binary_expression: '~' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 106
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 78

  101 binary_expression: '+' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 107
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 79

   97 binary_expression: '-' . T_NUM
  102                  | '-' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 108
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 109
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 80

  203 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 110
    T_VARIABLE  shift, and go to state 111

    variable_reference  go to state 112


State 81

  146 array_literal: '[' . $@10 ']'
  148              | '[' . $@11 array_elements ']'

    ']'       reduce using rule 145 ($@10)
    $default  reduce using rule 147 ($@11)

    $@10  go to state 113
    $@11  go to state 114


State 82

   99 binary_expression: '!' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 115
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 83

  124 binary_expression: '(' . binary_expression ')'
  211 type_cast: '(' . type_name ')'

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 116
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    type_name               go to state 117
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 84

  138 map_literal: '{' . $@9 optional_map_associates closing_brace

    $default  reduce using rule 137 ($@9)

    $@9  go to state 118


State 85

  125 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 119


State 86

   79 assignment_expression: T_ASSIGN simple_expression .

    $default  reduce using rule 79 (assignment_expression)


State 87

   81 simple_expression: range_expression .

    $default  reduce using rule 81 (simple_expression)


State 88

   95 binary_expression: s_bterm .

    $default  reduce using rule 95 (binary_expression)


State 89

   93 s_bterm: constructor_expression .

    $default  reduce using rule 93 (s_bterm)


State 90

   80 simple_expression: binary_expression .
   86 range_expression: binary_expression . T_DOTDOT binary_expression $@8 range_increment
   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 120
    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_DOTDOT       [reduce using rule 80 (simple_expression)]
    T_NMATCH       [reduce using rule 80 (simple_expression)]
    T_NE           [reduce using rule 80 (simple_expression)]
    T_EQ           [reduce using rule 80 (simple_expression)]
    T_SHIFT_LEFT   [reduce using rule 80 (simple_expression)]
    T_SHIFT_RIGHT  [reduce using rule 80 (simple_expression)]
    T_OR           [reduce using rule 80 (simple_expression)]
    T_AND          [reduce using rule 80 (simple_expression)]
    T_LE           [reduce using rule 80 (simple_expression)]
    T_GE           [reduce using rule 80 (simple_expression)]
    T_POWER_TO     [reduce using rule 80 (simple_expression)]
    '&'            [reduce using rule 80 (simple_expression)]
    '|'            [reduce using rule 80 (simple_expression)]
    '^'            [reduce using rule 80 (simple_expression)]
    '~'            [reduce using rule 80 (simple_expression)]
    '<'            [reduce using rule 80 (simple_expression)]
    '>'            [reduce using rule 80 (simple_expression)]
    '+'            [reduce using rule 80 (simple_expression)]
    '-'            [reduce using rule 80 (simple_expression)]
    '*'            [reduce using rule 80 (simple_expression)]
    '/'            [reduce using rule 80 (simple_expression)]
    '%'            [reduce using rule 80 (simple_expression)]
    '['            [reduce using rule 80 (simple_expression)]
    $default       reduce using rule 80 (simple_expression)


State 91

   91 s_bterm: value .

    $default  reduce using rule 91 (s_bterm)


State 92

  129 value: struct_reference .
  136 struct_reference: struct_reference . '.' T_IDENT

    '.'  shift, and go to state 143

    $default  reduce using rule 129 (value)


State 93

  132 value: map_literal .

    $default  reduce using rule 132 (value)


State 94

  133 value: array_literal .

    $default  reduce using rule 133 (value)


State 95

  130 value: string .
  158 string: string . T_STRING

    T_STRING  shift, and go to state 144

    $default  reduce using rule 130 (value)


State 96

   92 s_bterm: call_expression .

    $default  reduce using rule 92 (s_bterm)


State 97

  202 call_expression: function_id_or_pointer . '(' @23 parameter_list closing_paren

    '('  shift, and go to state 145


State 98

   96 binary_expression: type_cast . s_bterm

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 146
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 147
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '{'                      shift, and go to state 84

    s_bterm                 go to state 148
    constructor_expression  go to state 89
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 99

  131 value: simple_literal .

    $default  reduce using rule 131 (value)


State 100

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 23 (constdef)


State 101

   35 macrostart: macro_type macro_declaration '(' . parameter_list ')' optional_description

    error                    shift, and go to state 149
    T_NEW                    shift, and go to state 72
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ','  reduce using rule 84 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 84 (range_expression)]

    variable_reference      go to state 85
    parameter_list          go to state 150
    non_empty_pardecl       go to state 151
    par_decl                go to state 152
    simple_expression       go to state 153
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 154
    parameter               go to state 155
    type_cast               go to state 98
    type_name               go to state 156
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 102

   48 block: '{' var_decls . stmntlist closing_brace
   50 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 68

    '}'  reduce using rule 195 (stmntlist)

    variable_reference      go to state 168
    var_decl                go to state 169
    block                   go to state 170
    statement               go to state 171
    assignment              go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    foreach                 go to state 181
    while                   go to state 182
    if_expression           go to state 183
    stmntlist               go to state 184
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 103

   94 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 186


State 104

  200 call_expression: T_FUNC '(' . @22 parameter_list closing_paren

    $default  reduce using rule 199 (@22)

    @22  go to state 187


State 105

  135 struct_reference: T_VARIABLE '.' . T_IDENT

    T_IDENT  shift, and go to state 188


State 106

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  100                  | '~' binary_expression .
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 100 (binary_expression)


State 107

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  101                  | '+' binary_expression .
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 101 (binary_expression)


State 108

   97 binary_expression: '-' T_NUM .
  219 integer_literal: T_NUM .

    error              reduce using rule 97 (binary_expression)
    error              [reduce using rule 219 (integer_literal)]
    T_FOR              reduce using rule 97 (binary_expression)
    T_FOR              [reduce using rule 219 (integer_literal)]
    T_TYPE_IDENTIFIER  reduce using rule 97 (binary_expression)
    T_TYPE_IDENTIFIER  [reduce using rule 219 (integer_literal)]
    T_IDENT            reduce using rule 97 (binary_expression)
    T_IDENT            [reduce using rule 219 (integer_literal)]
    T_FUNC             reduce using rule 97 (binary_expression)
    T_FUNC             [reduce using rule 219 (integer_literal)]
    T_DOTDOT           reduce using rule 97 (binary_expression)
    T_DOTDOT           [reduce using rule 219 (integer_literal)]
    T_IF               reduce using rule 97 (binary_expression)
    T_IF               [reduce using rule 219 (integer_literal)]
    T_ELSE             reduce using rule 97 (binary_expression)
    T_ELSE             [reduce using rule 219 (integer_literal)]
    T_WHILE            reduce using rule 97 (binary_expression)
    T_WHILE            [reduce using rule 219 (integer_literal)]
    T_GOTO             reduce using rule 97 (binary_expression)
    T_GOTO             [reduce using rule 219 (integer_literal)]
    T_SWITCH           reduce using rule 97 (binary_expression)
    T_SWITCH           [reduce using rule 219 (integer_literal)]
    T_CASE             reduce using rule 97 (binary_expression)
    T_CASE             [reduce using rule 219 (integer_literal)]
    T_DEFAULT          reduce using rule 97 (binary_expression)
    T_DEFAULT          [reduce using rule 219 (integer_literal)]
    T_BREAK            reduce using rule 97 (binary_expression)
    T_BREAK            [reduce using rule 219 (integer_literal)]
    T_CONTINUE         reduce using rule 97 (binary_expression)
    T_CONTINUE         [reduce using rule 219 (integer_literal)]
    T_RETURN           reduce using rule 97 (binary_expression)
    T_RETURN           [reduce using rule 219 (integer_literal)]
    T_VARIABLE         reduce using rule 97 (binary_expression)
    T_VARIABLE         [reduce using rule 219 (integer_literal)]
    T_NMATCH           reduce using rule 97 (binary_expression)
    T_NMATCH           [reduce using rule 219 (integer_literal)]
    T_NE               reduce using rule 97 (binary_expression)
    T_NE               [reduce using rule 219 (integer_literal)]
    T_EQ               reduce using rule 97 (binary_expression)
    T_EQ               [reduce using rule 219 (integer_literal)]
    T_SHIFT_LEFT       reduce using rule 97 (binary_expression)
    T_SHIFT_LEFT       [reduce using rule 219 (integer_literal)]
    T_SHIFT_RIGHT      reduce using rule 97 (binary_expression)
    T_SHIFT_RIGHT      [reduce using rule 219 (integer_literal)]
    T_OR               reduce using rule 97 (binary_expression)
    T_OR               [reduce using rule 219 (integer_literal)]
    T_AND              reduce using rule 97 (binary_expression)
    T_AND              [reduce using rule 219 (integer_literal)]
    T_LE               reduce using rule 97 (binary_expression)
    T_LE               [reduce using rule 219 (integer_literal)]
    T_GE               reduce using rule 97 (binary_expression)
    T_GE               [reduce using rule 219 (integer_literal)]
    T_POWER_TO         reduce using rule 97 (binary_expression)
    T_POWER_TO         [reduce using rule 219 (integer_literal)]
    '&'                reduce using rule 97 (binary_expression)
    '&'                [reduce using rule 219 (integer_literal)]
    '|'                reduce using rule 97 (binary_expression)
    '|'                [reduce using rule 219 (integer_literal)]
    '^'                reduce using rule 97 (binary_expression)
    '^'                [reduce using rule 219 (integer_literal)]
    '~'                reduce using rule 97 (binary_expression)
    '~'                [reduce using rule 219 (integer_literal)]
    '<'                reduce using rule 97 (binary_expression)
    '<'                [reduce using rule 219 (integer_literal)]
    '>'                reduce using rule 97 (binary_expression)
    '>'                [reduce using rule 219 (integer_literal)]
    '+'                reduce using rule 97 (binary_expression)
    '+'                [reduce using rule 219 (integer_literal)]
    '-'                reduce using rule 97 (binary_expression)
    '-'                [reduce using rule 219 (integer_literal)]
    '*'                reduce using rule 97 (binary_expression)
    '*'                [reduce using rule 219 (integer_literal)]
    '/'                reduce using rule 97 (binary_expression)
    '/'                [reduce using rule 219 (integer_literal)]
    '%'                reduce using rule 97 (binary_expression)
    '%'                [reduce using rule 219 (integer_literal)]
    '['                reduce using rule 97 (binary_expression)
    '['                [reduce using rule 219 (integer_literal)]
    ';'                reduce using rule 97 (binary_expression)
    ';'                [reduce using rule 219 (integer_literal)]
    ','                reduce using rule 97 (binary_expression)
    ','                [reduce using rule 219 (integer_literal)]
    ')'                reduce using rule 97 (binary_expression)
    ')'                [reduce using rule 219 (integer_literal)]
    '{'                reduce using rule 97 (binary_expression)
    '{'                [reduce using rule 219 (integer_literal)]
    ']'                reduce using rule 97 (binary_expression)
    ']'                [reduce using rule 219 (integer_literal)]
    '}'                reduce using rule 97 (binary_expression)
    '}'                [reduce using rule 219 (integer_literal)]
    $default           reduce using rule 97 (binary_expression)


State 109

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | '-' binary_expression .
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 102 (binary_expression)


State 110

   30 variable_reference: T_IDENT .

    $default  reduce using rule 30 (variable_reference)


State 111

   29 variable_reference: T_VARIABLE .

    $default  reduce using rule 29 (variable_reference)


State 112

  203 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 203 (function_id_or_pointer)


State 113

  146 array_literal: '[' $@10 . ']'

    ']'  shift, and go to state 189


State 114

  148 array_literal: '[' $@11 . array_elements ']'

    T_NUM        shift, and go to state 190
    T_STRING     shift, and go to state 191
    T_CHARACTER  shift, and go to state 192
    T_TRUE       shift, and go to state 193
    T_FALSE      shift, and go to state 194

    array_elements        go to state 195
    array_element         go to state 196
    simple_array_element  go to state 197


State 115

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   99                  | '!' binary_expression .
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_NMATCH       [reduce using rule 99 (binary_expression)]
    T_NE           [reduce using rule 99 (binary_expression)]
    T_EQ           [reduce using rule 99 (binary_expression)]
    T_SHIFT_LEFT   [reduce using rule 99 (binary_expression)]
    T_SHIFT_RIGHT  [reduce using rule 99 (binary_expression)]
    T_OR           [reduce using rule 99 (binary_expression)]
    T_AND          [reduce using rule 99 (binary_expression)]
    T_LE           [reduce using rule 99 (binary_expression)]
    T_GE           [reduce using rule 99 (binary_expression)]
    T_POWER_TO     [reduce using rule 99 (binary_expression)]
    '&'            [reduce using rule 99 (binary_expression)]
    '|'            [reduce using rule 99 (binary_expression)]
    '^'            [reduce using rule 99 (binary_expression)]
    '~'            [reduce using rule 99 (binary_expression)]
    '<'            [reduce using rule 99 (binary_expression)]
    '>'            [reduce using rule 99 (binary_expression)]
    '+'            [reduce using rule 99 (binary_expression)]
    '-'            [reduce using rule 99 (binary_expression)]
    '*'            [reduce using rule 99 (binary_expression)]
    '/'            [reduce using rule 99 (binary_expression)]
    '%'            [reduce using rule 99 (binary_expression)]
    '['            [reduce using rule 99 (binary_expression)]
    $default       reduce using rule 99 (binary_expression)


State 116

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression
  124                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142
    ')'            shift, and go to state 198


State 117

  211 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 199


State 118

  138 map_literal: '{' $@9 . optional_map_associates closing_brace

    T_STRING  shift, and go to state 200

    $default  reduce using rule 139 (optional_map_associates)

    optional_map_associates  go to state 201
    map_associates           go to state 202
    map_associate            go to state 203


State 119

  125 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 125 (binary_expression)


State 120

   86 range_expression: binary_expression T_DOTDOT . binary_expression $@8 range_increment

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 204
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 121

  104 binary_expression: binary_expression T_NMATCH . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 205
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 122

  123 binary_expression: binary_expression T_NE . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 206
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 123

  122 binary_expression: binary_expression T_EQ . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 207
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 124

  113 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 208
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 125

  114 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 209
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 126

  117 binary_expression: binary_expression T_OR . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 210
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 127

  116 binary_expression: binary_expression T_AND . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 211
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 128

  120 binary_expression: binary_expression T_LE . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 212
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 129

  121 binary_expression: binary_expression T_GE . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 213
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 130

  115 binary_expression: binary_expression T_POWER_TO . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 214
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 131

  105 binary_expression: binary_expression '&' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 215
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 132

  106 binary_expression: binary_expression '|' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 216
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 133

  108 binary_expression: binary_expression '^' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 217
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 134

  103 binary_expression: binary_expression '~' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 218
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 135

  118 binary_expression: binary_expression '<' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 219
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 136

  119 binary_expression: binary_expression '>' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 220
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 137

  107 binary_expression: binary_expression '+' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 221
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 138

  109 binary_expression: binary_expression '-' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 222
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 139

  110 binary_expression: binary_expression '*' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 223
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 140

  111 binary_expression: binary_expression '/' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 224
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 141

  112 binary_expression: binary_expression '%' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 225
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 142

   98 binary_expression: binary_expression '[' . binary_expression_or_range ']'

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ']'  reduce using rule 84 (range_expression)

    variable_reference          go to state 85
    binary_expression_or_range  go to state 226
    range_expression            go to state 227
    s_bterm                     go to state 88
    constructor_expression      go to state 89
    binary_expression           go to state 228
    value                       go to state 91
    struct_reference            go to state 92
    map_literal                 go to state 93
    array_literal               go to state 94
    string                      go to state 95
    call_expression             go to state 96
    function_id_or_pointer      go to state 97
    type_cast                   go to state 98
    boolean_literal             go to state 58
    float_literal               go to state 59
    integer_literal             go to state 60
    character_literal           go to state 61
    simple_literal              go to state 99


State 143

  136 struct_reference: struct_reference '.' . T_IDENT

    T_IDENT  shift, and go to state 229


State 144

  158 string: string T_STRING .

    $default  reduce using rule 158 (string)


State 145

  202 call_expression: function_id_or_pointer '(' . @23 parameter_list closing_paren

    $default  reduce using rule 201 (@23)

    @23  go to state 230


State 146

  134 value: T_IDENT .
  204 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 204 (function_id_or_pointer)
    $default  reduce using rule 134 (value)


State 147

  128 value: T_VARIABLE .
  135 struct_reference: T_VARIABLE . '.' T_IDENT

    '.'  shift, and go to state 105

    $default  reduce using rule 128 (value)


State 148

   96 binary_expression: type_cast s_bterm .

    $default  reduce using rule 96 (binary_expression)


State 149

  205 function_id_or_pointer: error .
  209 nonempty_parameters: error .

    '('       reduce using rule 205 (function_id_or_pointer)
    $default  reduce using rule 209 (nonempty_parameters)


State 150

   35 macrostart: macro_type macro_declaration '(' parameter_list . ')' optional_description

    ')'  shift, and go to state 231


State 151

   42 parameter_list: non_empty_pardecl .
   44 non_empty_pardecl: non_empty_pardecl . ',' par_decl

    ','  shift, and go to state 232

    $default  reduce using rule 42 (parameter_list)


State 152

   43 non_empty_pardecl: par_decl .

    $default  reduce using rule 43 (non_empty_pardecl)


State 153

  210 parameter: simple_expression .

    $default  reduce using rule 210 (parameter)


State 154

  206 parameter_list: nonempty_parameters .
  208 nonempty_parameters: nonempty_parameters . ',' parameter

    ','  shift, and go to state 233

    $default  reduce using rule 206 (parameter_list)


State 155

  207 nonempty_parameters: parameter .

    $default  reduce using rule 207 (nonempty_parameters)


State 156

   45 par_decl: type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 234


State 157

   66 statement: error . ';'
  205 function_id_or_pointer: error .

    ';'  shift, and go to state 235

    $default  reduce using rule 205 (function_id_or_pointer)


State 158

  182 foreach: T_FOR . $@14 in_clause $@15 local_block

    $default  reduce using rule 180 ($@14)

    $@14  go to state 236


State 159

   30 variable_reference: T_IDENT .
  174 label: T_IDENT . ':'
  204 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 237

    '('       reduce using rule 204 (function_id_or_pointer)
    $default  reduce using rule 30 (variable_reference)


State 160

  191 if_expression: T_IF . condition $@18 local_block $@19 else_clause

    '('  shift, and go to state 238

    condition  go to state 239


State 161

  185 while: T_WHILE . $@16 condition $@17 local_block

    $default  reduce using rule 183 ($@16)

    $@16  go to state 240


State 162

  175 goto: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 241


State 163

  179 switch_expression: T_SWITCH . '(' value ')' $@13 '{' case_clauses '}'

    '('  shift, and go to state 242


State 164

  159 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 243

    $default  reduce using rule 164 (opt_num)

    opt_num  go to state 244


State 165

  160 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 243

    $default  reduce using rule 164 (opt_num)

    opt_num  go to state 245


State 166

  161 return_expression: T_RETURN . optional_bterm

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    error              [reduce using rule 162 (optional_bterm)]
    T_FOR              reduce using rule 162 (optional_bterm)
    T_TYPE_IDENTIFIER  reduce using rule 162 (optional_bterm)
    T_IDENT            [reduce using rule 162 (optional_bterm)]
    T_FUNC             [reduce using rule 162 (optional_bterm)]
    T_IF               reduce using rule 162 (optional_bterm)
    T_ELSE             reduce using rule 162 (optional_bterm)
    T_WHILE            reduce using rule 162 (optional_bterm)
    T_GOTO             reduce using rule 162 (optional_bterm)
    T_SWITCH           reduce using rule 162 (optional_bterm)
    T_CASE             reduce using rule 162 (optional_bterm)
    T_DEFAULT          reduce using rule 162 (optional_bterm)
    T_BREAK            reduce using rule 162 (optional_bterm)
    T_CONTINUE         reduce using rule 162 (optional_bterm)
    T_RETURN           reduce using rule 162 (optional_bterm)
    T_VARIABLE         [reduce using rule 162 (optional_bterm)]
    '*'                [reduce using rule 162 (optional_bterm)]
    ';'                reduce using rule 162 (optional_bterm)
    '{'                [reduce using rule 162 (optional_bterm)]
    '}'                reduce using rule 162 (optional_bterm)

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 246
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    optional_bterm          go to state 247
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 167

   51 statement: ';' .

    $default  reduce using rule 51 (statement)


State 168

   67 assignment: variable_reference . assignment_expression
   72           | variable_reference . $@7 shorthand_assignment_operator simple_expression
   73 assignment_target: variable_reference .
   89 increment_expression: variable_reference . T_MINUSMINUS
   90                     | variable_reference . T_PLUSPLUS

    T_PLUSPLUS    shift, and go to state 248
    T_MINUSMINUS  shift, and go to state 249
    T_ASSIGN      shift, and go to state 49

    '['       reduce using rule 73 (assignment_target)
    '.'       reduce using rule 73 (assignment_target)
    $default  reduce using rule 71 ($@7)

    $@7                    go to state 250
    assignment_expression  go to state 251


State 169

   50 var_decls: var_decls var_decl . ';'
   65 statement: var_decl .

    ';'  shift, and go to state 252

    ';'       [reduce using rule 65 (statement)]
    $default  reduce using rule 65 (statement)


State 170

   62 statement: block .

    $default  reduce using rule 62 (statement)


State 171

  197 stmntlist: statement . $@21 stmntlist

    $default  reduce using rule 196 ($@21)

    $@21  go to state 253


State 172

   53 statement: assignment . ';'

    ';'  shift, and go to state 254


State 173

   69 assignment: assignment_target . '.' T_IDENT $@6 assignment_expression
   70           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 255
    '.'  shift, and go to state 256


State 174

   63 statement: increment_expression .

    $default  reduce using rule 63 (statement)


State 175

   58 statement: break .

    $default  reduce using rule 58 (statement)


State 176

   59 statement: continue .

    $default  reduce using rule 59 (statement)


State 177

   60 statement: return_expression .

    $default  reduce using rule 60 (statement)


State 178

   64 statement: label .

    $default  reduce using rule 64 (statement)


State 179

   61 statement: goto .

    $default  reduce using rule 61 (statement)


State 180

   57 statement: switch_expression .

    $default  reduce using rule 57 (statement)


State 181

   56 statement: foreach .

    $default  reduce using rule 56 (statement)


State 182

   55 statement: while .

    $default  reduce using rule 55 (statement)


State 183

   54 statement: if_expression .

    $default  reduce using rule 54 (statement)


State 184

   48 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 257

    closing_brace  go to state 258


State 185

   52 statement: call_expression . ';'

    ';'  shift, and go to state 259


State 186

   94 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 260


State 187

  200 call_expression: T_FUNC '(' @22 . parameter_list closing_paren

    error                    shift, and go to state 149
    T_NEW                    shift, and go to state 72
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ','  reduce using rule 84 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 84 (range_expression)]

    variable_reference      go to state 85
    parameter_list          go to state 261
    non_empty_pardecl       go to state 151
    par_decl                go to state 152
    simple_expression       go to state 153
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 154
    parameter               go to state 155
    type_cast               go to state 98
    type_name               go to state 156
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 188

  135 struct_reference: T_VARIABLE '.' T_IDENT .

    $default  reduce using rule 135 (struct_reference)


State 189

  146 array_literal: '[' $@10 ']' .

    $default  reduce using rule 146 (array_literal)


State 190

  153 simple_array_element: T_NUM .

    $default  reduce using rule 153 (simple_array_element)


State 191

  152 array_element: T_STRING .

    $default  reduce using rule 152 (array_element)


State 192

  154 simple_array_element: T_CHARACTER .

    $default  reduce using rule 154 (simple_array_element)


State 193

  155 simple_array_element: T_TRUE .

    $default  reduce using rule 155 (simple_array_element)


State 194

  156 simple_array_element: T_FALSE .

    $default  reduce using rule 156 (simple_array_element)


State 195

  148 array_literal: '[' $@11 array_elements . ']'
  149 array_elements: array_elements . ',' array_element

    ','  shift, and go to state 262
    ']'  shift, and go to state 263


State 196

  150 array_elements: array_element .

    $default  reduce using rule 150 (array_elements)


State 197

  151 array_element: simple_array_element .

    $default  reduce using rule 151 (array_element)


State 198

  124 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 124 (binary_expression)


State 199

  211 type_cast: '(' type_name ')' .

    $default  reduce using rule 211 (type_cast)


State 200

  143 map_associate: T_STRING . T_ASSOC_ARROW simple_literal
  144              | T_STRING . T_ASSOC_ARROW T_STRING

    T_ASSOC_ARROW  shift, and go to state 264


State 201

  138 map_literal: '{' $@9 optional_map_associates . closing_brace

    '}'  shift, and go to state 257

    closing_brace  go to state 265


State 202

  140 optional_map_associates: map_associates .
  142 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 266

    $default  reduce using rule 140 (optional_map_associates)


State 203

  141 map_associates: map_associate .

    $default  reduce using rule 141 (map_associates)


State 204

   86 range_expression: binary_expression T_DOTDOT binary_expression . $@8 range_increment
   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_NMATCH       [reduce using rule 85 ($@8)]
    T_NE           [reduce using rule 85 ($@8)]
    T_EQ           [reduce using rule 85 ($@8)]
    T_SHIFT_LEFT   [reduce using rule 85 ($@8)]
    T_SHIFT_RIGHT  [reduce using rule 85 ($@8)]
    T_OR           [reduce using rule 85 ($@8)]
    T_AND          [reduce using rule 85 ($@8)]
    T_LE           [reduce using rule 85 ($@8)]
    T_GE           [reduce using rule 85 ($@8)]
    T_POWER_TO     [reduce using rule 85 ($@8)]
    '&'            [reduce using rule 85 ($@8)]
    '|'            [reduce using rule 85 ($@8)]
    '^'            [reduce using rule 85 ($@8)]
    '~'            [reduce using rule 85 ($@8)]
    '<'            [reduce using rule 85 ($@8)]
    '>'            [reduce using rule 85 ($@8)]
    '+'            [reduce using rule 85 ($@8)]
    '-'            [reduce using rule 85 ($@8)]
    '*'            [reduce using rule 85 ($@8)]
    '/'            [reduce using rule 85 ($@8)]
    '%'            [reduce using rule 85 ($@8)]
    '['            [reduce using rule 85 ($@8)]
    $default       reduce using rule 85 ($@8)

    $@8  go to state 267


State 205

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression T_NMATCH binary_expression .
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 104 (binary_expression)


State 206

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression
  123                  | binary_expression T_NE binary_expression .

    T_NMATCH       shift, and go to state 121
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    $default  reduce using rule 123 (binary_expression)


State 207

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression T_EQ binary_expression .
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    $default  reduce using rule 122 (binary_expression)


State 208

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression T_SHIFT_LEFT binary_expression .
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '+'         shift, and go to state 137
    '-'         shift, and go to state 138
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 113 (binary_expression)


State 209

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression T_SHIFT_RIGHT binary_expression .
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '+'         shift, and go to state 137
    '-'         shift, and go to state 138
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 114 (binary_expression)


State 210

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  117                  | binary_expression T_OR binary_expression .
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 117 (binary_expression)


State 211

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  116                  | binary_expression T_AND binary_expression .
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 116 (binary_expression)


State 212

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  120                  | binary_expression T_LE binary_expression .
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_POWER_TO     shift, and go to state 130
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 120 (binary_expression)


State 213

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  121                  | binary_expression T_GE binary_expression .
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_POWER_TO     shift, and go to state 130
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 121 (binary_expression)


State 214

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression T_POWER_TO binary_expression .
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 142

    $default  reduce using rule 115 (binary_expression)


State 215

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  105                  | binary_expression '&' binary_expression .
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 105 (binary_expression)


State 216

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  106                  | binary_expression '|' binary_expression .
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 106 (binary_expression)


State 217

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  108                  | binary_expression '^' binary_expression .
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 108 (binary_expression)


State 218

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  103                  | binary_expression '~' binary_expression .
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 103 (binary_expression)


State 219

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  118                  | binary_expression '<' binary_expression .
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_POWER_TO     shift, and go to state 130
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 118 (binary_expression)


State 220

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  119                  | binary_expression '>' binary_expression .
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_POWER_TO     shift, and go to state 130
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 119 (binary_expression)


State 221

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  107                  | binary_expression '+' binary_expression .
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 107 (binary_expression)


State 222

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  109                  | binary_expression '-' binary_expression .
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 109 (binary_expression)


State 223

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  110                  | binary_expression '*' binary_expression .
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 142

    $default  reduce using rule 110 (binary_expression)


State 224

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  111                  | binary_expression '/' binary_expression .
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 142

    $default  reduce using rule 111 (binary_expression)


State 225

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  112                  | binary_expression '%' binary_expression .
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 142

    $default  reduce using rule 112 (binary_expression)


State 226

   98 binary_expression: binary_expression '[' binary_expression_or_range . ']'

    ']'  shift, and go to state 268


State 227

   83 binary_expression_or_range: range_expression .

    $default  reduce using rule 83 (binary_expression_or_range)


State 228

   82 binary_expression_or_range: binary_expression .
   86 range_expression: binary_expression . T_DOTDOT binary_expression $@8 range_increment
   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 120
    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 82 (binary_expression_or_range)


State 229

  136 struct_reference: struct_reference '.' T_IDENT .

    $default  reduce using rule 136 (struct_reference)


State 230

  202 call_expression: function_id_or_pointer '(' @23 . parameter_list closing_paren

    error                    shift, and go to state 149
    T_NEW                    shift, and go to state 72
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ','  reduce using rule 84 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 84 (range_expression)]

    variable_reference      go to state 85
    parameter_list          go to state 269
    non_empty_pardecl       go to state 151
    par_decl                go to state 152
    simple_expression       go to state 153
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 154
    parameter               go to state 155
    type_cast               go to state 98
    type_name               go to state 156
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 231

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' . optional_description

    T_STRING  shift, and go to state 270

    $default  reduce using rule 39 (optional_description)

    optional_description  go to state 271


State 232

   44 non_empty_pardecl: non_empty_pardecl ',' . par_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    par_decl   go to state 272
    type_name  go to state 156


State 233

  208 nonempty_parameters: nonempty_parameters ',' . parameter

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ','  reduce using rule 84 (range_expression)
    ')'  reduce using rule 84 (range_expression)

    variable_reference      go to state 85
    simple_expression       go to state 153
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    parameter               go to state 273
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 234

   45 par_decl: type_name variable_identifier .

    $default  reduce using rule 45 (par_decl)


State 235

   66 statement: error ';' .

    $default  reduce using rule 66 (statement)


State 236

  182 foreach: T_FOR $@14 . in_clause $@15 local_block

    '('  shift, and go to state 274

    in_clause  go to state 275


State 237

  174 label: T_IDENT ':' .

    $default  reduce using rule 174 (label)


State 238

  126 condition: '(' . binary_expression ')'
  127          | '(' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 276
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 239

  191 if_expression: T_IF condition . $@18 local_block $@19 else_clause

    $default  reduce using rule 189 ($@18)

    $@18  go to state 277


State 240

  185 while: T_WHILE $@16 . condition $@17 local_block

    '('  shift, and go to state 238

    condition  go to state 278


State 241

  175 goto: T_GOTO T_IDENT .

    $default  reduce using rule 175 (goto)


State 242

  179 switch_expression: T_SWITCH '(' . value ')' $@13 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 279
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_VARIABLE               shift, and go to state 147
    '['                      shift, and go to state 81
    '{'                      shift, and go to state 84

    value              go to state 280
    struct_reference   go to state 92
    map_literal        go to state 93
    array_literal      go to state 94
    string             go to state 95
    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 99


State 243

  165 opt_num: T_NUM .

    $default  reduce using rule 165 (opt_num)


State 244

  159 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 281


State 245

  160 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 282


State 246

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression
  163 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    '*'       [reduce using rule 163 (optional_bterm)]
    $default  reduce using rule 163 (optional_bterm)


State 247

  161 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 161 (return_expression)


State 248

   90 increment_expression: variable_reference T_PLUSPLUS .

    $default  reduce using rule 90 (increment_expression)


State 249

   89 increment_expression: variable_reference T_MINUSMINUS .

    $default  reduce using rule 89 (increment_expression)


State 250

   72 assignment: variable_reference $@7 . shorthand_assignment_operator simple_expression

    T_SH_ASSIGN_PLUS   shift, and go to state 283
    T_SH_ASSIGN_MINUS  shift, and go to state 284
    T_SH_ASSIGN_MULT   shift, and go to state 285
    T_SH_ASSIGN_DIV    shift, and go to state 286
    T_SH_ASSIGN_MOD    shift, and go to state 287

    shorthand_assignment_operator  go to state 288


State 251

   67 assignment: variable_reference assignment_expression .

    $default  reduce using rule 67 (assignment)


State 252

   50 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 50 (var_decls)


State 253

  197 stmntlist: statement $@21 . stmntlist

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 68

    T_CASE     reduce using rule 195 (stmntlist)
    T_DEFAULT  reduce using rule 195 (stmntlist)
    '}'        reduce using rule 195 (stmntlist)

    variable_reference      go to state 168
    var_decl                go to state 289
    block                   go to state 170
    statement               go to state 171
    assignment              go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    foreach                 go to state 181
    while                   go to state 182
    if_expression           go to state 183
    stmntlist               go to state 290
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 254

   53 statement: assignment ';' .

    $default  reduce using rule 53 (statement)


State 255

   70 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 291
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 256

   69 assignment: assignment_target '.' . T_IDENT $@6 assignment_expression

    T_IDENT  shift, and go to state 292


State 257

  188 closing_brace: '}' .

    $default  reduce using rule 188 (closing_brace)


State 258

   48 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 48 (block)


State 259

   52 statement: call_expression ';' .

    $default  reduce using rule 52 (statement)


State 260

   94 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 94 (constructor_expression)


State 261

  200 call_expression: T_FUNC '(' @22 parameter_list . closing_paren

    ')'  shift, and go to state 293

    closing_paren  go to state 294


State 262

  149 array_elements: array_elements ',' . array_element

    T_NUM        shift, and go to state 190
    T_STRING     shift, and go to state 191
    T_CHARACTER  shift, and go to state 192
    T_TRUE       shift, and go to state 193
    T_FALSE      shift, and go to state 194

    array_element         go to state 295
    simple_array_element  go to state 197


State 263

  148 array_literal: '[' $@11 array_elements ']' .

    $default  reduce using rule 148 (array_literal)


State 264

  143 map_associate: T_STRING T_ASSOC_ARROW . simple_literal
  144              | T_STRING T_ASSOC_ARROW . T_STRING

    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 296
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56

    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 297


State 265

  138 map_literal: '{' $@9 optional_map_associates closing_brace .

    $default  reduce using rule 138 (map_literal)


State 266

  142 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 200

    map_associate  go to state 298


State 267

   86 range_expression: binary_expression T_DOTDOT binary_expression $@8 . range_increment

    T_DOTDOT  shift, and go to state 299

    T_DOTDOT  [reduce using rule 87 (range_increment)]
    $default  reduce using rule 87 (range_increment)

    range_increment  go to state 300


State 268

   98 binary_expression: binary_expression '[' binary_expression_or_range ']' .

    $default  reduce using rule 98 (binary_expression)


State 269

  202 call_expression: function_id_or_pointer '(' @23 parameter_list . closing_paren

    ')'  shift, and go to state 293

    closing_paren  go to state 301


State 270

   40 optional_description: T_STRING .

    $default  reduce using rule 40 (optional_description)


State 271

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description .

    $default  reduce using rule 35 (macrostart)


State 272

   44 non_empty_pardecl: non_empty_pardecl ',' par_decl .

    $default  reduce using rule 44 (non_empty_pardecl)


State 273

  208 nonempty_parameters: nonempty_parameters ',' parameter .

    $default  reduce using rule 208 (nonempty_parameters)


State 274

  177 in_clause: '(' . type_name variable_identifier $@12 ':' simple_expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 302


State 275

  182 foreach: T_FOR $@14 in_clause . $@15 local_block

    $default  reduce using rule 181 ($@15)

    $@15  go to state 303


State 276

   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression
  126 condition: '(' binary_expression . ')'
  127          | '(' binary_expression .

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142
    ')'            shift, and go to state 304

    '*'       [reduce using rule 127 (condition)]
    $default  reduce using rule 127 (condition)


State 277

  191 if_expression: T_IF condition $@18 . local_block $@19 else_clause

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 305

    variable_reference      go to state 168
    var_decl                go to state 289
    block                   go to state 170
    statement               go to state 306
    assignment              go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    foreach                 go to state 181
    while                   go to state 182
    local_block             go to state 307
    if_expression           go to state 183
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 278

  185 while: T_WHILE $@16 condition . $@17 local_block

    $default  reduce using rule 184 ($@17)

    $@17  go to state 308


State 279

  134 value: T_IDENT .

    $default  reduce using rule 134 (value)


State 280

  179 switch_expression: T_SWITCH '(' value . ')' $@13 '{' case_clauses '}'

    ')'  shift, and go to state 309


State 281

  159 break: T_BREAK opt_num ';' .

    $default  reduce using rule 159 (break)


State 282

  160 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 160 (continue)


State 283

   77 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 77 (shorthand_assignment_operator)


State 284

   78 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 78 (shorthand_assignment_operator)


State 285

   74 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 74 (shorthand_assignment_operator)


State 286

   75 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 75 (shorthand_assignment_operator)


State 287

   76 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 76 (shorthand_assignment_operator)


State 288

   72 assignment: variable_reference $@7 shorthand_assignment_operator . simple_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ';'  reduce using rule 84 (range_expression)

    variable_reference      go to state 85
    simple_expression       go to state 310
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 289

   65 statement: var_decl .

    $default  reduce using rule 65 (statement)


State 290

  197 stmntlist: statement $@21 stmntlist .

    $default  reduce using rule 197 (stmntlist)


State 291

   70 assignment: assignment_target '[' binary_expression . ']' assignment_expression
   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142
    ']'            shift, and go to state 311


State 292

   69 assignment: assignment_target '.' T_IDENT . $@6 assignment_expression

    $default  reduce using rule 68 ($@6)

    $@6  go to state 312


State 293

  198 closing_paren: ')' .

    $default  reduce using rule 198 (closing_paren)


State 294

  200 call_expression: T_FUNC '(' @22 parameter_list closing_paren .

    $default  reduce using rule 200 (call_expression)


State 295

  149 array_elements: array_elements ',' array_element .

    $default  reduce using rule 149 (array_elements)


State 296

  144 map_associate: T_STRING T_ASSOC_ARROW T_STRING .

    $default  reduce using rule 144 (map_associate)


State 297

  143 map_associate: T_STRING T_ASSOC_ARROW simple_literal .

    $default  reduce using rule 143 (map_associate)


State 298

  142 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 142 (map_associates)


State 299

   88 range_increment: T_DOTDOT . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 313
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 300

   86 range_expression: binary_expression T_DOTDOT binary_expression $@8 range_increment .

    $default  reduce using rule 86 (range_expression)


State 301

  202 call_expression: function_id_or_pointer '(' @23 parameter_list closing_paren .

    $default  reduce using rule 202 (call_expression)


State 302

  177 in_clause: '(' type_name . variable_identifier $@12 ':' simple_expression ')'

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 314


State 303

  182 foreach: T_FOR $@14 in_clause $@15 . local_block

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 305

    variable_reference      go to state 168
    var_decl                go to state 289
    block                   go to state 170
    statement               go to state 306
    assignment              go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    foreach                 go to state 181
    while                   go to state 182
    local_block             go to state 315
    if_expression           go to state 183
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 304

  126 condition: '(' binary_expression ')' .

    $default  reduce using rule 126 (condition)


State 305

   48 block: '{' . var_decls stmntlist closing_brace
  187 local_block: '{' . stmntlist closing_brace

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 68

    error              [reduce using rule 49 (var_decls)]
    T_FOR              [reduce using rule 49 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 49 (var_decls)]
    T_IDENT            [reduce using rule 49 (var_decls)]
    T_FUNC             [reduce using rule 49 (var_decls)]
    T_IF               [reduce using rule 49 (var_decls)]
    T_WHILE            [reduce using rule 49 (var_decls)]
    T_GOTO             [reduce using rule 49 (var_decls)]
    T_SWITCH           [reduce using rule 49 (var_decls)]
    T_BREAK            [reduce using rule 49 (var_decls)]
    T_CONTINUE         [reduce using rule 49 (var_decls)]
    T_RETURN           [reduce using rule 49 (var_decls)]
    T_VARIABLE         [reduce using rule 49 (var_decls)]
    '*'                [reduce using rule 49 (var_decls)]
    ';'                [reduce using rule 49 (var_decls)]
    '{'                [reduce using rule 49 (var_decls)]
    '}'                reduce using rule 49 (var_decls)
    '}'                [reduce using rule 195 (stmntlist)]

    variable_reference      go to state 168
    var_decl                go to state 289
    block                   go to state 170
    var_decls               go to state 102
    statement               go to state 171
    assignment              go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    foreach                 go to state 181
    while                   go to state 182
    if_expression           go to state 183
    stmntlist               go to state 316
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 306

  186 local_block: statement .

    $default  reduce using rule 186 (local_block)


State 307

  191 if_expression: T_IF condition $@18 local_block . $@19 else_clause

    $default  reduce using rule 190 ($@19)

    $@19  go to state 317


State 308

  185 while: T_WHILE $@16 condition $@17 . local_block

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 305

    variable_reference      go to state 168
    var_decl                go to state 289
    block                   go to state 170
    statement               go to state 306
    assignment              go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    foreach                 go to state 181
    while                   go to state 182
    local_block             go to state 318
    if_expression           go to state 183
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 309

  179 switch_expression: T_SWITCH '(' value ')' . $@13 '{' case_clauses '}'

    $default  reduce using rule 178 ($@13)

    $@13  go to state 319


State 310

   72 assignment: variable_reference $@7 shorthand_assignment_operator simple_expression .

    $default  reduce using rule 72 (assignment)


State 311

   70 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 320


State 312

   69 assignment: assignment_target '.' T_IDENT $@6 . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 321


State 313

   88 range_increment: T_DOTDOT binary_expression .
   98 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  103                  | binary_expression . '~' binary_expression
  104                  | binary_expression . T_NMATCH binary_expression
  105                  | binary_expression . '&' binary_expression
  106                  | binary_expression . '|' binary_expression
  107                  | binary_expression . '+' binary_expression
  108                  | binary_expression . '^' binary_expression
  109                  | binary_expression . '-' binary_expression
  110                  | binary_expression . '*' binary_expression
  111                  | binary_expression . '/' binary_expression
  112                  | binary_expression . '%' binary_expression
  113                  | binary_expression . T_SHIFT_LEFT binary_expression
  114                  | binary_expression . T_SHIFT_RIGHT binary_expression
  115                  | binary_expression . T_POWER_TO binary_expression
  116                  | binary_expression . T_AND binary_expression
  117                  | binary_expression . T_OR binary_expression
  118                  | binary_expression . '<' binary_expression
  119                  | binary_expression . '>' binary_expression
  120                  | binary_expression . T_LE binary_expression
  121                  | binary_expression . T_GE binary_expression
  122                  | binary_expression . T_EQ binary_expression
  123                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 88 (range_increment)


State 314

  177 in_clause: '(' type_name variable_identifier . $@12 ':' simple_expression ')'

    $default  reduce using rule 176 ($@12)

    $@12  go to state 322


State 315

  182 foreach: T_FOR $@14 in_clause $@15 local_block .

    $default  reduce using rule 182 (foreach)


State 316

  187 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 257

    closing_brace  go to state 323


State 317

  191 if_expression: T_IF condition $@18 local_block $@19 . else_clause

    T_ELSE  shift, and go to state 324

    T_ELSE    [reduce using rule 192 (else_clause)]
    $default  reduce using rule 192 (else_clause)

    else_clause  go to state 325


State 318

  185 while: T_WHILE $@16 condition $@17 local_block .

    $default  reduce using rule 185 (while)


State 319

  179 switch_expression: T_SWITCH '(' value ')' $@13 . '{' case_clauses '}'

    '{'  shift, and go to state 326


State 320

   70 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 70 (assignment)


State 321

   69 assignment: assignment_target '.' T_IDENT $@6 assignment_expression .

    $default  reduce using rule 69 (assignment)


State 322

  177 in_clause: '(' type_name variable_identifier $@12 . ':' simple_expression ')'

    ':'  shift, and go to state 327


State 323

  187 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 187 (local_block)


State 324

  194 else_clause: T_ELSE . $@20 local_block

    $default  reduce using rule 193 ($@20)

    $@20  go to state 328


State 325

  191 if_expression: T_IF condition $@18 local_block $@19 else_clause .

    $default  reduce using rule 191 (if_expression)


State 326

  179 switch_expression: T_SWITCH '(' value ')' $@13 '{' . case_clauses '}'

    T_CASE     shift, and go to state 329
    T_DEFAULT  shift, and go to state 330

    $default  reduce using rule 166 (case_clauses)

    case_clauses   go to state 331
    case_clause    go to state 332
    case_selector  go to state 333


State 327

  177 in_clause: '(' type_name variable_identifier $@12 ':' . simple_expression ')'

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ')'  reduce using rule 84 (range_expression)

    variable_reference      go to state 85
    simple_expression       go to state 334
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 328

  194 else_clause: T_ELSE $@20 . local_block

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 305

    variable_reference      go to state 168
    var_decl                go to state 289
    block                   go to state 170
    statement               go to state 306
    assignment              go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    foreach                 go to state 181
    while                   go to state 182
    local_block             go to state 335
    if_expression           go to state 183
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 329

  169 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 336
    T_STRING  shift, and go to state 337

    case_condition  go to state 338


State 330

  170 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 339


State 331

  179 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses . '}'

    '}'  shift, and go to state 340


State 332

  167 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 329
    T_DEFAULT  shift, and go to state 330

    $default  reduce using rule 166 (case_clauses)

    case_clauses   go to state 341
    case_clause    go to state 332
    case_selector  go to state 333


State 333

  168 case_clause: case_selector . stmntlist

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 68

    T_CASE     reduce using rule 195 (stmntlist)
    T_DEFAULT  reduce using rule 195 (stmntlist)
    '}'        reduce using rule 195 (stmntlist)

    variable_reference      go to state 168
    var_decl                go to state 289
    block                   go to state 170
    statement               go to state 171
    assignment              go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    foreach                 go to state 181
    while                   go to state 182
    if_expression           go to state 183
    stmntlist               go to state 342
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 334

  177 in_clause: '(' type_name variable_identifier $@12 ':' simple_expression . ')'

    ')'  shift, and go to state 343


State 335

  194 else_clause: T_ELSE $@20 local_block .

    $default  reduce using rule 194 (else_clause)


State 336

  171 case_condition: T_NUM .
  173               | T_NUM . T_DOTDOT T_NUM

    T_DOTDOT  shift, and go to state 344

    $default  reduce using rule 171 (case_condition)


State 337

  172 case_condition: T_STRING .

    $default  reduce using rule 172 (case_condition)


State 338

  169 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 345


State 339

  170 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 170 (case_selector)


State 340

  179 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses '}' .

    $default  reduce using rule 179 (switch_expression)


State 341

  167 case_clauses: case_clause case_clauses .

    $default  reduce using rule 167 (case_clauses)


State 342

  168 case_clause: case_selector stmntlist .

    $default  reduce using rule 168 (case_clause)


State 343

  177 in_clause: '(' type_name variable_identifier $@12 ':' simple_expression ')' .

    $default  reduce using rule 177 (in_clause)


State 344

  173 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 346


State 345

  169 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 169 (case_selector)


State 346

  173 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 173 (case_condition)
