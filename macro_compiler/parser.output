State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 58 conflicts: 10 shift/reduce
State 102 conflicts: 24 shift/reduce
State 116 conflicts: 1 reduce/reduce
State 120 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 128 conflicts: 23 shift/reduce
State 183 conflicts: 6 shift/reduce
State 186 conflicts: 1 shift/reduce
State 205 conflicts: 1 reduce/reduce
State 221 conflicts: 23 shift/reduce
State 222 conflicts: 1 shift/reduce
State 223 conflicts: 1 shift/reduce
State 224 conflicts: 1 shift/reduce
State 225 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce
State 228 conflicts: 1 shift/reduce
State 229 conflicts: 1 shift/reduce
State 230 conflicts: 1 shift/reduce
State 231 conflicts: 1 shift/reduce
State 232 conflicts: 1 shift/reduce
State 233 conflicts: 1 shift/reduce
State 234 conflicts: 1 shift/reduce
State 235 conflicts: 1 shift/reduce
State 236 conflicts: 1 shift/reduce
State 237 conflicts: 1 shift/reduce
State 238 conflicts: 1 shift/reduce
State 239 conflicts: 1 shift/reduce
State 240 conflicts: 1 shift/reduce
State 241 conflicts: 1 shift/reduce
State 242 conflicts: 1 shift/reduce
State 247 conflicts: 1 reduce/reduce
State 269 conflicts: 1 shift/reduce
State 291 conflicts: 1 shift/reduce
State 301 conflicts: 1 shift/reduce
State 329 conflicts: 16 shift/reduce, 1 reduce/reduce
State 339 conflicts: 1 shift/reduce
State 344 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | macro_definition macro_definitions

    8 namespace: %empty
    9          | T_NAMESPACE T_IDENT ';'

   10 prerequisites: %empty
   11              | prerequisites require

   12 require: T_REQUIRE T_STRING ';'

   13 global_declarations: %empty
   14                    | global_declarations constants ';'
   15                    | global_declarations global_var ';'
   16                    | global_declarations native_macro_definition ';'

   17 scope: %empty
   18      | T_STATIC

   19 constants: T_CONST constant_list

   20 constant_list: constdef
   21              | constant_list ',' constdef

   22 $@3: %empty

   23 $@4: %empty

   24 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   25 constant_literal: simple_literal
   26                 | T_STRING

   27 variable_identifier: T_IDENT
   28                    | T_NUM
   29                    | T_STRING

   30 variable_reference: T_VARIABLE
   31                   | T_IDENT

   32 macro_declaration: T_IDENT
   33                  | T_FUNC

   34 macro_type: scope T_VOID
   35           | scope type_name

   36 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description

   37 global_var: scope var_decl

   38 var_decl: type_name variable_identifier assignment_expression
   39         | type_name variable_identifier

   40 optional_description: %empty
   41                     | T_STRING

   42 parameter_list: %empty
   43               | non_empty_pardecl

   44 non_empty_pardecl: parameter_declaration
   45                  | non_empty_pardecl ',' parameter_declaration

   46 parameter_declaration: type_name variable_identifier
   47                      | T_ELLIPSIS

   48 annotations: %empty
   49            | annotation annotations

   50 $@5: %empty

   51 annotation: T_ANNOTATION $@5 '(' annotation_values ')'

   52 annotation_value: T_IDENT T_ASSIGN T_STRING

   53 annotation_values: %empty
   54                  | annotation_value
   55                  | annotation_value ',' annotation_values

   56 $@6: %empty

   57 native_macro_definition: $@6 annotations T_NATIVE macrostart

   58 $@7: %empty

   59 macro_definition: $@7 macrostart block

   60 block: '{' var_decls stmntlist closing_brace

   61 var_decls: %empty
   62          | var_decls var_decl ';'

   63 statement: ';'
   64          | call_expression ';'
   65          | assignment ';'
   66          | if_expression
   67          | while
   68          | for_loop_expression
   69          | switch_expression
   70          | break
   71          | continue
   72          | return_expression
   73          | goto
   74          | block
   75          | increment_expression
   76          | label
   77          | var_decl
   78          | error ';'

   79 assignment: variable_reference assignment_expression

   80 $@8: %empty

   81 assignment: assignment_target '.' T_IDENT $@8 assignment_expression
   82           | assignment_target '[' binary_expression ']' assignment_expression
   83           | shorthand_assignment

   84 $@9: %empty

   85 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator simple_expression

   86 assignment_target: variable_reference

   87 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   88                              | T_SH_ASSIGN_DIV
   89                              | T_SH_ASSIGN_MOD
   90                              | T_SH_ASSIGN_PLUS
   91                              | T_SH_ASSIGN_MINUS

   92 assignment_expression: T_ASSIGN simple_expression

   93 simple_expression: binary_expression
   94                  | range_expression

   95 binary_expression_or_range: binary_expression
   96                           | range_expression

   97 range_expression: %empty

   98 $@10: %empty

   99 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment

  100 range_increment: %empty
  101                | T_DOTDOT binary_expression

  102 minusminus_plusplus: T_MINUSMINUS
  103                    | T_PLUSPLUS

  104 increment_expression: variable_reference minusminus_plusplus

  105 s_bterm: value
  106        | call_expression
  107        | constructor_expression

  108 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  109 binary_expression: s_bterm
  110                  | type_cast s_bterm
  111                  | binary_expression '.' T_IDENT
  112                  | binary_expression '[' binary_expression_or_range ']'
  113                  | '!' binary_expression
  114                  | '~' binary_expression
  115                  | '+' binary_expression
  116                  | '-' variable_reference
  117                  | binary_expression '~' binary_expression
  118                  | binary_expression T_NMATCH binary_expression
  119                  | binary_expression '&' binary_expression
  120                  | binary_expression '|' binary_expression
  121                  | binary_expression '+' binary_expression
  122                  | binary_expression '^' binary_expression
  123                  | binary_expression '-' binary_expression
  124                  | binary_expression '*' binary_expression
  125                  | binary_expression '/' binary_expression
  126                  | binary_expression '%' binary_expression
  127                  | binary_expression T_SHIFT_LEFT binary_expression
  128                  | binary_expression T_SHIFT_RIGHT binary_expression
  129                  | binary_expression T_POWER_TO binary_expression
  130                  | binary_expression T_AND binary_expression
  131                  | binary_expression T_OR binary_expression
  132                  | binary_expression '<' binary_expression
  133                  | binary_expression '>' binary_expression
  134                  | binary_expression T_LE binary_expression
  135                  | binary_expression T_GE binary_expression
  136                  | binary_expression T_EQ binary_expression
  137                  | binary_expression T_NE binary_expression
  138                  | '(' binary_expression ')'
  139                  | variable_reference assignment_expression

  140 condition: '(' binary_expression ')'
  141          | '(' binary_expression

  142 value: T_VARIABLE
  143      | string
  144      | simple_literal
  145      | map_literal
  146      | array_literal
  147      | T_IDENT

  148 $@11: %empty

  149 map_literal: '{' $@11 optional_map_associates closing_brace

  150 optional_map_associates: %empty
  151                        | map_associates

  152 map_associates: map_associate
  153               | map_associates ',' map_associate

  154 map_associate: T_STRING T_ASSOC_ARROW simple_literal
  155              | T_STRING T_ASSOC_ARROW T_STRING

  156 $@12: %empty

  157 array_literal: '[' $@12 ']'

  158 $@13: %empty

  159 array_literal: '[' $@13 array_elements ']'

  160 array_elements: array_elements ',' array_element
  161               | array_element

  162 array_element: simple_array_element
  163              | T_STRING

  164 simple_array_element: integer_literal
  165                     | T_CHARACTER
  166                     | T_TRUE
  167                     | T_FALSE

  168 string: T_STRING
  169       | string T_STRING

  170 break: T_BREAK opt_num ';'

  171 continue: T_CONTINUE opt_num ';'

  172 return_expression: T_RETURN optional_bterm

  173 optional_bterm: %empty
  174               | binary_expression

  175 opt_num: %empty
  176        | T_NUM

  177 case_clauses: %empty
  178             | case_clause case_clauses

  179 case_clause: case_selector stmntlist

  180 case_selector: T_CASE case_condition ':'
  181              | T_DEFAULT ':'

  182 case_condition: integer_literal
  183               | T_STRING
  184               | T_NUM T_DOTDOT T_NUM

  185 label: T_IDENT ':'

  186 goto: T_GOTO T_IDENT

  187 $@14: %empty

  188 switch_expression: T_SWITCH '(' value ')' $@14 '{' case_clauses '}'

  189 $@15: %empty

  190 for_loop_expression: T_FOR for_clause $@15 local_block

  191 for_increment: increment_expression
  192              | shorthand_assignment

  193 $@16: %empty

  194 $@17: %empty

  195 $@18: %empty

  196 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment $@18 ')'

  197 opt_for_initializer: %empty

  198 $@19: %empty

  199 opt_for_initializer: type_name variable_identifier $@19 assignment_expression

  200 for_clause: for_to_clause
  201           | in_clause
  202           | error

  203 $@20: %empty

  204 in_clause: '(' type_name variable_identifier $@20 ':' simple_expression ')'

  205 $@21: %empty

  206 $@22: %empty

  207 while: T_WHILE $@21 condition $@22 local_block

  208 local_block: statement
  209            | '{' stmntlist closing_brace

  210 closing_brace: '}'

  211 $@23: %empty

  212 $@24: %empty

  213 if_expression: T_IF condition $@23 local_block $@24 else_clause

  214 else_clause: %empty

  215 $@25: %empty

  216 else_clause: T_ELSE $@25 local_block

  217 stmntlist: %empty

  218 $@26: %empty

  219 stmntlist: statement $@26 stmntlist

  220 closing_paren: ')'

  221 @27: %empty

  222 call_expression: T_FUNC '(' @27 parameter_list closing_paren

  223 @28: %empty

  224 call_expression: function_id_or_pointer '(' @28 parameter_list closing_paren

  225 function_id_or_pointer: '*' variable_reference
  226                       | T_IDENT
  227                       | error

  228 parameter_list: nonempty_parameters

  229 nonempty_parameters: parameter
  230                    | nonempty_parameters ',' parameter
  231                    | error

  232 parameter: simple_expression

  233 type_cast: '(' type_name ')'

  234 type_name: T_TYPE_IDENTIFIER
  235          | T_TYPE_IDENTIFIER array_size

  236 array_size: '[' ']'
  237           | '[' T_NUM ']'

  238 boolean_literal: T_TRUE
  239                | T_FALSE

  240 float_literal: T_FLOATING_POINT_NUMBER

  241 integer_literal: T_NUM
  242                | '-' T_NUM

  243 character_literal: T_CHARACTER

  244 simple_literal: integer_literal
  245               | float_literal
  246               | character_literal
  247               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 113
    '%' (37) 126
    '&' (38) 119
    '(' (40) 36 51 108 138 140 141 188 196 204 222 224 233
    ')' (41) 36 51 108 138 140 188 196 204 220 233
    '*' (42) 124 225
    '+' (43) 115 121
    ',' (44) 21 45 55 153 160 230
    '-' (45) 116 123 242
    '.' (46) 81 111
    '/' (47) 125
    ':' (58) 180 181 185 204
    ';' (59) 9 12 14 15 16 62 63 64 65 78 170 171 196
    '<' (60) 132
    '>' (62) 133
    '[' (91) 82 112 157 159 236 237
    ']' (93) 82 112 157 159 236 237
    '^' (94) 122
    '{' (123) 60 149 188 209
    '|' (124) 120
    '}' (125) 188 210
    '~' (126) 114 117
    error (256) 78 202 227 231
    T_NAMESPACE (258) 9
    T_REQUIRE (259) 12
    T_FOR (260) 190
    T_ANNOTATION (261) 51
    T_NATIVE (262) 57
    T_NEW (263) 108
    T_STATIC (264) 18
    T_VOID (265) 34
    T_TYPE_IDENTIFIER (266) 108 234 235
    T_ELLIPSIS (267) 47
    T_IDENT (268) 9 27 31 32 52 81 111 147 185 186 226
    T_NUM (269) 28 176 184 237 241 242
    T_FLOATING_POINT_NUMBER (270) 240
    T_STRING (271) 12 26 29 41 52 154 155 163 168 169 183
    T_CHARACTER (272) 165 243
    T_CONST (273) 19
    T_TRUE (274) 166 238
    T_FALSE (275) 167 239
    T_FUNC (276) 33 222
    T_DOTDOT (277) 99 101 184
    T_PLUSPLUS (278) 103
    T_MINUSMINUS (279) 102
    T_IF (280) 213
    T_ELSE (281) 216
    T_WHILE (282) 207
    T_GOTO (283) 186
    T_SH_ASSIGN_PLUS (284) 90
    T_SH_ASSIGN_MINUS (285) 91
    T_SH_ASSIGN_MULT (286) 87
    T_SH_ASSIGN_DIV (287) 88
    T_SH_ASSIGN_MOD (288) 89
    T_SWITCH (289) 188
    T_CASE (290) 180
    T_DEFAULT (291) 181
    T_BREAK (292) 170
    T_CONTINUE (293) 171
    T_RETURN (294) 172
    T_VARIABLE (295) 30 142
    T_ASSOC_ARROW (296) 154 155
    T_NMATCH (297) 118
    T_ASSIGN (298) 24 52 92
    T_NE (299) 137
    T_EQ (300) 136
    T_SHIFT_LEFT (301) 127
    T_SHIFT_RIGHT (302) 128
    T_OR (303) 131
    T_AND (304) 130
    T_LE (305) 134
    T_GE (306) 135
    T_POWER_TO (307) 129


Nonterminals, with rules where they appear

    $accept (75)
        on left: 0
    file_structure (76)
        on left: 3
        on right: 0
    $@1 (77)
        on left: 1
        on right: 3
    $@2 (78)
        on left: 2
        on right: 3
    header_delimiter (79)
        on left: 4 5
        on right: 3
    macro_definitions (80)
        on left: 6 7
        on right: 3 7
    namespace (81)
        on left: 8 9
        on right: 3
    prerequisites (82)
        on left: 10 11
        on right: 3 11
    require (83)
        on left: 12
        on right: 11
    global_declarations (84)
        on left: 13 14 15 16
        on right: 3 14 15 16
    scope (85)
        on left: 17 18
        on right: 34 35 37
    constants (86)
        on left: 19
        on right: 14
    constant_list (87)
        on left: 20 21
        on right: 19 21
    constdef (88)
        on left: 24
        on right: 20 21
    $@3 (89)
        on left: 22
        on right: 24
    $@4 (90)
        on left: 23
        on right: 24
    constant_literal (91)
        on left: 25 26
        on right: 24
    variable_identifier (92)
        on left: 27 28 29
        on right: 24 38 39 46 199 204
    variable_reference (93)
        on left: 30 31
        on right: 79 85 86 104 116 139 225
    macro_declaration (94)
        on left: 32 33
        on right: 36
    macro_type (95)
        on left: 34 35
        on right: 36
    macrostart (96)
        on left: 36
        on right: 57 59
    global_var (97)
        on left: 37
        on right: 15
    var_decl (98)
        on left: 38 39
        on right: 37 62 77
    optional_description (99)
        on left: 40 41
        on right: 36
    parameter_list (100)
        on left: 42 43 228
        on right: 36 222 224
    non_empty_pardecl (101)
        on left: 44 45
        on right: 43 45
    parameter_declaration (102)
        on left: 46 47
        on right: 44 45
    annotations (103)
        on left: 48 49
        on right: 49 57
    annotation (104)
        on left: 51
        on right: 49
    $@5 (105)
        on left: 50
        on right: 51
    annotation_value (106)
        on left: 52
        on right: 54 55
    annotation_values (107)
        on left: 53 54 55
        on right: 51 55
    native_macro_definition (108)
        on left: 57
        on right: 16
    $@6 (109)
        on left: 56
        on right: 57
    macro_definition (110)
        on left: 59
        on right: 7
    $@7 (111)
        on left: 58
        on right: 59
    block (112)
        on left: 60
        on right: 59 74
    var_decls (113)
        on left: 61 62
        on right: 60 62
    statement (114)
        on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 208 219
    assignment (115)
        on left: 79 81 82 83
        on right: 65
    $@8 (116)
        on left: 80
        on right: 81
    shorthand_assignment (117)
        on left: 85
        on right: 83 192
    $@9 (118)
        on left: 84
        on right: 85
    assignment_target (119)
        on left: 86
        on right: 81 82
    shorthand_assignment_operator (120)
        on left: 87 88 89 90 91
        on right: 85
    assignment_expression (121)
        on left: 92
        on right: 38 79 81 82 139 199
    simple_expression (122)
        on left: 93 94
        on right: 85 92 204 232
    binary_expression_or_range (123)
        on left: 95 96
        on right: 112
    range_expression (124)
        on left: 97 99
        on right: 94 96
    $@10 (125)
        on left: 98
        on right: 99
    range_increment (126)
        on left: 100 101
        on right: 99
    minusminus_plusplus (127)
        on left: 102 103
        on right: 104
    increment_expression (128)
        on left: 104
        on right: 75 191
    s_bterm (129)
        on left: 105 106 107
        on right: 109 110
    constructor_expression (130)
        on left: 108
        on right: 107
    binary_expression (131)
        on left: 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139
        on right: 82 93 95 99 101 111 112 113 114 115 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 140 141 174 196
    condition (132)
        on left: 140 141
        on right: 207 213
    value (133)
        on left: 142 143 144 145 146 147
        on right: 105 188
    map_literal (134)
        on left: 149
        on right: 145
    $@11 (135)
        on left: 148
        on right: 149
    optional_map_associates (136)
        on left: 150 151
        on right: 149
    map_associates (137)
        on left: 152 153
        on right: 151 153
    map_associate (138)
        on left: 154 155
        on right: 152 153
    array_literal (139)
        on left: 157 159
        on right: 146
    $@12 (140)
        on left: 156
        on right: 157
    $@13 (141)
        on left: 158
        on right: 159
    array_elements (142)
        on left: 160 161
        on right: 159 160
    array_element (143)
        on left: 162 163
        on right: 160 161
    simple_array_element (144)
        on left: 164 165 166 167
        on right: 162
    string (145)
        on left: 168 169
        on right: 143 169
    break (146)
        on left: 170
        on right: 70
    continue (147)
        on left: 171
        on right: 71
    return_expression (148)
        on left: 172
        on right: 72
    optional_bterm (149)
        on left: 173 174
        on right: 172
    opt_num (150)
        on left: 175 176
        on right: 170 171
    case_clauses (151)
        on left: 177 178
        on right: 178 188
    case_clause (152)
        on left: 179
        on right: 178
    case_selector (153)
        on left: 180 181
        on right: 179
    case_condition (154)
        on left: 182 183 184
        on right: 180
    label (155)
        on left: 185
        on right: 76
    goto (156)
        on left: 186
        on right: 73
    switch_expression (157)
        on left: 188
        on right: 69
    $@14 (158)
        on left: 187
        on right: 188
    for_loop_expression (159)
        on left: 190
        on right: 68
    $@15 (160)
        on left: 189
        on right: 190
    for_increment (161)
        on left: 191 192
        on right: 196
    for_to_clause (162)
        on left: 196
        on right: 200
    $@16 (163)
        on left: 193
        on right: 196
    $@17 (164)
        on left: 194
        on right: 196
    $@18 (165)
        on left: 195
        on right: 196
    opt_for_initializer (166)
        on left: 197 199
        on right: 196
    $@19 (167)
        on left: 198
        on right: 199
    for_clause (168)
        on left: 200 201 202
        on right: 190
    in_clause (169)
        on left: 204
        on right: 201
    $@20 (170)
        on left: 203
        on right: 204
    while (171)
        on left: 207
        on right: 67
    $@21 (172)
        on left: 205
        on right: 207
    $@22 (173)
        on left: 206
        on right: 207
    local_block (174)
        on left: 208 209
        on right: 190 207 213 216
    closing_brace (175)
        on left: 210
        on right: 60 149 209
    if_expression (176)
        on left: 213
        on right: 66
    $@23 (177)
        on left: 211
        on right: 213
    $@24 (178)
        on left: 212
        on right: 213
    else_clause (179)
        on left: 214 216
        on right: 213
    $@25 (180)
        on left: 215
        on right: 216
    stmntlist (181)
        on left: 217 219
        on right: 60 179 209 219
    $@26 (182)
        on left: 218
        on right: 219
    closing_paren (183)
        on left: 220
        on right: 222 224
    call_expression (184)
        on left: 222 224
        on right: 64 106
    @27 (185)
        on left: 221
        on right: 222
    @28 (186)
        on left: 223
        on right: 224
    function_id_or_pointer (187)
        on left: 225 226 227
        on right: 224
    nonempty_parameters (188)
        on left: 229 230 231
        on right: 228 230
    parameter (189)
        on left: 232
        on right: 229 230
    type_cast (190)
        on left: 233
        on right: 110
    type_name (191)
        on left: 234 235
        on right: 35 38 39 46 199 204 233
    array_size (192)
        on left: 236 237
        on right: 235
    boolean_literal (193)
        on left: 238 239
        on right: 247
    float_literal (194)
        on left: 240
        on right: 245
    integer_literal (195)
        on left: 241 242
        on right: 164 182 244
    character_literal (196)
        on left: 243
        on right: 246
    simple_literal (197)
        on left: 244 245 246 247
        on right: 25 144 154


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 8 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

    9 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites global_declarations $@2 header_delimiter macro_definitions

    $default  reduce using rule 10 (prerequisites)

    prerequisites  go to state 7


State 6

    9 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . global_declarations $@2 header_delimiter macro_definitions
   11 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 13 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

    9 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 9 (namespace)


State 9

   12 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   11 prerequisites: prerequisites require .

    $default  reduce using rule 11 (prerequisites)


State 11

    3 file_structure: $@1 namespace prerequisites global_declarations . $@2 header_delimiter macro_definitions
   14 global_declarations: global_declarations . constants ';'
   15                    | global_declarations . global_var ';'
   16                    | global_declarations . native_macro_definition ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14

    T_ANNOTATION       reduce using rule 56 ($@6)
    T_NATIVE           reduce using rule 56 ($@6)
    T_STATIC           [reduce using rule 2 ($@2)]
    T_TYPE_IDENTIFIER  reduce using rule 2 ($@2)
    T_TYPE_IDENTIFIER  [reduce using rule 17 (scope)]
    $default           reduce using rule 2 ($@2)

    $@2                      go to state 15
    scope                    go to state 16
    constants                go to state 17
    global_var               go to state 18
    native_macro_definition  go to state 19
    $@6                      go to state 20


State 12

   12 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 21


State 13

   18 scope: T_STATIC .

    $default  reduce using rule 18 (scope)


State 14

   19 constants: T_CONST . constant_list

    $default  reduce using rule 22 ($@3)

    constant_list  go to state 22
    constdef       go to state 23
    $@3            go to state 24


State 15

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 . header_delimiter macro_definitions

    '!'  shift, and go to state 25

    $default  reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 26


State 16

   37 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 27

    var_decl   go to state 28
    type_name  go to state 29


State 17

   14 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 30


State 18

   15 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 31


State 19

   16 global_declarations: global_declarations native_macro_definition . ';'

    ';'  shift, and go to state 32


State 20

   57 native_macro_definition: $@6 . annotations T_NATIVE macrostart

    T_ANNOTATION  shift, and go to state 33

    $default  reduce using rule 48 (annotations)

    annotations  go to state 34
    annotation   go to state 35


State 21

   12 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 12 (require)


State 22

   19 constants: T_CONST constant_list .
   21 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 36

    $default  reduce using rule 19 (constants)


State 23

   20 constant_list: constdef .

    $default  reduce using rule 20 (constant_list)


State 24

   24 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 37
    T_NUM     shift, and go to state 38
    T_STRING  shift, and go to state 39

    variable_identifier  go to state 40


State 25

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 26

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 58 ($@7)

    macro_definitions  go to state 41
    macro_definition   go to state 42
    $@7                go to state 43


State 27

  234 type_name: T_TYPE_IDENTIFIER .
  235          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 44

    $default  reduce using rule 234 (type_name)

    array_size  go to state 45


State 28

   37 global_var: scope var_decl .

    $default  reduce using rule 37 (global_var)


State 29

   38 var_decl: type_name . variable_identifier assignment_expression
   39         | type_name . variable_identifier

    T_IDENT   shift, and go to state 37
    T_NUM     shift, and go to state 38
    T_STRING  shift, and go to state 39

    variable_identifier  go to state 46


State 30

   14 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 14 (global_declarations)


State 31

   15 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 15 (global_declarations)


State 32

   16 global_declarations: global_declarations native_macro_definition ';' .

    $default  reduce using rule 16 (global_declarations)


State 33

   51 annotation: T_ANNOTATION . $@5 '(' annotation_values ')'

    $default  reduce using rule 50 ($@5)

    $@5  go to state 47


State 34

   57 native_macro_definition: $@6 annotations . T_NATIVE macrostart

    T_NATIVE  shift, and go to state 48


State 35

   49 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 33

    $default  reduce using rule 48 (annotations)

    annotations  go to state 49
    annotation   go to state 35


State 36

   21 constant_list: constant_list ',' . constdef

    $default  reduce using rule 22 ($@3)

    constdef  go to state 50
    $@3       go to state 24


State 37

   27 variable_identifier: T_IDENT .

    $default  reduce using rule 27 (variable_identifier)


State 38

   28 variable_identifier: T_NUM .

    $default  reduce using rule 28 (variable_identifier)


State 39

   29 variable_identifier: T_STRING .

    $default  reduce using rule 29 (variable_identifier)


State 40

   24 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 51


State 41

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 42

    7 macro_definitions: macro_definition . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 58 ($@7)

    macro_definitions  go to state 52
    macro_definition   go to state 42
    $@7                go to state 43


State 43

   59 macro_definition: $@7 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 17 (scope)

    scope       go to state 53
    macro_type  go to state 54
    macrostart  go to state 55


State 44

  236 array_size: '[' . ']'
  237           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 56
    ']'    shift, and go to state 57


State 45

  235 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 235 (type_name)


State 46

   38 var_decl: type_name variable_identifier . assignment_expression
   39         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 58

    $default  reduce using rule 39 (var_decl)

    assignment_expression  go to state 59


State 47

   51 annotation: T_ANNOTATION $@5 . '(' annotation_values ')'

    '('  shift, and go to state 60


State 48

   57 native_macro_definition: $@6 annotations T_NATIVE . macrostart

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 17 (scope)

    scope       go to state 53
    macro_type  go to state 54
    macrostart  go to state 61


State 49

   49 annotations: annotation annotations .

    $default  reduce using rule 49 (annotations)


State 50

   21 constant_list: constant_list ',' constdef .

    $default  reduce using rule 21 (constant_list)


State 51

   24 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 64
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    '-'                      shift, and go to state 68

    constant_literal   go to state 69
    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 74


State 52

    7 macro_definitions: macro_definition macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 53

   34 macro_type: scope . T_VOID
   35           | scope . type_name

    T_VOID             shift, and go to state 75
    T_TYPE_IDENTIFIER  shift, and go to state 27

    type_name  go to state 76


State 54

   36 macrostart: macro_type . macro_declaration '(' parameter_list ')' optional_description

    T_IDENT  shift, and go to state 77
    T_FUNC   shift, and go to state 78

    macro_declaration  go to state 79


State 55

   59 macro_definition: $@7 macrostart . block

    '{'  shift, and go to state 80

    block  go to state 81


State 56

  237 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 82


State 57

  236 array_size: '[' ']' .

    $default  reduce using rule 236 (array_size)


State 58

   92 assignment_expression: T_ASSIGN . simple_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    error              [reduce using rule 97 (range_expression)]
    T_FOR              reduce using rule 97 (range_expression)
    T_TYPE_IDENTIFIER  reduce using rule 97 (range_expression)
    T_IDENT            [reduce using rule 97 (range_expression)]
    T_FUNC             [reduce using rule 97 (range_expression)]
    T_DOTDOT           reduce using rule 97 (range_expression)
    T_IF               reduce using rule 97 (range_expression)
    T_ELSE             reduce using rule 97 (range_expression)
    T_WHILE            reduce using rule 97 (range_expression)
    T_GOTO             reduce using rule 97 (range_expression)
    T_SWITCH           reduce using rule 97 (range_expression)
    T_CASE             reduce using rule 97 (range_expression)
    T_DEFAULT          reduce using rule 97 (range_expression)
    T_BREAK            reduce using rule 97 (range_expression)
    T_CONTINUE         reduce using rule 97 (range_expression)
    T_RETURN           reduce using rule 97 (range_expression)
    T_VARIABLE         [reduce using rule 97 (range_expression)]
    T_NMATCH           reduce using rule 97 (range_expression)
    T_NE               reduce using rule 97 (range_expression)
    T_EQ               reduce using rule 97 (range_expression)
    T_SHIFT_LEFT       reduce using rule 97 (range_expression)
    T_SHIFT_RIGHT      reduce using rule 97 (range_expression)
    T_OR               reduce using rule 97 (range_expression)
    T_AND              reduce using rule 97 (range_expression)
    T_LE               reduce using rule 97 (range_expression)
    T_GE               reduce using rule 97 (range_expression)
    T_POWER_TO         reduce using rule 97 (range_expression)
    '&'                reduce using rule 97 (range_expression)
    '|'                reduce using rule 97 (range_expression)
    '^'                reduce using rule 97 (range_expression)
    '~'                [reduce using rule 97 (range_expression)]
    '<'                reduce using rule 97 (range_expression)
    '>'                reduce using rule 97 (range_expression)
    '+'                [reduce using rule 97 (range_expression)]
    '-'                [reduce using rule 97 (range_expression)]
    '*'                [reduce using rule 97 (range_expression)]
    '/'                reduce using rule 97 (range_expression)
    '%'                reduce using rule 97 (range_expression)
    '['                [reduce using rule 97 (range_expression)]
    ';'                reduce using rule 97 (range_expression)
    ','                reduce using rule 97 (range_expression)
    ')'                reduce using rule 97 (range_expression)
    '{'                [reduce using rule 97 (range_expression)]
    '.'                reduce using rule 97 (range_expression)
    ']'                reduce using rule 97 (range_expression)
    '}'                reduce using rule 97 (range_expression)

    variable_reference      go to state 97
    simple_expression       go to state 98
    range_expression        go to state 99
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 59

   38 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 38 (var_decl)


State 60

   51 annotation: T_ANNOTATION $@5 '(' . annotation_values ')'

    T_IDENT  shift, and go to state 111

    $default  reduce using rule 53 (annotation_values)

    annotation_value   go to state 112
    annotation_values  go to state 113


State 61

   57 native_macro_definition: $@6 annotations T_NATIVE macrostart .

    $default  reduce using rule 57 (native_macro_definition)


State 62

  241 integer_literal: T_NUM .

    $default  reduce using rule 241 (integer_literal)


State 63

  240 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 240 (float_literal)


State 64

   26 constant_literal: T_STRING .

    $default  reduce using rule 26 (constant_literal)


State 65

  243 character_literal: T_CHARACTER .

    $default  reduce using rule 243 (character_literal)


State 66

  238 boolean_literal: T_TRUE .

    $default  reduce using rule 238 (boolean_literal)


State 67

  239 boolean_literal: T_FALSE .

    $default  reduce using rule 239 (boolean_literal)


State 68

  242 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 114


State 69

   24 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 23 ($@4)

    $@4  go to state 115


State 70

  247 simple_literal: boolean_literal .

    $default  reduce using rule 247 (simple_literal)


State 71

  245 simple_literal: float_literal .

    $default  reduce using rule 245 (simple_literal)


State 72

  244 simple_literal: integer_literal .

    $default  reduce using rule 244 (simple_literal)


State 73

  246 simple_literal: character_literal .

    $default  reduce using rule 246 (simple_literal)


State 74

   25 constant_literal: simple_literal .

    $default  reduce using rule 25 (constant_literal)


State 75

   34 macro_type: scope T_VOID .

    $default  reduce using rule 34 (macro_type)


State 76

   35 macro_type: scope type_name .

    $default  reduce using rule 35 (macro_type)


State 77

   32 macro_declaration: T_IDENT .

    $default  reduce using rule 32 (macro_declaration)


State 78

   33 macro_declaration: T_FUNC .

    $default  reduce using rule 33 (macro_declaration)


State 79

   36 macrostart: macro_type macro_declaration . '(' parameter_list ')' optional_description

    '('  shift, and go to state 116


State 80

   60 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 61 (var_decls)

    var_decls  go to state 117


State 81

   59 macro_definition: $@7 macrostart block .

    $default  reduce using rule 59 (macro_definition)


State 82

  237 array_size: '[' T_NUM ']' .

    $default  reduce using rule 237 (array_size)


State 83

  227 function_id_or_pointer: error .

    $default  reduce using rule 227 (function_id_or_pointer)


State 84

  108 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 118


State 85

   31 variable_reference: T_IDENT .
  147 value: T_IDENT .
  226 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 31 (variable_reference)
    '('       reduce using rule 226 (function_id_or_pointer)
    $default  reduce using rule 147 (value)


State 86

  168 string: T_STRING .

    $default  reduce using rule 168 (string)


State 87

  222 call_expression: T_FUNC . '(' @27 parameter_list closing_paren

    '('  shift, and go to state 119


State 88

   30 variable_reference: T_VARIABLE .
  142 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 30 (variable_reference)
    $default  reduce using rule 142 (value)


State 89

  114 binary_expression: '~' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 120
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 90

  115 binary_expression: '+' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 121
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 91

  116 binary_expression: '-' . variable_reference
  242 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 122
    T_NUM       shift, and go to state 114
    T_VARIABLE  shift, and go to state 123

    variable_reference  go to state 124


State 92

  225 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 122
    T_VARIABLE  shift, and go to state 123

    variable_reference  go to state 125


State 93

  157 array_literal: '[' . $@12 ']'
  159              | '[' . $@13 array_elements ']'

    ']'       reduce using rule 156 ($@12)
    $default  reduce using rule 158 ($@13)

    $@12  go to state 126
    $@13  go to state 127


State 94

  113 binary_expression: '!' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 128
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 95

  138 binary_expression: '(' . binary_expression ')'
  233 type_cast: '(' . type_name ')'

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_TYPE_IDENTIFIER        shift, and go to state 27
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 129
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    type_name               go to state 130
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 96

  149 map_literal: '{' . $@11 optional_map_associates closing_brace

    $default  reduce using rule 148 ($@11)

    $@11  go to state 131


State 97

  139 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 58

    assignment_expression  go to state 132


State 98

   92 assignment_expression: T_ASSIGN simple_expression .

    $default  reduce using rule 92 (assignment_expression)


State 99

   94 simple_expression: range_expression .

    $default  reduce using rule 94 (simple_expression)


State 100

  109 binary_expression: s_bterm .

    $default  reduce using rule 109 (binary_expression)


State 101

  107 s_bterm: constructor_expression .

    $default  reduce using rule 107 (s_bterm)


State 102

   93 simple_expression: binary_expression .
   99 range_expression: binary_expression . T_DOTDOT binary_expression $@10 range_increment
  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 133
    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_DOTDOT       [reduce using rule 93 (simple_expression)]
    T_NMATCH       [reduce using rule 93 (simple_expression)]
    T_NE           [reduce using rule 93 (simple_expression)]
    T_EQ           [reduce using rule 93 (simple_expression)]
    T_SHIFT_LEFT   [reduce using rule 93 (simple_expression)]
    T_SHIFT_RIGHT  [reduce using rule 93 (simple_expression)]
    T_OR           [reduce using rule 93 (simple_expression)]
    T_AND          [reduce using rule 93 (simple_expression)]
    T_LE           [reduce using rule 93 (simple_expression)]
    T_GE           [reduce using rule 93 (simple_expression)]
    T_POWER_TO     [reduce using rule 93 (simple_expression)]
    '&'            [reduce using rule 93 (simple_expression)]
    '|'            [reduce using rule 93 (simple_expression)]
    '^'            [reduce using rule 93 (simple_expression)]
    '~'            [reduce using rule 93 (simple_expression)]
    '<'            [reduce using rule 93 (simple_expression)]
    '>'            [reduce using rule 93 (simple_expression)]
    '+'            [reduce using rule 93 (simple_expression)]
    '-'            [reduce using rule 93 (simple_expression)]
    '*'            [reduce using rule 93 (simple_expression)]
    '/'            [reduce using rule 93 (simple_expression)]
    '%'            [reduce using rule 93 (simple_expression)]
    '['            [reduce using rule 93 (simple_expression)]
    '.'            [reduce using rule 93 (simple_expression)]
    $default       reduce using rule 93 (simple_expression)


State 103

  105 s_bterm: value .

    $default  reduce using rule 105 (s_bterm)


State 104

  145 value: map_literal .

    $default  reduce using rule 145 (value)


State 105

  146 value: array_literal .

    $default  reduce using rule 146 (value)


State 106

  143 value: string .
  169 string: string . T_STRING

    T_STRING  shift, and go to state 157

    $default  reduce using rule 143 (value)


State 107

  106 s_bterm: call_expression .

    $default  reduce using rule 106 (s_bterm)


State 108

  224 call_expression: function_id_or_pointer . '(' @28 parameter_list closing_paren

    '('  shift, and go to state 158


State 109

  110 binary_expression: type_cast . s_bterm

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 159
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 160
    '-'                      shift, and go to state 68
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '{'                      shift, and go to state 96

    s_bterm                 go to state 161
    constructor_expression  go to state 101
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 110

  144 value: simple_literal .

    $default  reduce using rule 144 (value)


State 111

   52 annotation_value: T_IDENT . T_ASSIGN T_STRING

    T_ASSIGN  shift, and go to state 162


State 112

   54 annotation_values: annotation_value .
   55                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 163

    $default  reduce using rule 54 (annotation_values)


State 113

   51 annotation: T_ANNOTATION $@5 '(' annotation_values . ')'

    ')'  shift, and go to state 164


State 114

  242 integer_literal: '-' T_NUM .

    $default  reduce using rule 242 (integer_literal)


State 115

   24 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 24 (constdef)


State 116

   36 macrostart: macro_type macro_declaration '(' . parameter_list ')' optional_description

    error                    shift, and go to state 165
    T_NEW                    shift, and go to state 84
    T_TYPE_IDENTIFIER        shift, and go to state 27
    T_ELLIPSIS               shift, and go to state 166
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    ','  reduce using rule 97 (range_expression)
    ')'  reduce using rule 42 (parameter_list)
    ')'  [reduce using rule 97 (range_expression)]

    variable_reference      go to state 97
    parameter_list          go to state 167
    non_empty_pardecl       go to state 168
    parameter_declaration   go to state 169
    simple_expression       go to state 170
    range_expression        go to state 99
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    nonempty_parameters     go to state 171
    parameter               go to state 172
    type_cast               go to state 109
    type_name               go to state 173
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 117

   60 block: '{' var_decls . stmntlist closing_brace
   62 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 174
    T_FOR              shift, and go to state 175
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 176
    T_FUNC             shift, and go to state 87
    T_IF               shift, and go to state 177
    T_WHILE            shift, and go to state 178
    T_GOTO             shift, and go to state 179
    T_SWITCH           shift, and go to state 180
    T_BREAK            shift, and go to state 181
    T_CONTINUE         shift, and go to state 182
    T_RETURN           shift, and go to state 183
    T_VARIABLE         shift, and go to state 123
    '*'                shift, and go to state 92
    ';'                shift, and go to state 184
    '{'                shift, and go to state 80

    '}'  reduce using rule 217 (stmntlist)

    variable_reference      go to state 185
    var_decl                go to state 186
    block                   go to state 187
    statement               go to state 188
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto                    go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    if_expression           go to state 201
    stmntlist               go to state 202
    call_expression         go to state 203
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 118

  108 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 204


State 119

  222 call_expression: T_FUNC '(' . @27 parameter_list closing_paren

    $default  reduce using rule 221 (@27)

    @27  go to state 205


State 120

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  114                  | '~' binary_expression .
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 114 (binary_expression)]
    $default  reduce using rule 114 (binary_expression)


State 121

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  115                  | '+' binary_expression .
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    '.'       [reduce using rule 115 (binary_expression)]
    $default  reduce using rule 115 (binary_expression)


State 122

   31 variable_reference: T_IDENT .

    $default  reduce using rule 31 (variable_reference)


State 123

   30 variable_reference: T_VARIABLE .

    $default  reduce using rule 30 (variable_reference)


State 124

  116 binary_expression: '-' variable_reference .

    $default  reduce using rule 116 (binary_expression)


State 125

  225 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 225 (function_id_or_pointer)


State 126

  157 array_literal: '[' $@12 . ']'

    ']'  shift, and go to state 206


State 127

  159 array_literal: '[' $@13 . array_elements ']'

    T_NUM        shift, and go to state 62
    T_STRING     shift, and go to state 207
    T_CHARACTER  shift, and go to state 208
    T_TRUE       shift, and go to state 209
    T_FALSE      shift, and go to state 210
    '-'          shift, and go to state 68

    array_elements        go to state 211
    array_element         go to state 212
    simple_array_element  go to state 213
    integer_literal       go to state 214


State 128

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  113                  | '!' binary_expression .
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NMATCH       [reduce using rule 113 (binary_expression)]
    T_NE           [reduce using rule 113 (binary_expression)]
    T_EQ           [reduce using rule 113 (binary_expression)]
    T_SHIFT_LEFT   [reduce using rule 113 (binary_expression)]
    T_SHIFT_RIGHT  [reduce using rule 113 (binary_expression)]
    T_OR           [reduce using rule 113 (binary_expression)]
    T_AND          [reduce using rule 113 (binary_expression)]
    T_LE           [reduce using rule 113 (binary_expression)]
    T_GE           [reduce using rule 113 (binary_expression)]
    T_POWER_TO     [reduce using rule 113 (binary_expression)]
    '&'            [reduce using rule 113 (binary_expression)]
    '|'            [reduce using rule 113 (binary_expression)]
    '^'            [reduce using rule 113 (binary_expression)]
    '~'            [reduce using rule 113 (binary_expression)]
    '<'            [reduce using rule 113 (binary_expression)]
    '>'            [reduce using rule 113 (binary_expression)]
    '+'            [reduce using rule 113 (binary_expression)]
    '-'            [reduce using rule 113 (binary_expression)]
    '*'            [reduce using rule 113 (binary_expression)]
    '/'            [reduce using rule 113 (binary_expression)]
    '%'            [reduce using rule 113 (binary_expression)]
    '['            [reduce using rule 113 (binary_expression)]
    '.'            [reduce using rule 113 (binary_expression)]
    $default       reduce using rule 113 (binary_expression)


State 129

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression
  138                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    ')'            shift, and go to state 215
    '.'            shift, and go to state 156


State 130

  233 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 216


State 131

  149 map_literal: '{' $@11 . optional_map_associates closing_brace

    T_STRING  shift, and go to state 217

    $default  reduce using rule 150 (optional_map_associates)

    optional_map_associates  go to state 218
    map_associates           go to state 219
    map_associate            go to state 220


State 132

  139 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 139 (binary_expression)


State 133

   99 range_expression: binary_expression T_DOTDOT . binary_expression $@10 range_increment

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 221
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 134

  118 binary_expression: binary_expression T_NMATCH . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 222
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 135

  137 binary_expression: binary_expression T_NE . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 223
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 136

  136 binary_expression: binary_expression T_EQ . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 224
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 137

  127 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 225
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 138

  128 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 226
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 139

  131 binary_expression: binary_expression T_OR . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 227
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 140

  130 binary_expression: binary_expression T_AND . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 228
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 141

  134 binary_expression: binary_expression T_LE . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 229
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 142

  135 binary_expression: binary_expression T_GE . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 230
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 143

  129 binary_expression: binary_expression T_POWER_TO . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 231
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 144

  119 binary_expression: binary_expression '&' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 232
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 145

  120 binary_expression: binary_expression '|' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 233
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 146

  122 binary_expression: binary_expression '^' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 234
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 147

  117 binary_expression: binary_expression '~' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 235
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 148

  132 binary_expression: binary_expression '<' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 236
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 149

  133 binary_expression: binary_expression '>' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 237
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 150

  121 binary_expression: binary_expression '+' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 238
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 151

  123 binary_expression: binary_expression '-' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 239
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 152

  124 binary_expression: binary_expression '*' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 240
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 153

  125 binary_expression: binary_expression '/' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 241
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 154

  126 binary_expression: binary_expression '%' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 242
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 155

  112 binary_expression: binary_expression '[' . binary_expression_or_range ']'

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    ']'  reduce using rule 97 (range_expression)

    variable_reference          go to state 97
    binary_expression_or_range  go to state 243
    range_expression            go to state 244
    s_bterm                     go to state 100
    constructor_expression      go to state 101
    binary_expression           go to state 245
    value                       go to state 103
    map_literal                 go to state 104
    array_literal               go to state 105
    string                      go to state 106
    call_expression             go to state 107
    function_id_or_pointer      go to state 108
    type_cast                   go to state 109
    boolean_literal             go to state 70
    float_literal               go to state 71
    integer_literal             go to state 72
    character_literal           go to state 73
    simple_literal              go to state 110


State 156

  111 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 246


State 157

  169 string: string T_STRING .

    $default  reduce using rule 169 (string)


State 158

  224 call_expression: function_id_or_pointer '(' . @28 parameter_list closing_paren

    $default  reduce using rule 223 (@28)

    @28  go to state 247


State 159

  147 value: T_IDENT .
  226 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 226 (function_id_or_pointer)
    $default  reduce using rule 147 (value)


State 160

  142 value: T_VARIABLE .

    $default  reduce using rule 142 (value)


State 161

  110 binary_expression: type_cast s_bterm .

    $default  reduce using rule 110 (binary_expression)


State 162

   52 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 248


State 163

   55 annotation_values: annotation_value ',' . annotation_values

    T_IDENT  shift, and go to state 111

    $default  reduce using rule 53 (annotation_values)

    annotation_value   go to state 112
    annotation_values  go to state 249


State 164

   51 annotation: T_ANNOTATION $@5 '(' annotation_values ')' .

    $default  reduce using rule 51 (annotation)


State 165

  227 function_id_or_pointer: error .
  231 nonempty_parameters: error .

    '('       reduce using rule 227 (function_id_or_pointer)
    $default  reduce using rule 231 (nonempty_parameters)


State 166

   47 parameter_declaration: T_ELLIPSIS .

    $default  reduce using rule 47 (parameter_declaration)


State 167

   36 macrostart: macro_type macro_declaration '(' parameter_list . ')' optional_description

    ')'  shift, and go to state 250


State 168

   43 parameter_list: non_empty_pardecl .
   45 non_empty_pardecl: non_empty_pardecl . ',' parameter_declaration

    ','  shift, and go to state 251

    $default  reduce using rule 43 (parameter_list)


State 169

   44 non_empty_pardecl: parameter_declaration .

    $default  reduce using rule 44 (non_empty_pardecl)


State 170

  232 parameter: simple_expression .

    $default  reduce using rule 232 (parameter)


State 171

  228 parameter_list: nonempty_parameters .
  230 nonempty_parameters: nonempty_parameters . ',' parameter

    ','  shift, and go to state 252

    $default  reduce using rule 228 (parameter_list)


State 172

  229 nonempty_parameters: parameter .

    $default  reduce using rule 229 (nonempty_parameters)


State 173

   46 parameter_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 37
    T_NUM     shift, and go to state 38
    T_STRING  shift, and go to state 39

    variable_identifier  go to state 253


State 174

   78 statement: error . ';'
  227 function_id_or_pointer: error .

    ';'  shift, and go to state 254

    $default  reduce using rule 227 (function_id_or_pointer)


State 175

  190 for_loop_expression: T_FOR . for_clause $@15 local_block

    error  shift, and go to state 255
    '('    shift, and go to state 256

    for_to_clause  go to state 257
    for_clause     go to state 258
    in_clause      go to state 259


State 176

   31 variable_reference: T_IDENT .
  185 label: T_IDENT . ':'
  226 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 260

    '('       reduce using rule 226 (function_id_or_pointer)
    $default  reduce using rule 31 (variable_reference)


State 177

  213 if_expression: T_IF . condition $@23 local_block $@24 else_clause

    '('  shift, and go to state 261

    condition  go to state 262


State 178

  207 while: T_WHILE . $@21 condition $@22 local_block

    $default  reduce using rule 205 ($@21)

    $@21  go to state 263


State 179

  186 goto: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 264


State 180

  188 switch_expression: T_SWITCH . '(' value ')' $@14 '{' case_clauses '}'

    '('  shift, and go to state 265


State 181

  170 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 266

    $default  reduce using rule 175 (opt_num)

    opt_num  go to state 267


State 182

  171 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 266

    $default  reduce using rule 175 (opt_num)

    opt_num  go to state 268


State 183

  172 return_expression: T_RETURN . optional_bterm

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    error              [reduce using rule 173 (optional_bterm)]
    T_FOR              reduce using rule 173 (optional_bterm)
    T_TYPE_IDENTIFIER  reduce using rule 173 (optional_bterm)
    T_IDENT            [reduce using rule 173 (optional_bterm)]
    T_FUNC             [reduce using rule 173 (optional_bterm)]
    T_IF               reduce using rule 173 (optional_bterm)
    T_ELSE             reduce using rule 173 (optional_bterm)
    T_WHILE            reduce using rule 173 (optional_bterm)
    T_GOTO             reduce using rule 173 (optional_bterm)
    T_SWITCH           reduce using rule 173 (optional_bterm)
    T_CASE             reduce using rule 173 (optional_bterm)
    T_DEFAULT          reduce using rule 173 (optional_bterm)
    T_BREAK            reduce using rule 173 (optional_bterm)
    T_CONTINUE         reduce using rule 173 (optional_bterm)
    T_RETURN           reduce using rule 173 (optional_bterm)
    T_VARIABLE         [reduce using rule 173 (optional_bterm)]
    '*'                [reduce using rule 173 (optional_bterm)]
    ';'                reduce using rule 173 (optional_bterm)
    '{'                [reduce using rule 173 (optional_bterm)]
    '}'                reduce using rule 173 (optional_bterm)

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 269
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    optional_bterm          go to state 270
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 184

   63 statement: ';' .

    $default  reduce using rule 63 (statement)


State 185

   79 assignment: variable_reference . assignment_expression
   85 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator simple_expression
   86 assignment_target: variable_reference .
  104 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 271
    T_MINUSMINUS  shift, and go to state 272
    T_ASSIGN      shift, and go to state 58

    '['       reduce using rule 86 (assignment_target)
    '.'       reduce using rule 86 (assignment_target)
    $default  reduce using rule 84 ($@9)

    $@9                    go to state 273
    assignment_expression  go to state 274
    minusminus_plusplus    go to state 275


State 186

   62 var_decls: var_decls var_decl . ';'
   77 statement: var_decl .

    ';'  shift, and go to state 276

    ';'       [reduce using rule 77 (statement)]
    $default  reduce using rule 77 (statement)


State 187

   74 statement: block .

    $default  reduce using rule 74 (statement)


State 188

  219 stmntlist: statement . $@26 stmntlist

    $default  reduce using rule 218 ($@26)

    $@26  go to state 277


State 189

   65 statement: assignment . ';'

    ';'  shift, and go to state 278


State 190

   83 assignment: shorthand_assignment .

    $default  reduce using rule 83 (assignment)


State 191

   81 assignment: assignment_target . '.' T_IDENT $@8 assignment_expression
   82           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 279
    '.'  shift, and go to state 280


State 192

   75 statement: increment_expression .

    $default  reduce using rule 75 (statement)


State 193

   70 statement: break .

    $default  reduce using rule 70 (statement)


State 194

   71 statement: continue .

    $default  reduce using rule 71 (statement)


State 195

   72 statement: return_expression .

    $default  reduce using rule 72 (statement)


State 196

   76 statement: label .

    $default  reduce using rule 76 (statement)


State 197

   73 statement: goto .

    $default  reduce using rule 73 (statement)


State 198

   69 statement: switch_expression .

    $default  reduce using rule 69 (statement)


State 199

   68 statement: for_loop_expression .

    $default  reduce using rule 68 (statement)


State 200

   67 statement: while .

    $default  reduce using rule 67 (statement)


State 201

   66 statement: if_expression .

    $default  reduce using rule 66 (statement)


State 202

   60 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 281

    closing_brace  go to state 282


State 203

   64 statement: call_expression . ';'

    ';'  shift, and go to state 283


State 204

  108 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 284


State 205

  222 call_expression: T_FUNC '(' @27 . parameter_list closing_paren

    error                    shift, and go to state 165
    T_NEW                    shift, and go to state 84
    T_TYPE_IDENTIFIER        shift, and go to state 27
    T_ELLIPSIS               shift, and go to state 166
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    ','  reduce using rule 97 (range_expression)
    ')'  reduce using rule 42 (parameter_list)
    ')'  [reduce using rule 97 (range_expression)]

    variable_reference      go to state 97
    parameter_list          go to state 285
    non_empty_pardecl       go to state 168
    parameter_declaration   go to state 169
    simple_expression       go to state 170
    range_expression        go to state 99
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    nonempty_parameters     go to state 171
    parameter               go to state 172
    type_cast               go to state 109
    type_name               go to state 173
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 206

  157 array_literal: '[' $@12 ']' .

    $default  reduce using rule 157 (array_literal)


State 207

  163 array_element: T_STRING .

    $default  reduce using rule 163 (array_element)


State 208

  165 simple_array_element: T_CHARACTER .

    $default  reduce using rule 165 (simple_array_element)


State 209

  166 simple_array_element: T_TRUE .

    $default  reduce using rule 166 (simple_array_element)


State 210

  167 simple_array_element: T_FALSE .

    $default  reduce using rule 167 (simple_array_element)


State 211

  159 array_literal: '[' $@13 array_elements . ']'
  160 array_elements: array_elements . ',' array_element

    ','  shift, and go to state 286
    ']'  shift, and go to state 287


State 212

  161 array_elements: array_element .

    $default  reduce using rule 161 (array_elements)


State 213

  162 array_element: simple_array_element .

    $default  reduce using rule 162 (array_element)


State 214

  164 simple_array_element: integer_literal .

    $default  reduce using rule 164 (simple_array_element)


State 215

  138 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 138 (binary_expression)


State 216

  233 type_cast: '(' type_name ')' .

    $default  reduce using rule 233 (type_cast)


State 217

  154 map_associate: T_STRING . T_ASSOC_ARROW simple_literal
  155              | T_STRING . T_ASSOC_ARROW T_STRING

    T_ASSOC_ARROW  shift, and go to state 288


State 218

  149 map_literal: '{' $@11 optional_map_associates . closing_brace

    '}'  shift, and go to state 281

    closing_brace  go to state 289


State 219

  151 optional_map_associates: map_associates .
  153 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 290

    $default  reduce using rule 151 (optional_map_associates)


State 220

  152 map_associates: map_associate .

    $default  reduce using rule 152 (map_associates)


State 221

   99 range_expression: binary_expression T_DOTDOT binary_expression . $@10 range_increment
  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NMATCH       [reduce using rule 98 ($@10)]
    T_NE           [reduce using rule 98 ($@10)]
    T_EQ           [reduce using rule 98 ($@10)]
    T_SHIFT_LEFT   [reduce using rule 98 ($@10)]
    T_SHIFT_RIGHT  [reduce using rule 98 ($@10)]
    T_OR           [reduce using rule 98 ($@10)]
    T_AND          [reduce using rule 98 ($@10)]
    T_LE           [reduce using rule 98 ($@10)]
    T_GE           [reduce using rule 98 ($@10)]
    T_POWER_TO     [reduce using rule 98 ($@10)]
    '&'            [reduce using rule 98 ($@10)]
    '|'            [reduce using rule 98 ($@10)]
    '^'            [reduce using rule 98 ($@10)]
    '~'            [reduce using rule 98 ($@10)]
    '<'            [reduce using rule 98 ($@10)]
    '>'            [reduce using rule 98 ($@10)]
    '+'            [reduce using rule 98 ($@10)]
    '-'            [reduce using rule 98 ($@10)]
    '*'            [reduce using rule 98 ($@10)]
    '/'            [reduce using rule 98 ($@10)]
    '%'            [reduce using rule 98 ($@10)]
    '['            [reduce using rule 98 ($@10)]
    '.'            [reduce using rule 98 ($@10)]
    $default       reduce using rule 98 ($@10)

    $@10  go to state 291


State 222

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  118                  | binary_expression T_NMATCH binary_expression .
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 118 (binary_expression)]
    $default  reduce using rule 118 (binary_expression)


State 223

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression
  137                  | binary_expression T_NE binary_expression .

    T_NMATCH       shift, and go to state 134
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    '.'       [reduce using rule 137 (binary_expression)]
    $default  reduce using rule 137 (binary_expression)


State 224

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  136                  | binary_expression T_EQ binary_expression .
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    '.'       [reduce using rule 136 (binary_expression)]
    $default  reduce using rule 136 (binary_expression)


State 225

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  127                  | binary_expression T_SHIFT_LEFT binary_expression .
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '+'         shift, and go to state 150
    '-'         shift, and go to state 151
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    '.'       [reduce using rule 127 (binary_expression)]
    $default  reduce using rule 127 (binary_expression)


State 226

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  128                  | binary_expression T_SHIFT_RIGHT binary_expression .
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '+'         shift, and go to state 150
    '-'         shift, and go to state 151
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    '.'       [reduce using rule 128 (binary_expression)]
    $default  reduce using rule 128 (binary_expression)


State 227

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  131                  | binary_expression T_OR binary_expression .
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 131 (binary_expression)]
    $default  reduce using rule 131 (binary_expression)


State 228

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  130                  | binary_expression T_AND binary_expression .
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 130 (binary_expression)]
    $default  reduce using rule 130 (binary_expression)


State 229

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  134                  | binary_expression T_LE binary_expression .
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_POWER_TO     shift, and go to state 143
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 134 (binary_expression)]
    $default  reduce using rule 134 (binary_expression)


State 230

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  135                  | binary_expression T_GE binary_expression .
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_POWER_TO     shift, and go to state 143
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 135 (binary_expression)]
    $default  reduce using rule 135 (binary_expression)


State 231

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  129                  | binary_expression T_POWER_TO binary_expression .
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    '.'       [reduce using rule 129 (binary_expression)]
    $default  reduce using rule 129 (binary_expression)


State 232

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  119                  | binary_expression '&' binary_expression .
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 119 (binary_expression)]
    $default  reduce using rule 119 (binary_expression)


State 233

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  120                  | binary_expression '|' binary_expression .
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 120 (binary_expression)]
    $default  reduce using rule 120 (binary_expression)


State 234

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  122                  | binary_expression '^' binary_expression .
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 122 (binary_expression)]
    $default  reduce using rule 122 (binary_expression)


State 235

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  117                  | binary_expression '~' binary_expression .
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 117 (binary_expression)]
    $default  reduce using rule 117 (binary_expression)


State 236

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  132                  | binary_expression '<' binary_expression .
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_POWER_TO     shift, and go to state 143
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 132 (binary_expression)]
    $default  reduce using rule 132 (binary_expression)


State 237

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  133                  | binary_expression '>' binary_expression .
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_POWER_TO     shift, and go to state 143
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '.'       [reduce using rule 133 (binary_expression)]
    $default  reduce using rule 133 (binary_expression)


State 238

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  121                  | binary_expression '+' binary_expression .
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    '.'       [reduce using rule 121 (binary_expression)]
    $default  reduce using rule 121 (binary_expression)


State 239

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  123                  | binary_expression '-' binary_expression .
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    '.'       [reduce using rule 123 (binary_expression)]
    $default  reduce using rule 123 (binary_expression)


State 240

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  124                  | binary_expression '*' binary_expression .
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    '.'       [reduce using rule 124 (binary_expression)]
    $default  reduce using rule 124 (binary_expression)


State 241

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  125                  | binary_expression '/' binary_expression .
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    '.'       [reduce using rule 125 (binary_expression)]
    $default  reduce using rule 125 (binary_expression)


State 242

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  126                  | binary_expression '%' binary_expression .
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    '.'       [reduce using rule 126 (binary_expression)]
    $default  reduce using rule 126 (binary_expression)


State 243

  112 binary_expression: binary_expression '[' binary_expression_or_range . ']'

    ']'  shift, and go to state 292


State 244

   96 binary_expression_or_range: range_expression .

    $default  reduce using rule 96 (binary_expression_or_range)


State 245

   95 binary_expression_or_range: binary_expression .
   99 range_expression: binary_expression . T_DOTDOT binary_expression $@10 range_increment
  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 133
    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 95 (binary_expression_or_range)


State 246

  111 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 111 (binary_expression)


State 247

  224 call_expression: function_id_or_pointer '(' @28 . parameter_list closing_paren

    error                    shift, and go to state 165
    T_NEW                    shift, and go to state 84
    T_TYPE_IDENTIFIER        shift, and go to state 27
    T_ELLIPSIS               shift, and go to state 166
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    ','  reduce using rule 97 (range_expression)
    ')'  reduce using rule 42 (parameter_list)
    ')'  [reduce using rule 97 (range_expression)]

    variable_reference      go to state 97
    parameter_list          go to state 293
    non_empty_pardecl       go to state 168
    parameter_declaration   go to state 169
    simple_expression       go to state 170
    range_expression        go to state 99
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    nonempty_parameters     go to state 171
    parameter               go to state 172
    type_cast               go to state 109
    type_name               go to state 173
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 248

   52 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 52 (annotation_value)


State 249

   55 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 55 (annotation_values)


State 250

   36 macrostart: macro_type macro_declaration '(' parameter_list ')' . optional_description

    T_STRING  shift, and go to state 294

    $default  reduce using rule 40 (optional_description)

    optional_description  go to state 295


State 251

   45 non_empty_pardecl: non_empty_pardecl ',' . parameter_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_ELLIPSIS         shift, and go to state 166

    parameter_declaration  go to state 296
    type_name              go to state 173


State 252

  230 nonempty_parameters: nonempty_parameters ',' . parameter

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    ','  reduce using rule 97 (range_expression)
    ')'  reduce using rule 97 (range_expression)

    variable_reference      go to state 97
    simple_expression       go to state 170
    range_expression        go to state 99
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    parameter               go to state 297
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 253

   46 parameter_declaration: type_name variable_identifier .

    $default  reduce using rule 46 (parameter_declaration)


State 254

   78 statement: error ';' .

    $default  reduce using rule 78 (statement)


State 255

  202 for_clause: error .

    $default  reduce using rule 202 (for_clause)


State 256

  196 for_to_clause: '(' . opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment $@18 ')'
  204 in_clause: '(' . type_name variable_identifier $@20 ':' simple_expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 197 (opt_for_initializer)

    opt_for_initializer  go to state 298
    type_name            go to state 299


State 257

  200 for_clause: for_to_clause .

    $default  reduce using rule 200 (for_clause)


State 258

  190 for_loop_expression: T_FOR for_clause . $@15 local_block

    $default  reduce using rule 189 ($@15)

    $@15  go to state 300


State 259

  201 for_clause: in_clause .

    $default  reduce using rule 201 (for_clause)


State 260

  185 label: T_IDENT ':' .

    $default  reduce using rule 185 (label)


State 261

  140 condition: '(' . binary_expression ')'
  141          | '(' . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 301
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 262

  213 if_expression: T_IF condition . $@23 local_block $@24 else_clause

    $default  reduce using rule 211 ($@23)

    $@23  go to state 302


State 263

  207 while: T_WHILE $@21 . condition $@22 local_block

    '('  shift, and go to state 261

    condition  go to state 303


State 264

  186 goto: T_GOTO T_IDENT .

    $default  reduce using rule 186 (goto)


State 265

  188 switch_expression: T_SWITCH '(' . value ')' $@14 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 304
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_VARIABLE               shift, and go to state 160
    '-'                      shift, and go to state 68
    '['                      shift, and go to state 93
    '{'                      shift, and go to state 96

    value              go to state 305
    map_literal        go to state 104
    array_literal      go to state 105
    string             go to state 106
    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 110


State 266

  176 opt_num: T_NUM .

    $default  reduce using rule 176 (opt_num)


State 267

  170 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 306


State 268

  171 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 307


State 269

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression
  174 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    '*'       [reduce using rule 174 (optional_bterm)]
    $default  reduce using rule 174 (optional_bterm)


State 270

  172 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 172 (return_expression)


State 271

  103 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 103 (minusminus_plusplus)


State 272

  102 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 102 (minusminus_plusplus)


State 273

   85 shorthand_assignment: variable_reference $@9 . shorthand_assignment_operator simple_expression

    T_SH_ASSIGN_PLUS   shift, and go to state 308
    T_SH_ASSIGN_MINUS  shift, and go to state 309
    T_SH_ASSIGN_MULT   shift, and go to state 310
    T_SH_ASSIGN_DIV    shift, and go to state 311
    T_SH_ASSIGN_MOD    shift, and go to state 312

    shorthand_assignment_operator  go to state 313


State 274

   79 assignment: variable_reference assignment_expression .

    $default  reduce using rule 79 (assignment)


State 275

  104 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 104 (increment_expression)


State 276

   62 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 62 (var_decls)


State 277

  219 stmntlist: statement $@26 . stmntlist

    error              shift, and go to state 174
    T_FOR              shift, and go to state 175
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 176
    T_FUNC             shift, and go to state 87
    T_IF               shift, and go to state 177
    T_WHILE            shift, and go to state 178
    T_GOTO             shift, and go to state 179
    T_SWITCH           shift, and go to state 180
    T_BREAK            shift, and go to state 181
    T_CONTINUE         shift, and go to state 182
    T_RETURN           shift, and go to state 183
    T_VARIABLE         shift, and go to state 123
    '*'                shift, and go to state 92
    ';'                shift, and go to state 184
    '{'                shift, and go to state 80

    T_CASE     reduce using rule 217 (stmntlist)
    T_DEFAULT  reduce using rule 217 (stmntlist)
    '}'        reduce using rule 217 (stmntlist)

    variable_reference      go to state 185
    var_decl                go to state 314
    block                   go to state 187
    statement               go to state 188
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto                    go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    if_expression           go to state 201
    stmntlist               go to state 315
    call_expression         go to state 203
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 278

   65 statement: assignment ';' .

    $default  reduce using rule 65 (statement)


State 279

   82 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 316
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 280

   81 assignment: assignment_target '.' . T_IDENT $@8 assignment_expression

    T_IDENT  shift, and go to state 317


State 281

  210 closing_brace: '}' .

    $default  reduce using rule 210 (closing_brace)


State 282

   60 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 60 (block)


State 283

   64 statement: call_expression ';' .

    $default  reduce using rule 64 (statement)


State 284

  108 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 108 (constructor_expression)


State 285

  222 call_expression: T_FUNC '(' @27 parameter_list . closing_paren

    ')'  shift, and go to state 318

    closing_paren  go to state 319


State 286

  160 array_elements: array_elements ',' . array_element

    T_NUM        shift, and go to state 62
    T_STRING     shift, and go to state 207
    T_CHARACTER  shift, and go to state 208
    T_TRUE       shift, and go to state 209
    T_FALSE      shift, and go to state 210
    '-'          shift, and go to state 68

    array_element         go to state 320
    simple_array_element  go to state 213
    integer_literal       go to state 214


State 287

  159 array_literal: '[' $@13 array_elements ']' .

    $default  reduce using rule 159 (array_literal)


State 288

  154 map_associate: T_STRING T_ASSOC_ARROW . simple_literal
  155              | T_STRING T_ASSOC_ARROW . T_STRING

    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 321
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    '-'                      shift, and go to state 68

    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 322


State 289

  149 map_literal: '{' $@11 optional_map_associates closing_brace .

    $default  reduce using rule 149 (map_literal)


State 290

  153 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 217

    map_associate  go to state 323


State 291

   99 range_expression: binary_expression T_DOTDOT binary_expression $@10 . range_increment

    T_DOTDOT  shift, and go to state 324

    T_DOTDOT  [reduce using rule 100 (range_increment)]
    $default  reduce using rule 100 (range_increment)

    range_increment  go to state 325


State 292

  112 binary_expression: binary_expression '[' binary_expression_or_range ']' .

    $default  reduce using rule 112 (binary_expression)


State 293

  224 call_expression: function_id_or_pointer '(' @28 parameter_list . closing_paren

    ')'  shift, and go to state 318

    closing_paren  go to state 326


State 294

   41 optional_description: T_STRING .

    $default  reduce using rule 41 (optional_description)


State 295

   36 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description .

    $default  reduce using rule 36 (macrostart)


State 296

   45 non_empty_pardecl: non_empty_pardecl ',' parameter_declaration .

    $default  reduce using rule 45 (non_empty_pardecl)


State 297

  230 nonempty_parameters: nonempty_parameters ',' parameter .

    $default  reduce using rule 230 (nonempty_parameters)


State 298

  196 for_to_clause: '(' opt_for_initializer . $@16 ';' binary_expression ';' $@17 for_increment $@18 ')'

    $default  reduce using rule 193 ($@16)

    $@16  go to state 327


State 299

  199 opt_for_initializer: type_name . variable_identifier $@19 assignment_expression
  204 in_clause: '(' type_name . variable_identifier $@20 ':' simple_expression ')'

    T_IDENT   shift, and go to state 37
    T_NUM     shift, and go to state 38
    T_STRING  shift, and go to state 39

    variable_identifier  go to state 328


State 300

  190 for_loop_expression: T_FOR for_clause $@15 . local_block

    error              shift, and go to state 174
    T_FOR              shift, and go to state 175
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 176
    T_FUNC             shift, and go to state 87
    T_IF               shift, and go to state 177
    T_WHILE            shift, and go to state 178
    T_GOTO             shift, and go to state 179
    T_SWITCH           shift, and go to state 180
    T_BREAK            shift, and go to state 181
    T_CONTINUE         shift, and go to state 182
    T_RETURN           shift, and go to state 183
    T_VARIABLE         shift, and go to state 123
    '*'                shift, and go to state 92
    ';'                shift, and go to state 184
    '{'                shift, and go to state 329

    variable_reference      go to state 185
    var_decl                go to state 314
    block                   go to state 187
    statement               go to state 330
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto                    go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    local_block             go to state 331
    if_expression           go to state 201
    call_expression         go to state 203
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 301

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression
  140 condition: '(' binary_expression . ')'
  141          | '(' binary_expression .

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    ')'            shift, and go to state 332
    '.'            shift, and go to state 156

    '*'       [reduce using rule 141 (condition)]
    $default  reduce using rule 141 (condition)


State 302

  213 if_expression: T_IF condition $@23 . local_block $@24 else_clause

    error              shift, and go to state 174
    T_FOR              shift, and go to state 175
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 176
    T_FUNC             shift, and go to state 87
    T_IF               shift, and go to state 177
    T_WHILE            shift, and go to state 178
    T_GOTO             shift, and go to state 179
    T_SWITCH           shift, and go to state 180
    T_BREAK            shift, and go to state 181
    T_CONTINUE         shift, and go to state 182
    T_RETURN           shift, and go to state 183
    T_VARIABLE         shift, and go to state 123
    '*'                shift, and go to state 92
    ';'                shift, and go to state 184
    '{'                shift, and go to state 329

    variable_reference      go to state 185
    var_decl                go to state 314
    block                   go to state 187
    statement               go to state 330
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto                    go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    local_block             go to state 333
    if_expression           go to state 201
    call_expression         go to state 203
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 303

  207 while: T_WHILE $@21 condition . $@22 local_block

    $default  reduce using rule 206 ($@22)

    $@22  go to state 334


State 304

  147 value: T_IDENT .

    $default  reduce using rule 147 (value)


State 305

  188 switch_expression: T_SWITCH '(' value . ')' $@14 '{' case_clauses '}'

    ')'  shift, and go to state 335


State 306

  170 break: T_BREAK opt_num ';' .

    $default  reduce using rule 170 (break)


State 307

  171 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 171 (continue)


State 308

   90 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 90 (shorthand_assignment_operator)


State 309

   91 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 91 (shorthand_assignment_operator)


State 310

   87 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 87 (shorthand_assignment_operator)


State 311

   88 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 88 (shorthand_assignment_operator)


State 312

   89 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 89 (shorthand_assignment_operator)


State 313

   85 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator . simple_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    ';'  reduce using rule 97 (range_expression)
    ')'  reduce using rule 97 (range_expression)

    variable_reference      go to state 97
    simple_expression       go to state 336
    range_expression        go to state 99
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 314

   77 statement: var_decl .

    $default  reduce using rule 77 (statement)


State 315

  219 stmntlist: statement $@26 stmntlist .

    $default  reduce using rule 219 (stmntlist)


State 316

   82 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156
    ']'            shift, and go to state 337


State 317

   81 assignment: assignment_target '.' T_IDENT . $@8 assignment_expression

    $default  reduce using rule 80 ($@8)

    $@8  go to state 338


State 318

  220 closing_paren: ')' .

    $default  reduce using rule 220 (closing_paren)


State 319

  222 call_expression: T_FUNC '(' @27 parameter_list closing_paren .

    $default  reduce using rule 222 (call_expression)


State 320

  160 array_elements: array_elements ',' array_element .

    $default  reduce using rule 160 (array_elements)


State 321

  155 map_associate: T_STRING T_ASSOC_ARROW T_STRING .

    $default  reduce using rule 155 (map_associate)


State 322

  154 map_associate: T_STRING T_ASSOC_ARROW simple_literal .

    $default  reduce using rule 154 (map_associate)


State 323

  153 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 153 (map_associates)


State 324

  101 range_increment: T_DOTDOT . binary_expression

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 339
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 325

   99 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment .

    $default  reduce using rule 99 (range_expression)


State 326

  224 call_expression: function_id_or_pointer '(' @28 parameter_list closing_paren .

    $default  reduce using rule 224 (call_expression)


State 327

  196 for_to_clause: '(' opt_for_initializer $@16 . ';' binary_expression ';' $@17 for_increment $@18 ')'

    ';'  shift, and go to state 340


State 328

  199 opt_for_initializer: type_name variable_identifier . $@19 assignment_expression
  204 in_clause: '(' type_name variable_identifier . $@20 ':' simple_expression ')'

    ':'       reduce using rule 203 ($@20)
    $default  reduce using rule 198 ($@19)

    $@19  go to state 341
    $@20  go to state 342


State 329

   60 block: '{' . var_decls stmntlist closing_brace
  209 local_block: '{' . stmntlist closing_brace

    error              shift, and go to state 174
    T_FOR              shift, and go to state 175
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 176
    T_FUNC             shift, and go to state 87
    T_IF               shift, and go to state 177
    T_WHILE            shift, and go to state 178
    T_GOTO             shift, and go to state 179
    T_SWITCH           shift, and go to state 180
    T_BREAK            shift, and go to state 181
    T_CONTINUE         shift, and go to state 182
    T_RETURN           shift, and go to state 183
    T_VARIABLE         shift, and go to state 123
    '*'                shift, and go to state 92
    ';'                shift, and go to state 184
    '{'                shift, and go to state 80

    error              [reduce using rule 61 (var_decls)]
    T_FOR              [reduce using rule 61 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 61 (var_decls)]
    T_IDENT            [reduce using rule 61 (var_decls)]
    T_FUNC             [reduce using rule 61 (var_decls)]
    T_IF               [reduce using rule 61 (var_decls)]
    T_WHILE            [reduce using rule 61 (var_decls)]
    T_GOTO             [reduce using rule 61 (var_decls)]
    T_SWITCH           [reduce using rule 61 (var_decls)]
    T_BREAK            [reduce using rule 61 (var_decls)]
    T_CONTINUE         [reduce using rule 61 (var_decls)]
    T_RETURN           [reduce using rule 61 (var_decls)]
    T_VARIABLE         [reduce using rule 61 (var_decls)]
    '*'                [reduce using rule 61 (var_decls)]
    ';'                [reduce using rule 61 (var_decls)]
    '{'                [reduce using rule 61 (var_decls)]
    '}'                reduce using rule 61 (var_decls)
    '}'                [reduce using rule 217 (stmntlist)]

    variable_reference      go to state 185
    var_decl                go to state 314
    block                   go to state 187
    var_decls               go to state 117
    statement               go to state 188
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto                    go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    if_expression           go to state 201
    stmntlist               go to state 343
    call_expression         go to state 203
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 330

  208 local_block: statement .

    $default  reduce using rule 208 (local_block)


State 331

  190 for_loop_expression: T_FOR for_clause $@15 local_block .

    $default  reduce using rule 190 (for_loop_expression)


State 332

  140 condition: '(' binary_expression ')' .

    $default  reduce using rule 140 (condition)


State 333

  213 if_expression: T_IF condition $@23 local_block . $@24 else_clause

    $default  reduce using rule 212 ($@24)

    $@24  go to state 344


State 334

  207 while: T_WHILE $@21 condition $@22 . local_block

    error              shift, and go to state 174
    T_FOR              shift, and go to state 175
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 176
    T_FUNC             shift, and go to state 87
    T_IF               shift, and go to state 177
    T_WHILE            shift, and go to state 178
    T_GOTO             shift, and go to state 179
    T_SWITCH           shift, and go to state 180
    T_BREAK            shift, and go to state 181
    T_CONTINUE         shift, and go to state 182
    T_RETURN           shift, and go to state 183
    T_VARIABLE         shift, and go to state 123
    '*'                shift, and go to state 92
    ';'                shift, and go to state 184
    '{'                shift, and go to state 329

    variable_reference      go to state 185
    var_decl                go to state 314
    block                   go to state 187
    statement               go to state 330
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto                    go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    local_block             go to state 345
    if_expression           go to state 201
    call_expression         go to state 203
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 335

  188 switch_expression: T_SWITCH '(' value ')' . $@14 '{' case_clauses '}'

    $default  reduce using rule 187 ($@14)

    $@14  go to state 346


State 336

   85 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator simple_expression .

    $default  reduce using rule 85 (shorthand_assignment)


State 337

   82 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 58

    assignment_expression  go to state 347


State 338

   81 assignment: assignment_target '.' T_IDENT $@8 . assignment_expression

    T_ASSIGN  shift, and go to state 58

    assignment_expression  go to state 348


State 339

  101 range_increment: T_DOTDOT binary_expression .
  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression

    '.'  shift, and go to state 156

    '.'       [reduce using rule 101 (range_increment)]
    $default  reduce using rule 101 (range_increment)


State 340

  196 for_to_clause: '(' opt_for_initializer $@16 ';' . binary_expression ';' $@17 for_increment $@18 ')'

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    variable_reference      go to state 97
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 349
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 341

  199 opt_for_initializer: type_name variable_identifier $@19 . assignment_expression

    T_ASSIGN  shift, and go to state 58

    assignment_expression  go to state 350


State 342

  204 in_clause: '(' type_name variable_identifier $@20 . ':' simple_expression ')'

    ':'  shift, and go to state 351


State 343

  209 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 281

    closing_brace  go to state 352


State 344

  213 if_expression: T_IF condition $@23 local_block $@24 . else_clause

    T_ELSE  shift, and go to state 353

    T_ELSE    [reduce using rule 214 (else_clause)]
    $default  reduce using rule 214 (else_clause)

    else_clause  go to state 354


State 345

  207 while: T_WHILE $@21 condition $@22 local_block .

    $default  reduce using rule 207 (while)


State 346

  188 switch_expression: T_SWITCH '(' value ')' $@14 . '{' case_clauses '}'

    '{'  shift, and go to state 355


State 347

   82 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 82 (assignment)


State 348

   81 assignment: assignment_target '.' T_IDENT $@8 assignment_expression .

    $default  reduce using rule 81 (assignment)


State 349

  111 binary_expression: binary_expression . '.' T_IDENT
  112                  | binary_expression . '[' binary_expression_or_range ']'
  117                  | binary_expression . '~' binary_expression
  118                  | binary_expression . T_NMATCH binary_expression
  119                  | binary_expression . '&' binary_expression
  120                  | binary_expression . '|' binary_expression
  121                  | binary_expression . '+' binary_expression
  122                  | binary_expression . '^' binary_expression
  123                  | binary_expression . '-' binary_expression
  124                  | binary_expression . '*' binary_expression
  125                  | binary_expression . '/' binary_expression
  126                  | binary_expression . '%' binary_expression
  127                  | binary_expression . T_SHIFT_LEFT binary_expression
  128                  | binary_expression . T_SHIFT_RIGHT binary_expression
  129                  | binary_expression . T_POWER_TO binary_expression
  130                  | binary_expression . T_AND binary_expression
  131                  | binary_expression . T_OR binary_expression
  132                  | binary_expression . '<' binary_expression
  133                  | binary_expression . '>' binary_expression
  134                  | binary_expression . T_LE binary_expression
  135                  | binary_expression . T_GE binary_expression
  136                  | binary_expression . T_EQ binary_expression
  137                  | binary_expression . T_NE binary_expression
  196 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression . ';' $@17 for_increment $@18 ')'

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    ';'            shift, and go to state 356
    '.'            shift, and go to state 156


State 350

  199 opt_for_initializer: type_name variable_identifier $@19 assignment_expression .

    $default  reduce using rule 199 (opt_for_initializer)


State 351

  204 in_clause: '(' type_name variable_identifier $@20 ':' . simple_expression ')'

    error                    shift, and go to state 83
    T_NEW                    shift, and go to state 84
    T_IDENT                  shift, and go to state 85
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 86
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 87
    T_VARIABLE               shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '!'                      shift, and go to state 94
    '('                      shift, and go to state 95
    '{'                      shift, and go to state 96

    ')'  reduce using rule 97 (range_expression)

    variable_reference      go to state 97
    simple_expression       go to state 357
    range_expression        go to state 99
    s_bterm                 go to state 100
    constructor_expression  go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    map_literal             go to state 104
    array_literal           go to state 105
    string                  go to state 106
    call_expression         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 352

  209 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 209 (local_block)


State 353

  216 else_clause: T_ELSE . $@25 local_block

    $default  reduce using rule 215 ($@25)

    $@25  go to state 358


State 354

  213 if_expression: T_IF condition $@23 local_block $@24 else_clause .

    $default  reduce using rule 213 (if_expression)


State 355

  188 switch_expression: T_SWITCH '(' value ')' $@14 '{' . case_clauses '}'

    T_CASE     shift, and go to state 359
    T_DEFAULT  shift, and go to state 360

    $default  reduce using rule 177 (case_clauses)

    case_clauses   go to state 361
    case_clause    go to state 362
    case_selector  go to state 363


State 356

  196 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' . $@17 for_increment $@18 ')'

    $default  reduce using rule 194 ($@17)

    $@17  go to state 364


State 357

  204 in_clause: '(' type_name variable_identifier $@20 ':' simple_expression . ')'

    ')'  shift, and go to state 365


State 358

  216 else_clause: T_ELSE $@25 . local_block

    error              shift, and go to state 174
    T_FOR              shift, and go to state 175
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 176
    T_FUNC             shift, and go to state 87
    T_IF               shift, and go to state 177
    T_WHILE            shift, and go to state 178
    T_GOTO             shift, and go to state 179
    T_SWITCH           shift, and go to state 180
    T_BREAK            shift, and go to state 181
    T_CONTINUE         shift, and go to state 182
    T_RETURN           shift, and go to state 183
    T_VARIABLE         shift, and go to state 123
    '*'                shift, and go to state 92
    ';'                shift, and go to state 184
    '{'                shift, and go to state 329

    variable_reference      go to state 185
    var_decl                go to state 314
    block                   go to state 187
    statement               go to state 330
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto                    go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    local_block             go to state 366
    if_expression           go to state 201
    call_expression         go to state 203
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 359

  180 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 367
    T_STRING  shift, and go to state 368
    '-'       shift, and go to state 68

    case_condition   go to state 369
    integer_literal  go to state 370


State 360

  181 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 371


State 361

  188 switch_expression: T_SWITCH '(' value ')' $@14 '{' case_clauses . '}'

    '}'  shift, and go to state 372


State 362

  178 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 359
    T_DEFAULT  shift, and go to state 360

    $default  reduce using rule 177 (case_clauses)

    case_clauses   go to state 373
    case_clause    go to state 362
    case_selector  go to state 363


State 363

  179 case_clause: case_selector . stmntlist

    error              shift, and go to state 174
    T_FOR              shift, and go to state 175
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 176
    T_FUNC             shift, and go to state 87
    T_IF               shift, and go to state 177
    T_WHILE            shift, and go to state 178
    T_GOTO             shift, and go to state 179
    T_SWITCH           shift, and go to state 180
    T_BREAK            shift, and go to state 181
    T_CONTINUE         shift, and go to state 182
    T_RETURN           shift, and go to state 183
    T_VARIABLE         shift, and go to state 123
    '*'                shift, and go to state 92
    ';'                shift, and go to state 184
    '{'                shift, and go to state 80

    T_CASE     reduce using rule 217 (stmntlist)
    T_DEFAULT  reduce using rule 217 (stmntlist)
    '}'        reduce using rule 217 (stmntlist)

    variable_reference      go to state 185
    var_decl                go to state 314
    block                   go to state 187
    statement               go to state 188
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto                    go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    if_expression           go to state 201
    stmntlist               go to state 374
    call_expression         go to state 203
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 364

  196 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 . for_increment $@18 ')'

    T_IDENT     shift, and go to state 122
    T_VARIABLE  shift, and go to state 123

    variable_reference    go to state 375
    shorthand_assignment  go to state 376
    increment_expression  go to state 377
    for_increment         go to state 378


State 365

  204 in_clause: '(' type_name variable_identifier $@20 ':' simple_expression ')' .

    $default  reduce using rule 204 (in_clause)


State 366

  216 else_clause: T_ELSE $@25 local_block .

    $default  reduce using rule 216 (else_clause)


State 367

  184 case_condition: T_NUM . T_DOTDOT T_NUM
  241 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 379

    $default  reduce using rule 241 (integer_literal)


State 368

  183 case_condition: T_STRING .

    $default  reduce using rule 183 (case_condition)


State 369

  180 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 380


State 370

  182 case_condition: integer_literal .

    $default  reduce using rule 182 (case_condition)


State 371

  181 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 181 (case_selector)


State 372

  188 switch_expression: T_SWITCH '(' value ')' $@14 '{' case_clauses '}' .

    $default  reduce using rule 188 (switch_expression)


State 373

  178 case_clauses: case_clause case_clauses .

    $default  reduce using rule 178 (case_clauses)


State 374

  179 case_clause: case_selector stmntlist .

    $default  reduce using rule 179 (case_clause)


State 375

   85 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator simple_expression
  104 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 271
    T_MINUSMINUS  shift, and go to state 272

    $default  reduce using rule 84 ($@9)

    $@9                  go to state 273
    minusminus_plusplus  go to state 275


State 376

  192 for_increment: shorthand_assignment .

    $default  reduce using rule 192 (for_increment)


State 377

  191 for_increment: increment_expression .

    $default  reduce using rule 191 (for_increment)


State 378

  196 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment . $@18 ')'

    $default  reduce using rule 195 ($@18)

    $@18  go to state 381


State 379

  184 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 382


State 380

  180 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 180 (case_selector)


State 381

  196 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment $@18 . ')'

    ')'  shift, and go to state 383


State 382

  184 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 184 (case_condition)


State 383

  196 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment $@18 ')' .

    $default  reduce using rule 196 (for_to_clause)
