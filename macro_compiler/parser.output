State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 55 conflicts: 9 shift/reduce
State 96 conflicts: 24 shift/reduce
State 128 conflicts: 1 reduce/reduce
State 168 conflicts: 1 reduce/reduce
State 181 conflicts: 23 shift/reduce
State 205 conflicts: 1 reduce/reduce
State 224 conflicts: 1 reduce/reduce
State 226 conflicts: 1 shift/reduce
State 252 conflicts: 1 shift/reduce
State 306 conflicts: 2 shift/reduce
State 325 conflicts: 17 shift/reduce, 2 reduce/reduce
State 339 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | m_o_f macro_definitions

    8 m_o_f: annotations macro_or_native_function

    9 macro_or_native_function: native_function_definition ';'
   10                         | macro_definition

   11 namespace: %empty
   12          | T_NAMESPACE T_IDENT ';'

   13 prerequisites: %empty
   14              | prerequisites require

   15 require: T_REQUIRE T_STRING ';'

   16 global_declarations: %empty
   17                    | global_declarations constants ';'
   18                    | global_declarations global_var ';'

   19 scope: %empty
   20      | T_STATIC

   21 constants: T_CONST constant_list

   22 constant_list: constdef
   23              | constant_list ',' constdef

   24 $@3: %empty

   25 $@4: %empty

   26 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   27 constant_literal: simple_literal
   28                 | T_STRING

   29 variable_identifier: T_IDENT
   30                    | T_NUM
   31                    | T_STRING

   32 variable_reference: T_VARIABLE
   33                   | T_IDENT

   34 macro_declaration: T_IDENT
   35                  | T_FUNC

   36 macro_type: scope T_VOID
   37           | scope type_name

   38 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description

   39 global_var: scope var_decl

   40 var_decl: type_name variable_identifier assignment_expression
   41         | type_name variable_identifier

   42 optional_description: %empty
   43                     | T_STRING

   44 argument_list: %empty
   45              | non_empty_arguments

   46 non_empty_arguments: argument_declaration
   47                    | non_empty_arguments ',' argument_declaration

   48 parameter_list: %empty
   49               | non_empty_parameters

   50 non_empty_parameters: parameter
   51                     | non_empty_parameters ',' parameter
   52                     | error

   53 argument_declaration: type_name variable_identifier
   54                     | T_ELLIPSIS

   55 annotations: %empty
   56            | annotation annotations

   57 $@5: %empty

   58 annotation: T_ANNOTATION $@5 '(' annotation_values ')'

   59 annotation_value: T_IDENT T_ASSIGN T_STRING
   60                 | T_IDENT
   61                 | T_STRING

   62 annotation_values: %empty
   63                  | annotation_value
   64                  | annotation_value ',' annotation_values

   65 $@6: %empty

   66 native_function_definition: T_NATIVE $@6 macrostart

   67 $@7: %empty

   68 macro_definition: $@7 macrostart block

   69 block: '{' var_decls stmntlist closing_brace

   70 var_decls: %empty
   71          | var_decls var_decl ';'

   72 statement: ';'
   73          | call_expression ';'
   74          | assignment ';'
   75          | if_expression
   76          | while
   77          | for_loop_expression
   78          | switch_expression
   79          | break
   80          | continue
   81          | return_expression ';'
   82          | goto_expression ';'
   83          | block
   84          | increment_expression ';'
   85          | label
   86          | var_decl
   87          | error ';'

   88 assignment: variable_reference assignment_expression

   89 $@8: %empty

   90 assignment: assignment_target '.' T_IDENT $@8 assignment_expression
   91           | assignment_target '[' binary_expression ']' assignment_expression
   92           | shorthand_assignment

   93 $@9: %empty

   94 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator expression

   95 assignment_target: variable_reference

   96 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   97                              | T_SH_ASSIGN_DIV
   98                              | T_SH_ASSIGN_MOD
   99                              | T_SH_ASSIGN_PLUS
  100                              | T_SH_ASSIGN_MINUS

  101 assignment_expression: T_ASSIGN expression

  102 expression: binary_expression
  103           | range_expression

  104 range_expression: %empty

  105 $@10: %empty

  106 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment

  107 range_increment: %empty
  108                | T_DOTDOT binary_expression

  109 minusminus_plusplus: T_MINUSMINUS
  110                    | T_PLUSPLUS

  111 increment_expression: variable_reference minusminus_plusplus

  112 simple_term: value
  113            | call_expression
  114            | constructor_expression

  115 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  116 unary_expression: '!' binary_expression
  117                 | '~' binary_expression
  118                 | '+' binary_expression
  119                 | '-' variable_reference

  120 binary_expression: simple_term
  121                  | type_cast simple_term
  122                  | binary_expression '.' T_IDENT
  123                  | unary_expression
  124                  | binary_expression '[' expression ']'
  125                  | binary_expression '~' binary_expression
  126                  | binary_expression T_NMATCH binary_expression
  127                  | binary_expression '&' binary_expression
  128                  | binary_expression '|' binary_expression
  129                  | binary_expression '+' binary_expression
  130                  | binary_expression '^' binary_expression
  131                  | binary_expression '-' binary_expression
  132                  | binary_expression '*' binary_expression
  133                  | binary_expression '/' binary_expression
  134                  | binary_expression '%' binary_expression
  135                  | binary_expression T_SHIFT_LEFT binary_expression
  136                  | binary_expression T_SHIFT_RIGHT binary_expression
  137                  | binary_expression T_POWER_TO binary_expression
  138                  | binary_expression T_AND binary_expression
  139                  | binary_expression T_OR binary_expression
  140                  | binary_expression '<' binary_expression
  141                  | binary_expression '>' binary_expression
  142                  | binary_expression T_LE binary_expression
  143                  | binary_expression T_GE binary_expression
  144                  | binary_expression T_EQ binary_expression
  145                  | binary_expression T_NE binary_expression
  146                  | '(' binary_expression ')'
  147                  | variable_reference assignment_expression

  148 condition: '(' binary_expression ')'
  149          | '(' binary_expression

  150 value: T_VARIABLE
  151      | string
  152      | simple_literal
  153      | T_IDENT

  154 string: T_STRING
  155       | string T_STRING

  156 break: T_BREAK opt_num ';'

  157 continue: T_CONTINUE opt_num ';'

  158 return_expression: T_RETURN optional_bterm

  159 optional_bterm: %empty
  160               | binary_expression

  161 opt_num: %empty
  162        | T_NUM

  163 case_clauses: %empty
  164             | case_clause case_clauses

  165 case_clause: case_selector stmntlist

  166 case_selector: T_CASE case_condition ':'
  167              | T_DEFAULT ':'

  168 case_condition: integer_literal
  169               | T_STRING
  170               | T_NUM T_DOTDOT T_NUM

  171 label: T_IDENT ':'

  172 goto_expression: T_GOTO T_IDENT

  173 $@11: %empty

  174 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses '}'

  175 $@12: %empty

  176 for_loop_expression: T_FOR for_clause $@12 local_block

  177 for_increment: increment_expression
  178              | shorthand_assignment

  179 $@13: %empty

  180 $@14: %empty

  181 $@15: %empty

  182 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'

  183 opt_for_initializer: %empty

  184 $@16: %empty

  185 opt_for_initializer: type_name variable_identifier $@16 assignment_expression

  186 for_clause: for_to_clause
  187           | in_clause
  188           | error

  189 $@17: %empty

  190 in_clause: '(' type_name variable_identifier $@17 ':' expression ')'

  191 $@18: %empty

  192 $@19: %empty

  193 while: T_WHILE $@18 condition $@19 local_block

  194 local_block: statement
  195            | '{' stmntlist closing_brace

  196 closing_brace: '}'

  197 $@20: %empty

  198 $@21: %empty

  199 if_expression: T_IF condition $@20 local_block $@21 else_clause

  200 else_clause: %empty

  201 $@22: %empty

  202 else_clause: T_ELSE $@22 local_block

  203 stmntlist: %empty
  204          | statement stmntlist

  205 closing_paren: ')'

  206 @23: %empty

  207 call_expression: T_FUNC '(' @23 parameter_list closing_paren

  208 @24: %empty

  209 call_expression: function_id_or_pointer '(' @24 parameter_list closing_paren
  210                | array_constructor
  211                | map_constructor

  212 @25: %empty

  213 array_constructor: '[' @25 parameter_list ']'

  214 @26: %empty

  215 map_constructor: '{' @26 optional_map_associates '}'

  216 optional_map_associates: %empty
  217                        | map_associates

  218 map_associates: map_associate
  219               | map_associates ',' map_associate

  220 @27: %empty

  221 map_associate: T_STRING ':' @27 value

  222 function_id_or_pointer: '*' variable_reference
  223                       | T_IDENT

  224 parameter: expression
  225          | T_ELLIPSIS expression

  226 type_cast: '(' type_name ')'

  227 type_name: T_TYPE_IDENTIFIER
  228          | T_TYPE_IDENTIFIER array_size

  229 array_size: '[' ']'
  230           | '[' T_NUM ']'

  231 boolean_literal: T_TRUE
  232                | T_FALSE

  233 float_literal: T_FLOATING_POINT_NUMBER

  234 integer_literal: T_NUM
  235                | '-' T_NUM

  236 character_literal: T_CHARACTER

  237 simple_literal: integer_literal
  238               | float_literal
  239               | character_literal
  240               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 116
    '%' (37) 134
    '&' (38) 127
    '(' (40) 38 58 115 146 148 149 174 182 190 207 209 226
    ')' (41) 38 58 115 146 148 174 182 190 205 226
    '*' (42) 132 222
    '+' (43) 118 129
    ',' (44) 23 47 51 64 219
    '-' (45) 119 131 235
    '.' (46) 90 122
    '/' (47) 133
    ':' (58) 166 167 171 190 221
    ';' (59) 9 12 15 17 18 71 72 73 74 81 82 84 87 156 157 182
    '<' (60) 140
    '>' (62) 141
    '[' (91) 91 124 213 229 230
    ']' (93) 91 124 213 229 230
    '^' (94) 130
    '{' (123) 69 174 195 215
    '|' (124) 128
    '}' (125) 174 196 215
    '~' (126) 117 125
    error (256) 52 87 188
    T_NAMESPACE (258) 12
    T_REQUIRE (259) 15
    T_FOR (260) 176
    T_ANNOTATION (261) 58
    T_NATIVE (262) 66
    T_NEW (263) 115
    T_STATIC (264) 20
    T_VOID (265) 36
    T_TYPE_IDENTIFIER (266) 115 227 228
    T_ELLIPSIS (267) 54 225
    T_IDENT (268) 12 29 33 34 59 60 90 122 153 171 172 223
    T_NUM (269) 30 162 170 230 234 235
    T_FLOATING_POINT_NUMBER (270) 233
    T_STRING (271) 15 28 31 43 59 61 154 155 169 221
    T_CHARACTER (272) 236
    T_CONST (273) 21
    T_TRUE (274) 231
    T_FALSE (275) 232
    T_FUNC (276) 35 207
    T_DOTDOT (277) 106 108 170
    T_PLUSPLUS (278) 110
    T_MINUSMINUS (279) 109
    T_IF (280) 199
    T_ELSE (281) 202
    T_WHILE (282) 193
    T_GOTO (283) 172
    T_SH_ASSIGN_PLUS (284) 99
    T_SH_ASSIGN_MINUS (285) 100
    T_SH_ASSIGN_MULT (286) 96
    T_SH_ASSIGN_DIV (287) 97
    T_SH_ASSIGN_MOD (288) 98
    T_SWITCH (289) 174
    T_CASE (290) 166
    T_DEFAULT (291) 167
    T_BREAK (292) 156
    T_CONTINUE (293) 157
    T_RETURN (294) 158
    T_VARIABLE (295) 32 150
    T_NMATCH (296) 126
    T_ASSIGN (297) 26 59 101
    T_NE (298) 145
    T_EQ (299) 144
    T_SHIFT_LEFT (300) 135
    T_SHIFT_RIGHT (301) 136
    T_OR (302) 139
    T_AND (303) 138
    T_LE (304) 142
    T_GE (305) 143
    T_POWER_TO (306) 137


Nonterminals, with rules where they appear

    $accept (74)
        on left: 0
    file_structure (75)
        on left: 3
        on right: 0
    $@1 (76)
        on left: 1
        on right: 3
    $@2 (77)
        on left: 2
        on right: 3
    header_delimiter (78)
        on left: 4 5
        on right: 3
    macro_definitions (79)
        on left: 6 7
        on right: 3 7
    m_o_f (80)
        on left: 8
        on right: 7
    macro_or_native_function (81)
        on left: 9 10
        on right: 8
    namespace (82)
        on left: 11 12
        on right: 3
    prerequisites (83)
        on left: 13 14
        on right: 3 14
    require (84)
        on left: 15
        on right: 14
    global_declarations (85)
        on left: 16 17 18
        on right: 3 17 18
    scope (86)
        on left: 19 20
        on right: 36 37 39
    constants (87)
        on left: 21
        on right: 17
    constant_list (88)
        on left: 22 23
        on right: 21 23
    constdef (89)
        on left: 26
        on right: 22 23
    $@3 (90)
        on left: 24
        on right: 26
    $@4 (91)
        on left: 25
        on right: 26
    constant_literal (92)
        on left: 27 28
        on right: 26
    variable_identifier (93)
        on left: 29 30 31
        on right: 26 40 41 53 185 190
    variable_reference (94)
        on left: 32 33
        on right: 88 94 95 111 119 147 222
    macro_declaration (95)
        on left: 34 35
        on right: 38
    macro_type (96)
        on left: 36 37
        on right: 38
    macrostart (97)
        on left: 38
        on right: 66 68
    global_var (98)
        on left: 39
        on right: 18
    var_decl (99)
        on left: 40 41
        on right: 39 71 86
    optional_description (100)
        on left: 42 43
        on right: 38
    argument_list (101)
        on left: 44 45
        on right: 38
    non_empty_arguments (102)
        on left: 46 47
        on right: 45 47
    parameter_list (103)
        on left: 48 49
        on right: 207 209 213
    non_empty_parameters (104)
        on left: 50 51 52
        on right: 49 51
    argument_declaration (105)
        on left: 53 54
        on right: 46 47
    annotations (106)
        on left: 55 56
        on right: 8 56
    annotation (107)
        on left: 58
        on right: 56
    $@5 (108)
        on left: 57
        on right: 58
    annotation_value (109)
        on left: 59 60 61
        on right: 63 64
    annotation_values (110)
        on left: 62 63 64
        on right: 58 64
    native_function_definition (111)
        on left: 66
        on right: 9
    $@6 (112)
        on left: 65
        on right: 66
    macro_definition (113)
        on left: 68
        on right: 10
    $@7 (114)
        on left: 67
        on right: 68
    block (115)
        on left: 69
        on right: 68 83
    var_decls (116)
        on left: 70 71
        on right: 69 71
    statement (117)
        on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
        on right: 194 204
    assignment (118)
        on left: 88 90 91 92
        on right: 74
    $@8 (119)
        on left: 89
        on right: 90
    shorthand_assignment (120)
        on left: 94
        on right: 92 178
    $@9 (121)
        on left: 93
        on right: 94
    assignment_target (122)
        on left: 95
        on right: 90 91
    shorthand_assignment_operator (123)
        on left: 96 97 98 99 100
        on right: 94
    assignment_expression (124)
        on left: 101
        on right: 40 88 90 91 147 185
    expression (125)
        on left: 102 103
        on right: 94 101 124 190 224 225
    range_expression (126)
        on left: 104 106
        on right: 103
    $@10 (127)
        on left: 105
        on right: 106
    range_increment (128)
        on left: 107 108
        on right: 106
    minusminus_plusplus (129)
        on left: 109 110
        on right: 111
    increment_expression (130)
        on left: 111
        on right: 84 177
    simple_term (131)
        on left: 112 113 114
        on right: 120 121
    constructor_expression (132)
        on left: 115
        on right: 114
    unary_expression (133)
        on left: 116 117 118 119
        on right: 123
    binary_expression (134)
        on left: 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147
        on right: 91 102 106 108 116 117 118 122 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 148 149 160 182
    condition (135)
        on left: 148 149
        on right: 193 199
    value (136)
        on left: 150 151 152 153
        on right: 112 174 221
    string (137)
        on left: 154 155
        on right: 151 155
    break (138)
        on left: 156
        on right: 79
    continue (139)
        on left: 157
        on right: 80
    return_expression (140)
        on left: 158
        on right: 81
    optional_bterm (141)
        on left: 159 160
        on right: 158
    opt_num (142)
        on left: 161 162
        on right: 156 157
    case_clauses (143)
        on left: 163 164
        on right: 164 174
    case_clause (144)
        on left: 165
        on right: 164
    case_selector (145)
        on left: 166 167
        on right: 165
    case_condition (146)
        on left: 168 169 170
        on right: 166
    label (147)
        on left: 171
        on right: 85
    goto_expression (148)
        on left: 172
        on right: 82
    switch_expression (149)
        on left: 174
        on right: 78
    $@11 (150)
        on left: 173
        on right: 174
    for_loop_expression (151)
        on left: 176
        on right: 77
    $@12 (152)
        on left: 175
        on right: 176
    for_increment (153)
        on left: 177 178
        on right: 182
    for_to_clause (154)
        on left: 182
        on right: 186
    $@13 (155)
        on left: 179
        on right: 182
    $@14 (156)
        on left: 180
        on right: 182
    $@15 (157)
        on left: 181
        on right: 182
    opt_for_initializer (158)
        on left: 183 185
        on right: 182
    $@16 (159)
        on left: 184
        on right: 185
    for_clause (160)
        on left: 186 187 188
        on right: 176
    in_clause (161)
        on left: 190
        on right: 187
    $@17 (162)
        on left: 189
        on right: 190
    while (163)
        on left: 193
        on right: 76
    $@18 (164)
        on left: 191
        on right: 193
    $@19 (165)
        on left: 192
        on right: 193
    local_block (166)
        on left: 194 195
        on right: 176 193 199 202
    closing_brace (167)
        on left: 196
        on right: 69 195
    if_expression (168)
        on left: 199
        on right: 75
    $@20 (169)
        on left: 197
        on right: 199
    $@21 (170)
        on left: 198
        on right: 199
    else_clause (171)
        on left: 200 202
        on right: 199
    $@22 (172)
        on left: 201
        on right: 202
    stmntlist (173)
        on left: 203 204
        on right: 69 165 195 204
    closing_paren (174)
        on left: 205
        on right: 207 209
    call_expression (175)
        on left: 207 209 210 211
        on right: 73 113
    @23 (176)
        on left: 206
        on right: 207
    @24 (177)
        on left: 208
        on right: 209
    array_constructor (178)
        on left: 213
        on right: 210
    @25 (179)
        on left: 212
        on right: 213
    map_constructor (180)
        on left: 215
        on right: 211
    @26 (181)
        on left: 214
        on right: 215
    optional_map_associates (182)
        on left: 216 217
        on right: 215
    map_associates (183)
        on left: 218 219
        on right: 217 219
    map_associate (184)
        on left: 221
        on right: 218 219
    @27 (185)
        on left: 220
        on right: 221
    function_id_or_pointer (186)
        on left: 222 223
        on right: 209
    parameter (187)
        on left: 224 225
        on right: 50 51
    type_cast (188)
        on left: 226
        on right: 121
    type_name (189)
        on left: 227 228
        on right: 37 40 41 53 185 190 226
    array_size (190)
        on left: 229 230
        on right: 228
    boolean_literal (191)
        on left: 231 232
        on right: 240
    float_literal (192)
        on left: 233
        on right: 238
    integer_literal (193)
        on left: 234 235
        on right: 168 237
    character_literal (194)
        on left: 236
        on right: 239
    simple_literal (195)
        on left: 237 238 239 240
        on right: 27 152


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 11 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

   12 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites global_declarations $@2 header_delimiter macro_definitions

    $default  reduce using rule 13 (prerequisites)

    prerequisites  go to state 7


State 6

   12 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . global_declarations $@2 header_delimiter macro_definitions
   14 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 16 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

   12 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 12 (namespace)


State 9

   15 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   14 prerequisites: prerequisites require .

    $default  reduce using rule 14 (prerequisites)


State 11

    3 file_structure: $@1 namespace prerequisites global_declarations . $@2 header_delimiter macro_definitions
   17 global_declarations: global_declarations . constants ';'
   18                    | global_declarations . global_var ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14

    T_STATIC           [reduce using rule 2 ($@2)]
    T_TYPE_IDENTIFIER  reduce using rule 2 ($@2)
    T_TYPE_IDENTIFIER  [reduce using rule 19 (scope)]
    $default           reduce using rule 2 ($@2)

    $@2         go to state 15
    scope       go to state 16
    constants   go to state 17
    global_var  go to state 18


State 12

   15 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 19


State 13

   20 scope: T_STATIC .

    $default  reduce using rule 20 (scope)


State 14

   21 constants: T_CONST . constant_list

    $default  reduce using rule 24 ($@3)

    constant_list  go to state 20
    constdef       go to state 21
    $@3            go to state 22


State 15

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 . header_delimiter macro_definitions

    '!'  shift, and go to state 23

    $default  reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 24


State 16

   39 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    var_decl   go to state 26
    type_name  go to state 27


State 17

   17 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 28


State 18

   18 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 29


State 19

   15 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 15 (require)


State 20

   21 constants: T_CONST constant_list .
   23 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 30

    $default  reduce using rule 21 (constants)


State 21

   22 constant_list: constdef .

    $default  reduce using rule 22 (constant_list)


State 22

   26 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 34


State 23

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 24

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter . macro_definitions

    T_ANNOTATION  shift, and go to state 35

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 55 (annotations)

    macro_definitions  go to state 36
    m_o_f              go to state 37
    annotations        go to state 38
    annotation         go to state 39


State 25

  227 type_name: T_TYPE_IDENTIFIER .
  228          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 40

    $default  reduce using rule 227 (type_name)

    array_size  go to state 41


State 26

   39 global_var: scope var_decl .

    $default  reduce using rule 39 (global_var)


State 27

   40 var_decl: type_name . variable_identifier assignment_expression
   41         | type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 42


State 28

   17 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 17 (global_declarations)


State 29

   18 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 18 (global_declarations)


State 30

   23 constant_list: constant_list ',' . constdef

    $default  reduce using rule 24 ($@3)

    constdef  go to state 43
    $@3       go to state 22


State 31

   29 variable_identifier: T_IDENT .

    $default  reduce using rule 29 (variable_identifier)


State 32

   30 variable_identifier: T_NUM .

    $default  reduce using rule 30 (variable_identifier)


State 33

   31 variable_identifier: T_STRING .

    $default  reduce using rule 31 (variable_identifier)


State 34

   26 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 44


State 35

   58 annotation: T_ANNOTATION . $@5 '(' annotation_values ')'

    $default  reduce using rule 57 ($@5)

    $@5  go to state 45


State 36

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 37

    7 macro_definitions: m_o_f . macro_definitions

    T_ANNOTATION  shift, and go to state 35

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 55 (annotations)

    macro_definitions  go to state 46
    m_o_f              go to state 37
    annotations        go to state 38
    annotation         go to state 39


State 38

    8 m_o_f: annotations . macro_or_native_function

    T_NATIVE  shift, and go to state 47

    $default  reduce using rule 67 ($@7)

    macro_or_native_function    go to state 48
    native_function_definition  go to state 49
    macro_definition            go to state 50
    $@7                         go to state 51


State 39

   56 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 35

    $default  reduce using rule 55 (annotations)

    annotations  go to state 52
    annotation   go to state 39


State 40

  229 array_size: '[' . ']'
  230           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 53
    ']'    shift, and go to state 54


State 41

  228 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 228 (type_name)


State 42

   40 var_decl: type_name variable_identifier . assignment_expression
   41         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 55

    $default  reduce using rule 41 (var_decl)

    assignment_expression  go to state 56


State 43

   23 constant_list: constant_list ',' constdef .

    $default  reduce using rule 23 (constant_list)


State 44

   26 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 59
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    '-'                      shift, and go to state 63

    constant_literal   go to state 64
    boolean_literal    go to state 65
    float_literal      go to state 66
    integer_literal    go to state 67
    character_literal  go to state 68
    simple_literal     go to state 69


State 45

   58 annotation: T_ANNOTATION $@5 . '(' annotation_values ')'

    '('  shift, and go to state 70


State 46

    7 macro_definitions: m_o_f macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 47

   66 native_function_definition: T_NATIVE . $@6 macrostart

    $default  reduce using rule 65 ($@6)

    $@6  go to state 71


State 48

    8 m_o_f: annotations macro_or_native_function .

    $default  reduce using rule 8 (m_o_f)


State 49

    9 macro_or_native_function: native_function_definition . ';'

    ';'  shift, and go to state 72


State 50

   10 macro_or_native_function: macro_definition .

    $default  reduce using rule 10 (macro_or_native_function)


State 51

   68 macro_definition: $@7 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 19 (scope)

    scope       go to state 73
    macro_type  go to state 74
    macrostart  go to state 75


State 52

   56 annotations: annotation annotations .

    $default  reduce using rule 56 (annotations)


State 53

  230 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 76


State 54

  229 array_size: '[' ']' .

    $default  reduce using rule 229 (array_size)


State 55

  101 assignment_expression: T_ASSIGN . expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    T_IDENT     [reduce using rule 104 (range_expression)]
    T_FUNC      [reduce using rule 104 (range_expression)]
    T_VARIABLE  [reduce using rule 104 (range_expression)]
    '~'         [reduce using rule 104 (range_expression)]
    '+'         [reduce using rule 104 (range_expression)]
    '-'         [reduce using rule 104 (range_expression)]
    '*'         [reduce using rule 104 (range_expression)]
    '['         [reduce using rule 104 (range_expression)]
    '{'         [reduce using rule 104 (range_expression)]
    $default    reduce using rule 104 (range_expression)

    variable_reference      go to state 90
    expression              go to state 91
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 56

   40 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 40 (var_decl)


State 57

  234 integer_literal: T_NUM .

    $default  reduce using rule 234 (integer_literal)


State 58

  233 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 233 (float_literal)


State 59

   28 constant_literal: T_STRING .

    $default  reduce using rule 28 (constant_literal)


State 60

  236 character_literal: T_CHARACTER .

    $default  reduce using rule 236 (character_literal)


State 61

  231 boolean_literal: T_TRUE .

    $default  reduce using rule 231 (boolean_literal)


State 62

  232 boolean_literal: T_FALSE .

    $default  reduce using rule 232 (boolean_literal)


State 63

  235 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 105


State 64

   26 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 25 ($@4)

    $@4  go to state 106


State 65

  240 simple_literal: boolean_literal .

    $default  reduce using rule 240 (simple_literal)


State 66

  238 simple_literal: float_literal .

    $default  reduce using rule 238 (simple_literal)


State 67

  237 simple_literal: integer_literal .

    $default  reduce using rule 237 (simple_literal)


State 68

  239 simple_literal: character_literal .

    $default  reduce using rule 239 (simple_literal)


State 69

   27 constant_literal: simple_literal .

    $default  reduce using rule 27 (constant_literal)


State 70

   58 annotation: T_ANNOTATION $@5 '(' . annotation_values ')'

    T_IDENT   shift, and go to state 107
    T_STRING  shift, and go to state 108

    $default  reduce using rule 62 (annotation_values)

    annotation_value   go to state 109
    annotation_values  go to state 110


State 71

   66 native_function_definition: T_NATIVE $@6 . macrostart

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 19 (scope)

    scope       go to state 73
    macro_type  go to state 74
    macrostart  go to state 111


State 72

    9 macro_or_native_function: native_function_definition ';' .

    $default  reduce using rule 9 (macro_or_native_function)


State 73

   36 macro_type: scope . T_VOID
   37           | scope . type_name

    T_VOID             shift, and go to state 112
    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 113


State 74

   38 macrostart: macro_type . macro_declaration '(' argument_list ')' optional_description

    T_IDENT  shift, and go to state 114
    T_FUNC   shift, and go to state 115

    macro_declaration  go to state 116


State 75

   68 macro_definition: $@7 macrostart . block

    '{'  shift, and go to state 117

    block  go to state 118


State 76

  230 array_size: '[' T_NUM ']' .

    $default  reduce using rule 230 (array_size)


State 77

  115 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 119


State 78

   33 variable_reference: T_IDENT .
  153 value: T_IDENT .
  223 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 33 (variable_reference)
    '('       reduce using rule 223 (function_id_or_pointer)
    $default  reduce using rule 153 (value)


State 79

  154 string: T_STRING .

    $default  reduce using rule 154 (string)


State 80

  207 call_expression: T_FUNC . '(' @23 parameter_list closing_paren

    '('  shift, and go to state 120


State 81

   32 variable_reference: T_VARIABLE .
  150 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 32 (variable_reference)
    $default  reduce using rule 150 (value)


State 82

  116 unary_expression: '!' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 121
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 83

  117 unary_expression: '~' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 122
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 84

  118 unary_expression: '+' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 123
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 85

  119 unary_expression: '-' . variable_reference
  235 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 124
    T_NUM       shift, and go to state 105
    T_VARIABLE  shift, and go to state 125

    variable_reference  go to state 126


State 86

  222 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 124
    T_VARIABLE  shift, and go to state 125

    variable_reference  go to state 127


State 87

  213 array_constructor: '[' . @25 parameter_list ']'

    $default  reduce using rule 212 (@25)

    @25  go to state 128


State 88

  146 binary_expression: '(' . binary_expression ')'
  226 type_cast: '(' . type_name ')'

    T_NEW                    shift, and go to state 77
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 129
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    type_name               go to state 130
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 89

  215 map_constructor: '{' . @26 optional_map_associates '}'

    $default  reduce using rule 214 (@26)

    @26  go to state 131


State 90

  147 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 55

    assignment_expression  go to state 132


State 91

  101 assignment_expression: T_ASSIGN expression .

    $default  reduce using rule 101 (assignment_expression)


State 92

  103 expression: range_expression .

    $default  reduce using rule 103 (expression)


State 93

  120 binary_expression: simple_term .

    $default  reduce using rule 120 (binary_expression)


State 94

  114 simple_term: constructor_expression .

    $default  reduce using rule 114 (simple_term)


State 95

  123 binary_expression: unary_expression .

    $default  reduce using rule 123 (binary_expression)


State 96

  102 expression: binary_expression .
  106 range_expression: binary_expression . T_DOTDOT binary_expression $@10 range_increment
  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 133
    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_DOTDOT       [reduce using rule 102 (expression)]
    T_NMATCH       [reduce using rule 102 (expression)]
    T_NE           [reduce using rule 102 (expression)]
    T_EQ           [reduce using rule 102 (expression)]
    T_SHIFT_LEFT   [reduce using rule 102 (expression)]
    T_SHIFT_RIGHT  [reduce using rule 102 (expression)]
    T_OR           [reduce using rule 102 (expression)]
    T_AND          [reduce using rule 102 (expression)]
    T_LE           [reduce using rule 102 (expression)]
    T_GE           [reduce using rule 102 (expression)]
    T_POWER_TO     [reduce using rule 102 (expression)]
    '&'            [reduce using rule 102 (expression)]
    '|'            [reduce using rule 102 (expression)]
    '^'            [reduce using rule 102 (expression)]
    '~'            [reduce using rule 102 (expression)]
    '<'            [reduce using rule 102 (expression)]
    '>'            [reduce using rule 102 (expression)]
    '+'            [reduce using rule 102 (expression)]
    '-'            [reduce using rule 102 (expression)]
    '*'            [reduce using rule 102 (expression)]
    '/'            [reduce using rule 102 (expression)]
    '%'            [reduce using rule 102 (expression)]
    '['            [reduce using rule 102 (expression)]
    '.'            [reduce using rule 102 (expression)]
    $default       reduce using rule 102 (expression)


State 97

  112 simple_term: value .

    $default  reduce using rule 112 (simple_term)


State 98

  151 value: string .
  155 string: string . T_STRING

    T_STRING  shift, and go to state 157

    $default  reduce using rule 151 (value)


State 99

  113 simple_term: call_expression .

    $default  reduce using rule 113 (simple_term)


State 100

  210 call_expression: array_constructor .

    $default  reduce using rule 210 (call_expression)


State 101

  211 call_expression: map_constructor .

    $default  reduce using rule 211 (call_expression)


State 102

  209 call_expression: function_id_or_pointer . '(' @24 parameter_list closing_paren

    '('  shift, and go to state 158


State 103

  121 binary_expression: type_cast . simple_term

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 159
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 160
    '-'                      shift, and go to state 63
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '{'                      shift, and go to state 89

    simple_term             go to state 161
    constructor_expression  go to state 94
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 104

  152 value: simple_literal .

    $default  reduce using rule 152 (value)


State 105

  235 integer_literal: '-' T_NUM .

    $default  reduce using rule 235 (integer_literal)


State 106

   26 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 26 (constdef)


State 107

   59 annotation_value: T_IDENT . T_ASSIGN T_STRING
   60                 | T_IDENT .

    T_ASSIGN  shift, and go to state 162

    $default  reduce using rule 60 (annotation_value)


State 108

   61 annotation_value: T_STRING .

    $default  reduce using rule 61 (annotation_value)


State 109

   63 annotation_values: annotation_value .
   64                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 163

    $default  reduce using rule 63 (annotation_values)


State 110

   58 annotation: T_ANNOTATION $@5 '(' annotation_values . ')'

    ')'  shift, and go to state 164


State 111

   66 native_function_definition: T_NATIVE $@6 macrostart .

    $default  reduce using rule 66 (native_function_definition)


State 112

   36 macro_type: scope T_VOID .

    $default  reduce using rule 36 (macro_type)


State 113

   37 macro_type: scope type_name .

    $default  reduce using rule 37 (macro_type)


State 114

   34 macro_declaration: T_IDENT .

    $default  reduce using rule 34 (macro_declaration)


State 115

   35 macro_declaration: T_FUNC .

    $default  reduce using rule 35 (macro_declaration)


State 116

   38 macrostart: macro_type macro_declaration . '(' argument_list ')' optional_description

    '('  shift, and go to state 165


State 117

   69 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 70 (var_decls)

    var_decls  go to state 166


State 118

   68 macro_definition: $@7 macrostart block .

    $default  reduce using rule 68 (macro_definition)


State 119

  115 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 167


State 120

  207 call_expression: T_FUNC '(' . @23 parameter_list closing_paren

    $default  reduce using rule 206 (@23)

    @23  go to state 168


State 121

  116 unary_expression: '!' binary_expression .
  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 116 (unary_expression)


State 122

  117 unary_expression: '~' binary_expression .
  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 117 (unary_expression)


State 123

  118 unary_expression: '+' binary_expression .
  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    $default  reduce using rule 118 (unary_expression)


State 124

   33 variable_reference: T_IDENT .

    $default  reduce using rule 33 (variable_reference)


State 125

   32 variable_reference: T_VARIABLE .

    $default  reduce using rule 32 (variable_reference)


State 126

  119 unary_expression: '-' variable_reference .

    $default  reduce using rule 119 (unary_expression)


State 127

  222 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 222 (function_id_or_pointer)


State 128

  213 array_constructor: '[' @25 . parameter_list ']'

    error                    shift, and go to state 169
    T_NEW                    shift, and go to state 77
    T_ELLIPSIS               shift, and go to state 170
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    ','  reduce using rule 104 (range_expression)
    ']'  reduce using rule 48 (parameter_list)
    ']'  [reduce using rule 104 (range_expression)]

    variable_reference      go to state 90
    parameter_list          go to state 171
    non_empty_parameters    go to state 172
    expression              go to state 173
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    parameter               go to state 174
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 129

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression
  146                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156
    ')'            shift, and go to state 175


State 130

  226 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 176


State 131

  215 map_constructor: '{' @26 . optional_map_associates '}'

    T_STRING  shift, and go to state 177

    $default  reduce using rule 216 (optional_map_associates)

    optional_map_associates  go to state 178
    map_associates           go to state 179
    map_associate            go to state 180


State 132

  147 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 147 (binary_expression)


State 133

  106 range_expression: binary_expression T_DOTDOT . binary_expression $@10 range_increment

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 181
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 134

  126 binary_expression: binary_expression T_NMATCH . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 182
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 135

  145 binary_expression: binary_expression T_NE . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 183
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 136

  144 binary_expression: binary_expression T_EQ . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 184
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 137

  135 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 185
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 138

  136 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 186
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 139

  139 binary_expression: binary_expression T_OR . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 187
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 140

  138 binary_expression: binary_expression T_AND . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 188
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 141

  142 binary_expression: binary_expression T_LE . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 189
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 142

  143 binary_expression: binary_expression T_GE . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 190
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 143

  137 binary_expression: binary_expression T_POWER_TO . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 191
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 144

  127 binary_expression: binary_expression '&' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 192
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 145

  128 binary_expression: binary_expression '|' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 193
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 146

  130 binary_expression: binary_expression '^' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 194
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 147

  125 binary_expression: binary_expression '~' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 195
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 148

  140 binary_expression: binary_expression '<' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 196
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 149

  141 binary_expression: binary_expression '>' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 197
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 150

  129 binary_expression: binary_expression '+' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 198
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 151

  131 binary_expression: binary_expression '-' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 199
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 152

  132 binary_expression: binary_expression '*' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 200
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 153

  133 binary_expression: binary_expression '/' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 201
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 154

  134 binary_expression: binary_expression '%' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 202
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 155

  124 binary_expression: binary_expression '[' . expression ']'

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 104 (range_expression)

    variable_reference      go to state 90
    expression              go to state 203
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 156

  122 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 204


State 157

  155 string: string T_STRING .

    $default  reduce using rule 155 (string)


State 158

  209 call_expression: function_id_or_pointer '(' . @24 parameter_list closing_paren

    $default  reduce using rule 208 (@24)

    @24  go to state 205


State 159

  153 value: T_IDENT .
  223 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 223 (function_id_or_pointer)
    $default  reduce using rule 153 (value)


State 160

  150 value: T_VARIABLE .

    $default  reduce using rule 150 (value)


State 161

  121 binary_expression: type_cast simple_term .

    $default  reduce using rule 121 (binary_expression)


State 162

   59 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 206


State 163

   64 annotation_values: annotation_value ',' . annotation_values

    T_IDENT   shift, and go to state 107
    T_STRING  shift, and go to state 108

    $default  reduce using rule 62 (annotation_values)

    annotation_value   go to state 109
    annotation_values  go to state 207


State 164

   58 annotation: T_ANNOTATION $@5 '(' annotation_values ')' .

    $default  reduce using rule 58 (annotation)


State 165

   38 macrostart: macro_type macro_declaration '(' . argument_list ')' optional_description

    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_ELLIPSIS         shift, and go to state 208

    $default  reduce using rule 44 (argument_list)

    argument_list         go to state 209
    non_empty_arguments   go to state 210
    argument_declaration  go to state 211
    type_name             go to state 212


State 166

   69 block: '{' var_decls . stmntlist closing_brace
   71 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 213
    T_FOR              shift, and go to state 214
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 215
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 216
    T_WHILE            shift, and go to state 217
    T_GOTO             shift, and go to state 218
    T_SWITCH           shift, and go to state 219
    T_BREAK            shift, and go to state 220
    T_CONTINUE         shift, and go to state 221
    T_RETURN           shift, and go to state 222
    T_VARIABLE         shift, and go to state 125
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 223
    '{'                shift, and go to state 224

    '}'  reduce using rule 203 (stmntlist)

    variable_reference      go to state 225
    var_decl                go to state 226
    block                   go to state 227
    statement               go to state 228
    assignment              go to state 229
    shorthand_assignment    go to state 230
    assignment_target       go to state 231
    increment_expression    go to state 232
    break                   go to state 233
    continue                go to state 234
    return_expression       go to state 235
    label                   go to state 236
    goto_expression         go to state 237
    switch_expression       go to state 238
    for_loop_expression     go to state 239
    while                   go to state 240
    if_expression           go to state 241
    stmntlist               go to state 242
    call_expression         go to state 243
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 167

  115 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 244


State 168

  207 call_expression: T_FUNC '(' @23 . parameter_list closing_paren

    error                    shift, and go to state 169
    T_NEW                    shift, and go to state 77
    T_ELLIPSIS               shift, and go to state 170
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    ','  reduce using rule 104 (range_expression)
    ')'  reduce using rule 48 (parameter_list)
    ')'  [reduce using rule 104 (range_expression)]

    variable_reference      go to state 90
    parameter_list          go to state 245
    non_empty_parameters    go to state 172
    expression              go to state 173
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    parameter               go to state 174
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 169

   52 non_empty_parameters: error .

    $default  reduce using rule 52 (non_empty_parameters)


State 170

  225 parameter: T_ELLIPSIS . expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 104 (range_expression)

    variable_reference      go to state 90
    expression              go to state 246
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 171

  213 array_constructor: '[' @25 parameter_list . ']'

    ']'  shift, and go to state 247


State 172

   49 parameter_list: non_empty_parameters .
   51 non_empty_parameters: non_empty_parameters . ',' parameter

    ','  shift, and go to state 248

    $default  reduce using rule 49 (parameter_list)


State 173

  224 parameter: expression .

    $default  reduce using rule 224 (parameter)


State 174

   50 non_empty_parameters: parameter .

    $default  reduce using rule 50 (non_empty_parameters)


State 175

  146 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 146 (binary_expression)


State 176

  226 type_cast: '(' type_name ')' .

    $default  reduce using rule 226 (type_cast)


State 177

  221 map_associate: T_STRING . ':' @27 value

    ':'  shift, and go to state 249


State 178

  215 map_constructor: '{' @26 optional_map_associates . '}'

    '}'  shift, and go to state 250


State 179

  217 optional_map_associates: map_associates .
  219 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 251

    $default  reduce using rule 217 (optional_map_associates)


State 180

  218 map_associates: map_associate .

    $default  reduce using rule 218 (map_associates)


State 181

  106 range_expression: binary_expression T_DOTDOT binary_expression . $@10 range_increment
  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NMATCH       [reduce using rule 105 ($@10)]
    T_NE           [reduce using rule 105 ($@10)]
    T_EQ           [reduce using rule 105 ($@10)]
    T_SHIFT_LEFT   [reduce using rule 105 ($@10)]
    T_SHIFT_RIGHT  [reduce using rule 105 ($@10)]
    T_OR           [reduce using rule 105 ($@10)]
    T_AND          [reduce using rule 105 ($@10)]
    T_LE           [reduce using rule 105 ($@10)]
    T_GE           [reduce using rule 105 ($@10)]
    T_POWER_TO     [reduce using rule 105 ($@10)]
    '&'            [reduce using rule 105 ($@10)]
    '|'            [reduce using rule 105 ($@10)]
    '^'            [reduce using rule 105 ($@10)]
    '~'            [reduce using rule 105 ($@10)]
    '<'            [reduce using rule 105 ($@10)]
    '>'            [reduce using rule 105 ($@10)]
    '+'            [reduce using rule 105 ($@10)]
    '-'            [reduce using rule 105 ($@10)]
    '*'            [reduce using rule 105 ($@10)]
    '/'            [reduce using rule 105 ($@10)]
    '%'            [reduce using rule 105 ($@10)]
    '['            [reduce using rule 105 ($@10)]
    '.'            [reduce using rule 105 ($@10)]
    $default       reduce using rule 105 ($@10)

    $@10  go to state 252


State 182

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression T_NMATCH binary_expression .
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 126 (binary_expression)


State 183

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression
  145                  | binary_expression T_NE binary_expression .

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 145 (binary_expression)


State 184

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression T_EQ binary_expression .
  145                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 144 (binary_expression)


State 185

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression T_SHIFT_LEFT binary_expression .
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '+'         shift, and go to state 150
    '-'         shift, and go to state 151
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    $default  reduce using rule 135 (binary_expression)


State 186

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression T_SHIFT_RIGHT binary_expression .
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '+'         shift, and go to state 150
    '-'         shift, and go to state 151
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    $default  reduce using rule 136 (binary_expression)


State 187

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  139                  | binary_expression T_OR binary_expression .
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 139 (binary_expression)


State 188

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  138                  | binary_expression T_AND binary_expression .
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 138 (binary_expression)


State 189

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  142                  | binary_expression T_LE binary_expression .
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_POWER_TO     shift, and go to state 143
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 142 (binary_expression)


State 190

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  143                  | binary_expression T_GE binary_expression .
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_POWER_TO     shift, and go to state 143
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 143 (binary_expression)


State 191

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression T_POWER_TO binary_expression .
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 137 (binary_expression)


State 192

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  127                  | binary_expression '&' binary_expression .
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 127 (binary_expression)


State 193

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  128                  | binary_expression '|' binary_expression .
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 128 (binary_expression)


State 194

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  130                  | binary_expression '^' binary_expression .
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 130 (binary_expression)


State 195

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  125                  | binary_expression '~' binary_expression .
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 125 (binary_expression)


State 196

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  140                  | binary_expression '<' binary_expression .
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_POWER_TO     shift, and go to state 143
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 140 (binary_expression)


State 197

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  141                  | binary_expression '>' binary_expression .
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_POWER_TO     shift, and go to state 143
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 141 (binary_expression)


State 198

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  129                  | binary_expression '+' binary_expression .
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    $default  reduce using rule 129 (binary_expression)


State 199

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  131                  | binary_expression '-' binary_expression .
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 143
    '*'         shift, and go to state 152
    '/'         shift, and go to state 153
    '%'         shift, and go to state 154
    '['         shift, and go to state 155
    '.'         shift, and go to state 156

    $default  reduce using rule 131 (binary_expression)


State 200

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  132                  | binary_expression '*' binary_expression .
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 132 (binary_expression)


State 201

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  133                  | binary_expression '/' binary_expression .
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 133 (binary_expression)


State 202

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  134                  | binary_expression '%' binary_expression .
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 134 (binary_expression)


State 203

  124 binary_expression: binary_expression '[' expression . ']'

    ']'  shift, and go to state 253


State 204

  122 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 122 (binary_expression)


State 205

  209 call_expression: function_id_or_pointer '(' @24 . parameter_list closing_paren

    error                    shift, and go to state 169
    T_NEW                    shift, and go to state 77
    T_ELLIPSIS               shift, and go to state 170
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    ','  reduce using rule 104 (range_expression)
    ')'  reduce using rule 48 (parameter_list)
    ')'  [reduce using rule 104 (range_expression)]

    variable_reference      go to state 90
    parameter_list          go to state 254
    non_empty_parameters    go to state 172
    expression              go to state 173
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    parameter               go to state 174
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 206

   59 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 59 (annotation_value)


State 207

   64 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 64 (annotation_values)


State 208

   54 argument_declaration: T_ELLIPSIS .

    $default  reduce using rule 54 (argument_declaration)


State 209

   38 macrostart: macro_type macro_declaration '(' argument_list . ')' optional_description

    ')'  shift, and go to state 255


State 210

   45 argument_list: non_empty_arguments .
   47 non_empty_arguments: non_empty_arguments . ',' argument_declaration

    ','  shift, and go to state 256

    $default  reduce using rule 45 (argument_list)


State 211

   46 non_empty_arguments: argument_declaration .

    $default  reduce using rule 46 (non_empty_arguments)


State 212

   53 argument_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 257


State 213

   87 statement: error . ';'

    ';'  shift, and go to state 258


State 214

  176 for_loop_expression: T_FOR . for_clause $@12 local_block

    error  shift, and go to state 259
    '('    shift, and go to state 260

    for_to_clause  go to state 261
    for_clause     go to state 262
    in_clause      go to state 263


State 215

   33 variable_reference: T_IDENT .
  171 label: T_IDENT . ':'
  223 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 264

    '('       reduce using rule 223 (function_id_or_pointer)
    $default  reduce using rule 33 (variable_reference)


State 216

  199 if_expression: T_IF . condition $@20 local_block $@21 else_clause

    '('  shift, and go to state 265

    condition  go to state 266


State 217

  193 while: T_WHILE . $@18 condition $@19 local_block

    $default  reduce using rule 191 ($@18)

    $@18  go to state 267


State 218

  172 goto_expression: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 268


State 219

  174 switch_expression: T_SWITCH . '(' value ')' $@11 '{' case_clauses '}'

    '('  shift, and go to state 269


State 220

  156 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 270

    $default  reduce using rule 161 (opt_num)

    opt_num  go to state 271


State 221

  157 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 270

    $default  reduce using rule 161 (opt_num)

    opt_num  go to state 272


State 222

  158 return_expression: T_RETURN . optional_bterm

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 159 (optional_bterm)

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 273
    value                   go to state 97
    string                  go to state 98
    optional_bterm          go to state 274
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 223

   72 statement: ';' .

    $default  reduce using rule 72 (statement)


State 224

   69 block: '{' . var_decls stmntlist closing_brace
  215 map_constructor: '{' . @26 optional_map_associates '}'

    T_STRING  reduce using rule 214 (@26)
    '}'       reduce using rule 70 (var_decls)
    '}'       [reduce using rule 214 (@26)]
    $default  reduce using rule 70 (var_decls)

    var_decls  go to state 166
    @26        go to state 131


State 225

   88 assignment: variable_reference . assignment_expression
   94 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator expression
   95 assignment_target: variable_reference .
  111 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 275
    T_MINUSMINUS  shift, and go to state 276
    T_ASSIGN      shift, and go to state 55

    '['       reduce using rule 95 (assignment_target)
    '.'       reduce using rule 95 (assignment_target)
    $default  reduce using rule 93 ($@9)

    $@9                    go to state 277
    assignment_expression  go to state 278
    minusminus_plusplus    go to state 279


State 226

   71 var_decls: var_decls var_decl . ';'
   86 statement: var_decl .

    ';'  shift, and go to state 280

    ';'       [reduce using rule 86 (statement)]
    $default  reduce using rule 86 (statement)


State 227

   83 statement: block .

    $default  reduce using rule 83 (statement)


State 228

  204 stmntlist: statement . stmntlist

    error              shift, and go to state 213
    T_FOR              shift, and go to state 214
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 215
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 216
    T_WHILE            shift, and go to state 217
    T_GOTO             shift, and go to state 218
    T_SWITCH           shift, and go to state 219
    T_BREAK            shift, and go to state 220
    T_CONTINUE         shift, and go to state 221
    T_RETURN           shift, and go to state 222
    T_VARIABLE         shift, and go to state 125
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 223
    '{'                shift, and go to state 224

    T_CASE     reduce using rule 203 (stmntlist)
    T_DEFAULT  reduce using rule 203 (stmntlist)
    '}'        reduce using rule 203 (stmntlist)

    variable_reference      go to state 225
    var_decl                go to state 281
    block                   go to state 227
    statement               go to state 228
    assignment              go to state 229
    shorthand_assignment    go to state 230
    assignment_target       go to state 231
    increment_expression    go to state 232
    break                   go to state 233
    continue                go to state 234
    return_expression       go to state 235
    label                   go to state 236
    goto_expression         go to state 237
    switch_expression       go to state 238
    for_loop_expression     go to state 239
    while                   go to state 240
    if_expression           go to state 241
    stmntlist               go to state 282
    call_expression         go to state 243
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 229

   74 statement: assignment . ';'

    ';'  shift, and go to state 283


State 230

   92 assignment: shorthand_assignment .

    $default  reduce using rule 92 (assignment)


State 231

   90 assignment: assignment_target . '.' T_IDENT $@8 assignment_expression
   91           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 284
    '.'  shift, and go to state 285


State 232

   84 statement: increment_expression . ';'

    ';'  shift, and go to state 286


State 233

   79 statement: break .

    $default  reduce using rule 79 (statement)


State 234

   80 statement: continue .

    $default  reduce using rule 80 (statement)


State 235

   81 statement: return_expression . ';'

    ';'  shift, and go to state 287


State 236

   85 statement: label .

    $default  reduce using rule 85 (statement)


State 237

   82 statement: goto_expression . ';'

    ';'  shift, and go to state 288


State 238

   78 statement: switch_expression .

    $default  reduce using rule 78 (statement)


State 239

   77 statement: for_loop_expression .

    $default  reduce using rule 77 (statement)


State 240

   76 statement: while .

    $default  reduce using rule 76 (statement)


State 241

   75 statement: if_expression .

    $default  reduce using rule 75 (statement)


State 242

   69 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 289

    closing_brace  go to state 290


State 243

   73 statement: call_expression . ';'

    ';'  shift, and go to state 291


State 244

  115 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 115 (constructor_expression)


State 245

  207 call_expression: T_FUNC '(' @23 parameter_list . closing_paren

    ')'  shift, and go to state 292

    closing_paren  go to state 293


State 246

  225 parameter: T_ELLIPSIS expression .

    $default  reduce using rule 225 (parameter)


State 247

  213 array_constructor: '[' @25 parameter_list ']' .

    $default  reduce using rule 213 (array_constructor)


State 248

   51 non_empty_parameters: non_empty_parameters ',' . parameter

    T_NEW                    shift, and go to state 77
    T_ELLIPSIS               shift, and go to state 170
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 104 (range_expression)

    variable_reference      go to state 90
    expression              go to state 173
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    parameter               go to state 294
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 249

  221 map_associate: T_STRING ':' . @27 value

    $default  reduce using rule 220 (@27)

    @27  go to state 295


State 250

  215 map_constructor: '{' @26 optional_map_associates '}' .

    $default  reduce using rule 215 (map_constructor)


State 251

  219 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 177

    map_associate  go to state 296


State 252

  106 range_expression: binary_expression T_DOTDOT binary_expression $@10 . range_increment

    T_DOTDOT  shift, and go to state 297

    T_DOTDOT  [reduce using rule 107 (range_increment)]
    $default  reduce using rule 107 (range_increment)

    range_increment  go to state 298


State 253

  124 binary_expression: binary_expression '[' expression ']' .

    $default  reduce using rule 124 (binary_expression)


State 254

  209 call_expression: function_id_or_pointer '(' @24 parameter_list . closing_paren

    ')'  shift, and go to state 292

    closing_paren  go to state 299


State 255

   38 macrostart: macro_type macro_declaration '(' argument_list ')' . optional_description

    T_STRING  shift, and go to state 300

    $default  reduce using rule 42 (optional_description)

    optional_description  go to state 301


State 256

   47 non_empty_arguments: non_empty_arguments ',' . argument_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_ELLIPSIS         shift, and go to state 208

    argument_declaration  go to state 302
    type_name             go to state 212


State 257

   53 argument_declaration: type_name variable_identifier .

    $default  reduce using rule 53 (argument_declaration)


State 258

   87 statement: error ';' .

    $default  reduce using rule 87 (statement)


State 259

  188 for_clause: error .

    $default  reduce using rule 188 (for_clause)


State 260

  182 for_to_clause: '(' . opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'
  190 in_clause: '(' . type_name variable_identifier $@17 ':' expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 25

    $default  reduce using rule 183 (opt_for_initializer)

    opt_for_initializer  go to state 303
    type_name            go to state 304


State 261

  186 for_clause: for_to_clause .

    $default  reduce using rule 186 (for_clause)


State 262

  176 for_loop_expression: T_FOR for_clause . $@12 local_block

    $default  reduce using rule 175 ($@12)

    $@12  go to state 305


State 263

  187 for_clause: in_clause .

    $default  reduce using rule 187 (for_clause)


State 264

  171 label: T_IDENT ':' .

    $default  reduce using rule 171 (label)


State 265

  148 condition: '(' . binary_expression ')'
  149          | '(' . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 306
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 266

  199 if_expression: T_IF condition . $@20 local_block $@21 else_clause

    $default  reduce using rule 197 ($@20)

    $@20  go to state 307


State 267

  193 while: T_WHILE $@18 . condition $@19 local_block

    '('  shift, and go to state 265

    condition  go to state 308


State 268

  172 goto_expression: T_GOTO T_IDENT .

    $default  reduce using rule 172 (goto_expression)


State 269

  174 switch_expression: T_SWITCH '(' . value ')' $@11 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 309
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_VARIABLE               shift, and go to state 160
    '-'                      shift, and go to state 63

    value              go to state 310
    string             go to state 98
    boolean_literal    go to state 65
    float_literal      go to state 66
    integer_literal    go to state 67
    character_literal  go to state 68
    simple_literal     go to state 104


State 270

  162 opt_num: T_NUM .

    $default  reduce using rule 162 (opt_num)


State 271

  156 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 311


State 272

  157 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 312


State 273

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression
  160 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156

    $default  reduce using rule 160 (optional_bterm)


State 274

  158 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 158 (return_expression)


State 275

  110 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 110 (minusminus_plusplus)


State 276

  109 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 109 (minusminus_plusplus)


State 277

   94 shorthand_assignment: variable_reference $@9 . shorthand_assignment_operator expression

    T_SH_ASSIGN_PLUS   shift, and go to state 313
    T_SH_ASSIGN_MINUS  shift, and go to state 314
    T_SH_ASSIGN_MULT   shift, and go to state 315
    T_SH_ASSIGN_DIV    shift, and go to state 316
    T_SH_ASSIGN_MOD    shift, and go to state 317

    shorthand_assignment_operator  go to state 318


State 278

   88 assignment: variable_reference assignment_expression .

    $default  reduce using rule 88 (assignment)


State 279

  111 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 111 (increment_expression)


State 280

   71 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 71 (var_decls)


State 281

   86 statement: var_decl .

    $default  reduce using rule 86 (statement)


State 282

  204 stmntlist: statement stmntlist .

    $default  reduce using rule 204 (stmntlist)


State 283

   74 statement: assignment ';' .

    $default  reduce using rule 74 (statement)


State 284

   91 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 319
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 285

   90 assignment: assignment_target '.' . T_IDENT $@8 assignment_expression

    T_IDENT  shift, and go to state 320


State 286

   84 statement: increment_expression ';' .

    $default  reduce using rule 84 (statement)


State 287

   81 statement: return_expression ';' .

    $default  reduce using rule 81 (statement)


State 288

   82 statement: goto_expression ';' .

    $default  reduce using rule 82 (statement)


State 289

  196 closing_brace: '}' .

    $default  reduce using rule 196 (closing_brace)


State 290

   69 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 69 (block)


State 291

   73 statement: call_expression ';' .

    $default  reduce using rule 73 (statement)


State 292

  205 closing_paren: ')' .

    $default  reduce using rule 205 (closing_paren)


State 293

  207 call_expression: T_FUNC '(' @23 parameter_list closing_paren .

    $default  reduce using rule 207 (call_expression)


State 294

   51 non_empty_parameters: non_empty_parameters ',' parameter .

    $default  reduce using rule 51 (non_empty_parameters)


State 295

  221 map_associate: T_STRING ':' @27 . value

    T_IDENT                  shift, and go to state 309
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_VARIABLE               shift, and go to state 160
    '-'                      shift, and go to state 63

    value              go to state 321
    string             go to state 98
    boolean_literal    go to state 65
    float_literal      go to state 66
    integer_literal    go to state 67
    character_literal  go to state 68
    simple_literal     go to state 104


State 296

  219 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 219 (map_associates)


State 297

  108 range_increment: T_DOTDOT . binary_expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 322
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 298

  106 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment .

    $default  reduce using rule 106 (range_expression)


State 299

  209 call_expression: function_id_or_pointer '(' @24 parameter_list closing_paren .

    $default  reduce using rule 209 (call_expression)


State 300

   43 optional_description: T_STRING .

    $default  reduce using rule 43 (optional_description)


State 301

   38 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description .

    $default  reduce using rule 38 (macrostart)


State 302

   47 non_empty_arguments: non_empty_arguments ',' argument_declaration .

    $default  reduce using rule 47 (non_empty_arguments)


State 303

  182 for_to_clause: '(' opt_for_initializer . $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'

    $default  reduce using rule 179 ($@13)

    $@13  go to state 323


State 304

  185 opt_for_initializer: type_name . variable_identifier $@16 assignment_expression
  190 in_clause: '(' type_name . variable_identifier $@17 ':' expression ')'

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 324


State 305

  176 for_loop_expression: T_FOR for_clause $@12 . local_block

    error              shift, and go to state 213
    T_FOR              shift, and go to state 214
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 215
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 216
    T_WHILE            shift, and go to state 217
    T_GOTO             shift, and go to state 218
    T_SWITCH           shift, and go to state 219
    T_BREAK            shift, and go to state 220
    T_CONTINUE         shift, and go to state 221
    T_RETURN           shift, and go to state 222
    T_VARIABLE         shift, and go to state 125
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 223
    '{'                shift, and go to state 325

    variable_reference      go to state 225
    var_decl                go to state 281
    block                   go to state 227
    statement               go to state 326
    assignment              go to state 229
    shorthand_assignment    go to state 230
    assignment_target       go to state 231
    increment_expression    go to state 232
    break                   go to state 233
    continue                go to state 234
    return_expression       go to state 235
    label                   go to state 236
    goto_expression         go to state 237
    switch_expression       go to state 238
    for_loop_expression     go to state 239
    while                   go to state 240
    local_block             go to state 327
    if_expression           go to state 241
    call_expression         go to state 243
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 306

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression
  148 condition: '(' binary_expression . ')'
  149          | '(' binary_expression .

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156
    ')'            shift, and go to state 328

    '*'       [reduce using rule 149 (condition)]
    '['       [reduce using rule 149 (condition)]
    $default  reduce using rule 149 (condition)


State 307

  199 if_expression: T_IF condition $@20 . local_block $@21 else_clause

    error              shift, and go to state 213
    T_FOR              shift, and go to state 214
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 215
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 216
    T_WHILE            shift, and go to state 217
    T_GOTO             shift, and go to state 218
    T_SWITCH           shift, and go to state 219
    T_BREAK            shift, and go to state 220
    T_CONTINUE         shift, and go to state 221
    T_RETURN           shift, and go to state 222
    T_VARIABLE         shift, and go to state 125
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 223
    '{'                shift, and go to state 325

    variable_reference      go to state 225
    var_decl                go to state 281
    block                   go to state 227
    statement               go to state 326
    assignment              go to state 229
    shorthand_assignment    go to state 230
    assignment_target       go to state 231
    increment_expression    go to state 232
    break                   go to state 233
    continue                go to state 234
    return_expression       go to state 235
    label                   go to state 236
    goto_expression         go to state 237
    switch_expression       go to state 238
    for_loop_expression     go to state 239
    while                   go to state 240
    local_block             go to state 329
    if_expression           go to state 241
    call_expression         go to state 243
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 308

  193 while: T_WHILE $@18 condition . $@19 local_block

    $default  reduce using rule 192 ($@19)

    $@19  go to state 330


State 309

  153 value: T_IDENT .

    $default  reduce using rule 153 (value)


State 310

  174 switch_expression: T_SWITCH '(' value . ')' $@11 '{' case_clauses '}'

    ')'  shift, and go to state 331


State 311

  156 break: T_BREAK opt_num ';' .

    $default  reduce using rule 156 (break)


State 312

  157 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 157 (continue)


State 313

   99 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 99 (shorthand_assignment_operator)


State 314

  100 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 100 (shorthand_assignment_operator)


State 315

   96 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 96 (shorthand_assignment_operator)


State 316

   97 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 97 (shorthand_assignment_operator)


State 317

   98 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 98 (shorthand_assignment_operator)


State 318

   94 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator . expression

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 104 (range_expression)

    variable_reference      go to state 90
    expression              go to state 332
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 319

   91 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156
    ']'            shift, and go to state 333


State 320

   90 assignment: assignment_target '.' T_IDENT . $@8 assignment_expression

    $default  reduce using rule 89 ($@8)

    $@8  go to state 334


State 321

  221 map_associate: T_STRING ':' @27 value .

    $default  reduce using rule 221 (map_associate)


State 322

  108 range_increment: T_DOTDOT binary_expression .
  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 108 (range_increment)


State 323

  182 for_to_clause: '(' opt_for_initializer $@13 . ';' binary_expression ';' $@14 for_increment $@15 ')'

    ';'  shift, and go to state 335


State 324

  185 opt_for_initializer: type_name variable_identifier . $@16 assignment_expression
  190 in_clause: '(' type_name variable_identifier . $@17 ':' expression ')'

    ':'       reduce using rule 189 ($@17)
    $default  reduce using rule 184 ($@16)

    $@16  go to state 336
    $@17  go to state 337


State 325

   69 block: '{' . var_decls stmntlist closing_brace
  195 local_block: '{' . stmntlist closing_brace
  215 map_constructor: '{' . @26 optional_map_associates '}'

    error              shift, and go to state 213
    T_FOR              shift, and go to state 214
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 215
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 216
    T_WHILE            shift, and go to state 217
    T_GOTO             shift, and go to state 218
    T_SWITCH           shift, and go to state 219
    T_BREAK            shift, and go to state 220
    T_CONTINUE         shift, and go to state 221
    T_RETURN           shift, and go to state 222
    T_VARIABLE         shift, and go to state 125
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 223
    '{'                shift, and go to state 224

    error              [reduce using rule 70 (var_decls)]
    T_FOR              [reduce using rule 70 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 70 (var_decls)]
    T_IDENT            [reduce using rule 70 (var_decls)]
    T_STRING           reduce using rule 214 (@26)
    T_FUNC             [reduce using rule 70 (var_decls)]
    T_IF               [reduce using rule 70 (var_decls)]
    T_WHILE            [reduce using rule 70 (var_decls)]
    T_GOTO             [reduce using rule 70 (var_decls)]
    T_SWITCH           [reduce using rule 70 (var_decls)]
    T_BREAK            [reduce using rule 70 (var_decls)]
    T_CONTINUE         [reduce using rule 70 (var_decls)]
    T_RETURN           [reduce using rule 70 (var_decls)]
    T_VARIABLE         [reduce using rule 70 (var_decls)]
    '*'                [reduce using rule 70 (var_decls)]
    '['                [reduce using rule 70 (var_decls)]
    ';'                [reduce using rule 70 (var_decls)]
    '{'                [reduce using rule 70 (var_decls)]
    '}'                reduce using rule 70 (var_decls)
    '}'                [reduce using rule 203 (stmntlist)]
    '}'                [reduce using rule 214 (@26)]

    variable_reference      go to state 225
    var_decl                go to state 281
    block                   go to state 227
    var_decls               go to state 166
    statement               go to state 228
    assignment              go to state 229
    shorthand_assignment    go to state 230
    assignment_target       go to state 231
    increment_expression    go to state 232
    break                   go to state 233
    continue                go to state 234
    return_expression       go to state 235
    label                   go to state 236
    goto_expression         go to state 237
    switch_expression       go to state 238
    for_loop_expression     go to state 239
    while                   go to state 240
    if_expression           go to state 241
    stmntlist               go to state 338
    call_expression         go to state 243
    array_constructor       go to state 100
    map_constructor         go to state 101
    @26                     go to state 131
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 326

  194 local_block: statement .

    $default  reduce using rule 194 (local_block)


State 327

  176 for_loop_expression: T_FOR for_clause $@12 local_block .

    $default  reduce using rule 176 (for_loop_expression)


State 328

  148 condition: '(' binary_expression ')' .

    $default  reduce using rule 148 (condition)


State 329

  199 if_expression: T_IF condition $@20 local_block . $@21 else_clause

    $default  reduce using rule 198 ($@21)

    $@21  go to state 339


State 330

  193 while: T_WHILE $@18 condition $@19 . local_block

    error              shift, and go to state 213
    T_FOR              shift, and go to state 214
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 215
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 216
    T_WHILE            shift, and go to state 217
    T_GOTO             shift, and go to state 218
    T_SWITCH           shift, and go to state 219
    T_BREAK            shift, and go to state 220
    T_CONTINUE         shift, and go to state 221
    T_RETURN           shift, and go to state 222
    T_VARIABLE         shift, and go to state 125
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 223
    '{'                shift, and go to state 325

    variable_reference      go to state 225
    var_decl                go to state 281
    block                   go to state 227
    statement               go to state 326
    assignment              go to state 229
    shorthand_assignment    go to state 230
    assignment_target       go to state 231
    increment_expression    go to state 232
    break                   go to state 233
    continue                go to state 234
    return_expression       go to state 235
    label                   go to state 236
    goto_expression         go to state 237
    switch_expression       go to state 238
    for_loop_expression     go to state 239
    while                   go to state 240
    local_block             go to state 340
    if_expression           go to state 241
    call_expression         go to state 243
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 331

  174 switch_expression: T_SWITCH '(' value ')' . $@11 '{' case_clauses '}'

    $default  reduce using rule 173 ($@11)

    $@11  go to state 341


State 332

   94 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator expression .

    $default  reduce using rule 94 (shorthand_assignment)


State 333

   91 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 55

    assignment_expression  go to state 342


State 334

   90 assignment: assignment_target '.' T_IDENT $@8 . assignment_expression

    T_ASSIGN  shift, and go to state 55

    assignment_expression  go to state 343


State 335

  182 for_to_clause: '(' opt_for_initializer $@13 ';' . binary_expression ';' $@14 for_increment $@15 ')'

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    variable_reference      go to state 90
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 344
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 336

  185 opt_for_initializer: type_name variable_identifier $@16 . assignment_expression

    T_ASSIGN  shift, and go to state 55

    assignment_expression  go to state 345


State 337

  190 in_clause: '(' type_name variable_identifier $@17 . ':' expression ')'

    ':'  shift, and go to state 346


State 338

  195 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 289

    closing_brace  go to state 347


State 339

  199 if_expression: T_IF condition $@20 local_block $@21 . else_clause

    T_ELSE  shift, and go to state 348

    T_ELSE    [reduce using rule 200 (else_clause)]
    $default  reduce using rule 200 (else_clause)

    else_clause  go to state 349


State 340

  193 while: T_WHILE $@18 condition $@19 local_block .

    $default  reduce using rule 193 (while)


State 341

  174 switch_expression: T_SWITCH '(' value ')' $@11 . '{' case_clauses '}'

    '{'  shift, and go to state 350


State 342

   91 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 91 (assignment)


State 343

   90 assignment: assignment_target '.' T_IDENT $@8 assignment_expression .

    $default  reduce using rule 90 (assignment)


State 344

  122 binary_expression: binary_expression . '.' T_IDENT
  124                  | binary_expression . '[' expression ']'
  125                  | binary_expression . '~' binary_expression
  126                  | binary_expression . T_NMATCH binary_expression
  127                  | binary_expression . '&' binary_expression
  128                  | binary_expression . '|' binary_expression
  129                  | binary_expression . '+' binary_expression
  130                  | binary_expression . '^' binary_expression
  131                  | binary_expression . '-' binary_expression
  132                  | binary_expression . '*' binary_expression
  133                  | binary_expression . '/' binary_expression
  134                  | binary_expression . '%' binary_expression
  135                  | binary_expression . T_SHIFT_LEFT binary_expression
  136                  | binary_expression . T_SHIFT_RIGHT binary_expression
  137                  | binary_expression . T_POWER_TO binary_expression
  138                  | binary_expression . T_AND binary_expression
  139                  | binary_expression . T_OR binary_expression
  140                  | binary_expression . '<' binary_expression
  141                  | binary_expression . '>' binary_expression
  142                  | binary_expression . T_LE binary_expression
  143                  | binary_expression . T_GE binary_expression
  144                  | binary_expression . T_EQ binary_expression
  145                  | binary_expression . T_NE binary_expression
  182 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression . ';' $@14 for_increment $@15 ')'

    T_NMATCH       shift, and go to state 134
    T_NE           shift, and go to state 135
    T_EQ           shift, and go to state 136
    T_SHIFT_LEFT   shift, and go to state 137
    T_SHIFT_RIGHT  shift, and go to state 138
    T_OR           shift, and go to state 139
    T_AND          shift, and go to state 140
    T_LE           shift, and go to state 141
    T_GE           shift, and go to state 142
    T_POWER_TO     shift, and go to state 143
    '&'            shift, and go to state 144
    '|'            shift, and go to state 145
    '^'            shift, and go to state 146
    '~'            shift, and go to state 147
    '<'            shift, and go to state 148
    '>'            shift, and go to state 149
    '+'            shift, and go to state 150
    '-'            shift, and go to state 151
    '*'            shift, and go to state 152
    '/'            shift, and go to state 153
    '%'            shift, and go to state 154
    '['            shift, and go to state 155
    '.'            shift, and go to state 156
    ';'            shift, and go to state 351


State 345

  185 opt_for_initializer: type_name variable_identifier $@16 assignment_expression .

    $default  reduce using rule 185 (opt_for_initializer)


State 346

  190 in_clause: '(' type_name variable_identifier $@17 ':' . expression ')'

    T_NEW                    shift, and go to state 77
    T_IDENT                  shift, and go to state 78
    T_NUM                    shift, and go to state 57
    T_FLOATING_POINT_NUMBER  shift, and go to state 58
    T_STRING                 shift, and go to state 79
    T_CHARACTER              shift, and go to state 60
    T_TRUE                   shift, and go to state 61
    T_FALSE                  shift, and go to state 62
    T_FUNC                   shift, and go to state 80
    T_VARIABLE               shift, and go to state 81
    '!'                      shift, and go to state 82
    '~'                      shift, and go to state 83
    '+'                      shift, and go to state 84
    '-'                      shift, and go to state 85
    '*'                      shift, and go to state 86
    '['                      shift, and go to state 87
    '('                      shift, and go to state 88
    '{'                      shift, and go to state 89

    $default  reduce using rule 104 (range_expression)

    variable_reference      go to state 90
    expression              go to state 352
    range_expression        go to state 92
    simple_term             go to state 93
    constructor_expression  go to state 94
    unary_expression        go to state 95
    binary_expression       go to state 96
    value                   go to state 97
    string                  go to state 98
    call_expression         go to state 99
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_cast               go to state 103
    boolean_literal         go to state 65
    float_literal           go to state 66
    integer_literal         go to state 67
    character_literal       go to state 68
    simple_literal          go to state 104


State 347

  195 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 195 (local_block)


State 348

  202 else_clause: T_ELSE . $@22 local_block

    $default  reduce using rule 201 ($@22)

    $@22  go to state 353


State 349

  199 if_expression: T_IF condition $@20 local_block $@21 else_clause .

    $default  reduce using rule 199 (if_expression)


State 350

  174 switch_expression: T_SWITCH '(' value ')' $@11 '{' . case_clauses '}'

    T_CASE     shift, and go to state 354
    T_DEFAULT  shift, and go to state 355

    $default  reduce using rule 163 (case_clauses)

    case_clauses   go to state 356
    case_clause    go to state 357
    case_selector  go to state 358


State 351

  182 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' . $@14 for_increment $@15 ')'

    $default  reduce using rule 180 ($@14)

    $@14  go to state 359


State 352

  190 in_clause: '(' type_name variable_identifier $@17 ':' expression . ')'

    ')'  shift, and go to state 360


State 353

  202 else_clause: T_ELSE $@22 . local_block

    error              shift, and go to state 213
    T_FOR              shift, and go to state 214
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 215
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 216
    T_WHILE            shift, and go to state 217
    T_GOTO             shift, and go to state 218
    T_SWITCH           shift, and go to state 219
    T_BREAK            shift, and go to state 220
    T_CONTINUE         shift, and go to state 221
    T_RETURN           shift, and go to state 222
    T_VARIABLE         shift, and go to state 125
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 223
    '{'                shift, and go to state 325

    variable_reference      go to state 225
    var_decl                go to state 281
    block                   go to state 227
    statement               go to state 326
    assignment              go to state 229
    shorthand_assignment    go to state 230
    assignment_target       go to state 231
    increment_expression    go to state 232
    break                   go to state 233
    continue                go to state 234
    return_expression       go to state 235
    label                   go to state 236
    goto_expression         go to state 237
    switch_expression       go to state 238
    for_loop_expression     go to state 239
    while                   go to state 240
    local_block             go to state 361
    if_expression           go to state 241
    call_expression         go to state 243
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 354

  166 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 362
    T_STRING  shift, and go to state 363
    '-'       shift, and go to state 63

    case_condition   go to state 364
    integer_literal  go to state 365


State 355

  167 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 366


State 356

  174 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses . '}'

    '}'  shift, and go to state 367


State 357

  164 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 354
    T_DEFAULT  shift, and go to state 355

    $default  reduce using rule 163 (case_clauses)

    case_clauses   go to state 368
    case_clause    go to state 357
    case_selector  go to state 358


State 358

  165 case_clause: case_selector . stmntlist

    error              shift, and go to state 213
    T_FOR              shift, and go to state 214
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 215
    T_FUNC             shift, and go to state 80
    T_IF               shift, and go to state 216
    T_WHILE            shift, and go to state 217
    T_GOTO             shift, and go to state 218
    T_SWITCH           shift, and go to state 219
    T_BREAK            shift, and go to state 220
    T_CONTINUE         shift, and go to state 221
    T_RETURN           shift, and go to state 222
    T_VARIABLE         shift, and go to state 125
    '*'                shift, and go to state 86
    '['                shift, and go to state 87
    ';'                shift, and go to state 223
    '{'                shift, and go to state 224

    T_CASE     reduce using rule 203 (stmntlist)
    T_DEFAULT  reduce using rule 203 (stmntlist)
    '}'        reduce using rule 203 (stmntlist)

    variable_reference      go to state 225
    var_decl                go to state 281
    block                   go to state 227
    statement               go to state 228
    assignment              go to state 229
    shorthand_assignment    go to state 230
    assignment_target       go to state 231
    increment_expression    go to state 232
    break                   go to state 233
    continue                go to state 234
    return_expression       go to state 235
    label                   go to state 236
    goto_expression         go to state 237
    switch_expression       go to state 238
    for_loop_expression     go to state 239
    while                   go to state 240
    if_expression           go to state 241
    stmntlist               go to state 369
    call_expression         go to state 243
    array_constructor       go to state 100
    map_constructor         go to state 101
    function_id_or_pointer  go to state 102
    type_name               go to state 27


State 359

  182 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 . for_increment $@15 ')'

    T_IDENT     shift, and go to state 124
    T_VARIABLE  shift, and go to state 125

    variable_reference    go to state 370
    shorthand_assignment  go to state 371
    increment_expression  go to state 372
    for_increment         go to state 373


State 360

  190 in_clause: '(' type_name variable_identifier $@17 ':' expression ')' .

    $default  reduce using rule 190 (in_clause)


State 361

  202 else_clause: T_ELSE $@22 local_block .

    $default  reduce using rule 202 (else_clause)


State 362

  170 case_condition: T_NUM . T_DOTDOT T_NUM
  234 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 374

    $default  reduce using rule 234 (integer_literal)


State 363

  169 case_condition: T_STRING .

    $default  reduce using rule 169 (case_condition)


State 364

  166 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 375


State 365

  168 case_condition: integer_literal .

    $default  reduce using rule 168 (case_condition)


State 366

  167 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 167 (case_selector)


State 367

  174 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses '}' .

    $default  reduce using rule 174 (switch_expression)


State 368

  164 case_clauses: case_clause case_clauses .

    $default  reduce using rule 164 (case_clauses)


State 369

  165 case_clause: case_selector stmntlist .

    $default  reduce using rule 165 (case_clause)


State 370

   94 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator expression
  111 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 275
    T_MINUSMINUS  shift, and go to state 276

    $default  reduce using rule 93 ($@9)

    $@9                  go to state 277
    minusminus_plusplus  go to state 279


State 371

  178 for_increment: shorthand_assignment .

    $default  reduce using rule 178 (for_increment)


State 372

  177 for_increment: increment_expression .

    $default  reduce using rule 177 (for_increment)


State 373

  182 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment . $@15 ')'

    $default  reduce using rule 181 ($@15)

    $@15  go to state 376


State 374

  170 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 377


State 375

  166 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 166 (case_selector)


State 376

  182 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 . ')'

    ')'  shift, and go to state 378


State 377

  170 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 170 (case_condition)


State 378

  182 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')' .

    $default  reduce using rule 182 (for_to_clause)
