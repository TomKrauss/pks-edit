State 13 conflicts: 1 shift/reduce, 1 reduce/reduce
State 79 conflicts: 9 shift/reduce
State 133 conflicts: 24 shift/reduce
State 165 conflicts: 1 reduce/reduce
State 223 conflicts: 1 reduce/reduce
State 225 conflicts: 1 shift/reduce
State 244 conflicts: 1 reduce/reduce
State 257 conflicts: 23 shift/reduce
State 281 conflicts: 1 reduce/reduce
State 328 conflicts: 1 shift/reduce
State 339 conflicts: 2 shift/reduce
State 364 conflicts: 17 shift/reduce, 2 reduce/reduce
State 380 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites $@2 global_declarations header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | element_with_annotations macro_definitions

    8 element_with_annotations: annotations macro_or_native_function

    9 macro_or_native_function: native_function_definition ';'
   10                         | macro_definition

   11 namespace: %empty
   12          | T_NAMESPACE T_IDENT ';'

   13 prerequisites: %empty
   14              | prerequisites require

   15 require: T_REQUIRE T_STRING ';'

   16 global_declarations: %empty
   17                    | global_declarations constants ';'
   18                    | global_declarations global_var ';'
   19                    | global_declarations T_TYPEDEF typedef ';'

   20 typedef: enum_definition
   21        | struct_definition
   22        | native_type_definition

   23 $@3: %empty

   24 struct_definition: T_STRUCT $@3 '{' struct_element_definitions '}' typedef_identifier

   25 $@4: %empty

   26 enum_definition: T_ENUM $@4 '{' enum_value_definitions '}' typedef_identifier

   27 $@5: %empty

   28 native_type_definition: T_NATIVE $@5 typedef_identifier

   29 typedef_identifier: T_IDENT
   30                   | T_TYPE_IDENTIFIER

   31 struct_element_definitions: struct_element
   32                           | struct_element struct_element_definitions

   33 struct_element: type_name variable_identifier ';'

   34 enum_value_definitions: %empty
   35                       | enum_values

   36 enum_values: enum_value
   37            | enum_value ',' enum_values

   38 enum_value: T_IDENT opt_enum_assignment

   39 opt_enum_assignment: %empty
   40                    | T_ASSIGN T_NUM
   41                    | T_ASSIGN '-' T_NUM

   42 scope: %empty
   43      | T_STATIC

   44 constants: T_CONST constant_list

   45 constant_list: constdef
   46              | constant_list ',' constdef

   47 $@6: %empty

   48 $@7: %empty

   49 constdef: $@6 variable_identifier T_ASSIGN constant_literal $@7

   50 constant_literal: simple_literal
   51                 | T_STRING

   52 variable_identifier: T_IDENT
   53                    | T_NUM
   54                    | T_STRING

   55 variable_reference: T_VARIABLE
   56                   | T_IDENT

   57 macro_declaration: T_IDENT
   58                  | T_FUNC

   59 macro_type: scope T_VOID
   60           | scope type_name

   61 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description

   62 global_var: scope var_decl

   63 var_decl: type_name variable_identifier assignment_expression
   64         | type_name variable_identifier

   65 optional_description: %empty
   66                     | T_STRING

   67 argument_list: %empty
   68              | non_empty_arguments

   69 non_empty_arguments: argument_declaration
   70                    | non_empty_arguments ',' argument_declaration

   71 parameter_list: %empty
   72               | non_empty_parameters

   73 non_empty_parameters: parameter
   74                     | non_empty_parameters ',' parameter
   75                     | error

   76 argument_declaration: type_name variable_identifier
   77                     | T_ELLIPSIS

   78 annotations: %empty
   79            | annotation annotations

   80 $@8: %empty

   81 annotation: T_ANNOTATION $@8 '(' annotation_values ')'

   82 annotation_value: T_IDENT T_ASSIGN T_STRING
   83                 | T_IDENT
   84                 | T_STRING

   85 annotation_values: %empty
   86                  | annotation_value
   87                  | annotation_value ',' annotation_values

   88 $@9: %empty

   89 native_function_definition: T_NATIVE $@9 macrostart
   90                           | error

   91 $@10: %empty

   92 macro_definition: $@10 macrostart block

   93 block: '{' var_decls stmntlist closing_brace

   94 var_decls: %empty
   95          | var_decls var_decl ';'

   96 statement: ';'
   97          | call_expression ';'
   98          | assignment ';'
   99          | if_expression
  100          | while
  101          | for_loop_expression
  102          | switch_expression
  103          | break
  104          | continue
  105          | return_expression ';'
  106          | goto_expression ';'
  107          | block
  108          | increment_expression ';'
  109          | label
  110          | var_decl
  111          | error ';'

  112 assignment: variable_reference assignment_expression

  113 $@11: %empty

  114 assignment: assignment_target '.' T_IDENT $@11 assignment_expression
  115           | assignment_target '[' binary_expression ']' assignment_expression
  116           | shorthand_assignment

  117 $@12: %empty

  118 shorthand_assignment: variable_reference $@12 shorthand_assignment_operator expression

  119 assignment_target: variable_reference

  120 shorthand_assignment_operator: T_SH_ASSIGN_MULT
  121                              | T_SH_ASSIGN_DIV
  122                              | T_SH_ASSIGN_MOD
  123                              | T_SH_ASSIGN_PLUS
  124                              | T_SH_ASSIGN_MINUS

  125 assignment_expression: T_ASSIGN expression

  126 expression: binary_expression
  127           | range_expression

  128 range_expression: %empty

  129 $@13: %empty

  130 range_expression: binary_expression T_DOTDOT binary_expression $@13 range_increment

  131 range_increment: %empty
  132                | T_DOTDOT binary_expression

  133 minusminus_plusplus: T_MINUSMINUS
  134                    | T_PLUSPLUS

  135 increment_expression: variable_reference minusminus_plusplus

  136 simple_term: value
  137            | call_expression
  138            | constructor_expression

  139 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  140 unary_expression: '!' binary_expression
  141                 | '~' binary_expression
  142                 | '+' binary_expression
  143                 | '-' variable_reference

  144 binary_expression: simple_term
  145                  | type_cast simple_term
  146                  | binary_expression '.' T_IDENT
  147                  | unary_expression
  148                  | binary_expression '[' expression ']'
  149                  | binary_expression '~' binary_expression
  150                  | binary_expression T_NMATCH binary_expression
  151                  | binary_expression '&' binary_expression
  152                  | binary_expression '|' binary_expression
  153                  | binary_expression '+' binary_expression
  154                  | binary_expression '^' binary_expression
  155                  | binary_expression '-' binary_expression
  156                  | binary_expression '*' binary_expression
  157                  | binary_expression '/' binary_expression
  158                  | binary_expression '%' binary_expression
  159                  | binary_expression T_SHIFT_LEFT binary_expression
  160                  | binary_expression T_SHIFT_RIGHT binary_expression
  161                  | binary_expression T_POWER_TO binary_expression

  162 @14: %empty

  163 binary_expression: binary_expression T_AND @14 binary_expression

  164 @15: %empty

  165 binary_expression: binary_expression T_OR @15 binary_expression
  166                  | binary_expression '<' binary_expression
  167                  | binary_expression '>' binary_expression
  168                  | binary_expression T_LE binary_expression
  169                  | binary_expression T_GE binary_expression
  170                  | binary_expression T_EQ binary_expression
  171                  | binary_expression T_NE binary_expression
  172                  | '(' binary_expression ')'
  173                  | variable_reference assignment_expression

  174 condition: '(' binary_expression ')'
  175          | '(' binary_expression

  176 value: T_VARIABLE
  177      | string
  178      | simple_literal
  179      | T_IDENT

  180 string: T_STRING
  181       | string T_STRING

  182 break: T_BREAK opt_num ';'

  183 continue: T_CONTINUE opt_num ';'

  184 return_expression: T_RETURN optional_bterm

  185 optional_bterm: %empty
  186               | binary_expression

  187 opt_num: %empty
  188        | T_NUM

  189 case_clauses: %empty
  190             | case_clause case_clauses

  191 case_clause: case_selector stmntlist

  192 case_selector: T_CASE case_condition ':'
  193              | T_DEFAULT ':'

  194 case_condition: integer_literal
  195               | T_STRING
  196               | T_NUM T_DOTDOT T_NUM

  197 label: T_IDENT ':'

  198 goto_expression: T_GOTO T_IDENT

  199 $@16: %empty

  200 switch_expression: T_SWITCH '(' value ')' $@16 '{' case_clauses '}'

  201 $@17: %empty

  202 for_loop_expression: T_FOR for_clause $@17 local_block

  203 for_increment: increment_expression
  204              | shorthand_assignment

  205 $@18: %empty

  206 $@19: %empty

  207 $@20: %empty

  208 for_to_clause: '(' opt_for_initializer $@18 ';' binary_expression ';' $@19 for_increment $@20 ')'

  209 opt_for_initializer: %empty

  210 $@21: %empty

  211 opt_for_initializer: type_name variable_identifier $@21 assignment_expression

  212 for_clause: for_to_clause
  213           | in_clause
  214           | error

  215 $@22: %empty

  216 in_clause: '(' type_name variable_identifier $@22 ':' expression ')'

  217 $@23: %empty

  218 $@24: %empty

  219 while: T_WHILE $@23 condition $@24 local_block

  220 local_block: statement
  221            | '{' stmntlist closing_brace

  222 closing_brace: '}'

  223 $@25: %empty

  224 $@26: %empty

  225 if_expression: T_IF condition $@25 local_block $@26 else_clause

  226 else_clause: %empty

  227 $@27: %empty

  228 else_clause: T_ELSE $@27 local_block

  229 stmntlist: %empty
  230          | statement stmntlist

  231 closing_paren: ')'

  232 @28: %empty

  233 call_expression: T_FUNC '(' @28 parameter_list closing_paren

  234 @29: %empty

  235 call_expression: function_id_or_pointer '(' @29 parameter_list closing_paren
  236                | array_constructor
  237                | map_constructor

  238 @30: %empty

  239 array_constructor: '[' @30 parameter_list ']'

  240 @31: %empty

  241 map_constructor: '{' @31 optional_map_associates '}'

  242 optional_map_associates: %empty
  243                        | map_associates

  244 map_associates: map_associate
  245               | map_associates ',' map_associate

  246 @32: %empty

  247 map_associate: T_STRING ':' @32 value

  248 function_id_or_pointer: '*' variable_reference
  249                       | T_IDENT

  250 parameter: expression
  251          | T_ELLIPSIS expression

  252 type_cast: '(' type_name ')'

  253 type_name: T_TYPE_IDENTIFIER
  254          | T_TYPE_IDENTIFIER array_size

  255 array_size: '[' ']'
  256           | '[' T_NUM ']'

  257 boolean_literal: T_TRUE
  258                | T_FALSE

  259 float_literal: T_FLOATING_POINT_NUMBER

  260 integer_literal: T_NUM
  261                | '-' T_NUM

  262 character_literal: T_CHARACTER

  263 simple_literal: integer_literal
  264               | float_literal
  265               | character_literal
  266               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 140
    '%' (37) 158
    '&' (38) 151
    '(' (40) 61 81 139 172 174 175 200 208 216 233 235 252
    ')' (41) 61 81 139 172 174 200 208 216 231 252
    '*' (42) 156 248
    '+' (43) 142 153
    ',' (44) 37 46 70 74 87 245
    '-' (45) 41 143 155 261
    '.' (46) 114 146
    '/' (47) 157
    ':' (58) 192 193 197 216 247
    ';' (59) 9 12 15 17 18 19 33 95 96 97 98 105 106 108 111 182 183 208
    '<' (60) 166
    '>' (62) 167
    '[' (91) 115 148 239 255 256
    ']' (93) 115 148 239 255 256
    '^' (94) 154
    '{' (123) 24 26 93 200 221 241
    '|' (124) 152
    '}' (125) 24 26 200 222 241
    '~' (126) 141 149
    error (256) 75 90 111 214
    T_NAMESPACE (258) 12
    T_TYPEDEF (259) 19
    T_ENUM (260) 26
    T_STRUCT (261) 24
    T_REQUIRE (262) 15
    T_FOR (263) 202
    T_ANNOTATION (264) 81
    T_NATIVE (265) 28 89
    T_NEW (266) 139
    T_STATIC (267) 43
    T_VOID (268) 59
    T_TYPE_IDENTIFIER (269) 30 139 253 254
    T_ELLIPSIS (270) 77 251
    T_IDENT (271) 12 29 38 52 56 57 82 83 114 146 179 197 198 249
    T_NUM (272) 40 41 53 188 196 256 260 261
    T_FLOATING_POINT_NUMBER (273) 259
    T_STRING (274) 15 51 54 66 82 84 180 181 195 247
    T_CHARACTER (275) 262
    T_CONST (276) 44
    T_TRUE (277) 257
    T_FALSE (278) 258
    T_FUNC (279) 58 233
    T_DOTDOT (280) 130 132 196
    T_PLUSPLUS (281) 134
    T_MINUSMINUS (282) 133
    T_IF (283) 225
    T_ELSE (284) 228
    T_WHILE (285) 219
    T_GOTO (286) 198
    T_SH_ASSIGN_PLUS (287) 123
    T_SH_ASSIGN_MINUS (288) 124
    T_SH_ASSIGN_MULT (289) 120
    T_SH_ASSIGN_DIV (290) 121
    T_SH_ASSIGN_MOD (291) 122
    T_SWITCH (292) 200
    T_CASE (293) 192
    T_DEFAULT (294) 193
    T_BREAK (295) 182
    T_CONTINUE (296) 183
    T_RETURN (297) 184
    T_VARIABLE (298) 55 176
    T_NMATCH (299) 150
    T_ASSIGN (300) 40 41 49 82 125
    T_NE (301) 171
    T_EQ (302) 170
    T_SHIFT_LEFT (303) 159
    T_SHIFT_RIGHT (304) 160
    T_OR (305) 165
    T_AND (306) 163
    T_LE (307) 168
    T_GE (308) 169
    T_POWER_TO (309) 161


Nonterminals, with rules where they appear

    $accept (77)
        on left: 0
    file_structure (78)
        on left: 3
        on right: 0
    $@1 (79)
        on left: 1
        on right: 3
    $@2 (80)
        on left: 2
        on right: 3
    header_delimiter (81)
        on left: 4 5
        on right: 3
    macro_definitions (82)
        on left: 6 7
        on right: 3 7
    element_with_annotations (83)
        on left: 8
        on right: 7
    macro_or_native_function (84)
        on left: 9 10
        on right: 8
    namespace (85)
        on left: 11 12
        on right: 3
    prerequisites (86)
        on left: 13 14
        on right: 3 14
    require (87)
        on left: 15
        on right: 14
    global_declarations (88)
        on left: 16 17 18 19
        on right: 3 17 18 19
    typedef (89)
        on left: 20 21 22
        on right: 19
    struct_definition (90)
        on left: 24
        on right: 21
    $@3 (91)
        on left: 23
        on right: 24
    enum_definition (92)
        on left: 26
        on right: 20
    $@4 (93)
        on left: 25
        on right: 26
    native_type_definition (94)
        on left: 28
        on right: 22
    $@5 (95)
        on left: 27
        on right: 28
    typedef_identifier (96)
        on left: 29 30
        on right: 24 26 28
    struct_element_definitions (97)
        on left: 31 32
        on right: 24 32
    struct_element (98)
        on left: 33
        on right: 31 32
    enum_value_definitions (99)
        on left: 34 35
        on right: 26
    enum_values (100)
        on left: 36 37
        on right: 35 37
    enum_value (101)
        on left: 38
        on right: 36 37
    opt_enum_assignment (102)
        on left: 39 40 41
        on right: 38
    scope (103)
        on left: 42 43
        on right: 59 60 62
    constants (104)
        on left: 44
        on right: 17
    constant_list (105)
        on left: 45 46
        on right: 44 46
    constdef (106)
        on left: 49
        on right: 45 46
    $@6 (107)
        on left: 47
        on right: 49
    $@7 (108)
        on left: 48
        on right: 49
    constant_literal (109)
        on left: 50 51
        on right: 49
    variable_identifier (110)
        on left: 52 53 54
        on right: 33 49 63 64 76 211 216
    variable_reference (111)
        on left: 55 56
        on right: 112 118 119 135 143 173 248
    macro_declaration (112)
        on left: 57 58
        on right: 61
    macro_type (113)
        on left: 59 60
        on right: 61
    macrostart (114)
        on left: 61
        on right: 89 92
    global_var (115)
        on left: 62
        on right: 18
    var_decl (116)
        on left: 63 64
        on right: 62 95 110
    optional_description (117)
        on left: 65 66
        on right: 61
    argument_list (118)
        on left: 67 68
        on right: 61
    non_empty_arguments (119)
        on left: 69 70
        on right: 68 70
    parameter_list (120)
        on left: 71 72
        on right: 233 235 239
    non_empty_parameters (121)
        on left: 73 74 75
        on right: 72 74
    argument_declaration (122)
        on left: 76 77
        on right: 69 70
    annotations (123)
        on left: 78 79
        on right: 8 79
    annotation (124)
        on left: 81
        on right: 79
    $@8 (125)
        on left: 80
        on right: 81
    annotation_value (126)
        on left: 82 83 84
        on right: 86 87
    annotation_values (127)
        on left: 85 86 87
        on right: 81 87
    native_function_definition (128)
        on left: 89 90
        on right: 9
    $@9 (129)
        on left: 88
        on right: 89
    macro_definition (130)
        on left: 92
        on right: 10
    $@10 (131)
        on left: 91
        on right: 92
    block (132)
        on left: 93
        on right: 92 107
    var_decls (133)
        on left: 94 95
        on right: 93 95
    statement (134)
        on left: 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
        on right: 220 230
    assignment (135)
        on left: 112 114 115 116
        on right: 98
    $@11 (136)
        on left: 113
        on right: 114
    shorthand_assignment (137)
        on left: 118
        on right: 116 204
    $@12 (138)
        on left: 117
        on right: 118
    assignment_target (139)
        on left: 119
        on right: 114 115
    shorthand_assignment_operator (140)
        on left: 120 121 122 123 124
        on right: 118
    assignment_expression (141)
        on left: 125
        on right: 63 112 114 115 173 211
    expression (142)
        on left: 126 127
        on right: 118 125 148 216 250 251
    range_expression (143)
        on left: 128 130
        on right: 127
    $@13 (144)
        on left: 129
        on right: 130
    range_increment (145)
        on left: 131 132
        on right: 130
    minusminus_plusplus (146)
        on left: 133 134
        on right: 135
    increment_expression (147)
        on left: 135
        on right: 108 203
    simple_term (148)
        on left: 136 137 138
        on right: 144 145
    constructor_expression (149)
        on left: 139
        on right: 138
    unary_expression (150)
        on left: 140 141 142 143
        on right: 147
    binary_expression (151)
        on left: 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 163 165 166 167 168 169 170 171 172 173
        on right: 115 126 130 132 140 141 142 146 148 149 150 151 152 153 154 155 156 157 158 159 160 161 163 165 166 167 168 169 170 171 172 174 175 186 208
    @14 (152)
        on left: 162
        on right: 163
    @15 (153)
        on left: 164
        on right: 165
    condition (154)
        on left: 174 175
        on right: 219 225
    value (155)
        on left: 176 177 178 179
        on right: 136 200 247
    string (156)
        on left: 180 181
        on right: 177 181
    break (157)
        on left: 182
        on right: 103
    continue (158)
        on left: 183
        on right: 104
    return_expression (159)
        on left: 184
        on right: 105
    optional_bterm (160)
        on left: 185 186
        on right: 184
    opt_num (161)
        on left: 187 188
        on right: 182 183
    case_clauses (162)
        on left: 189 190
        on right: 190 200
    case_clause (163)
        on left: 191
        on right: 190
    case_selector (164)
        on left: 192 193
        on right: 191
    case_condition (165)
        on left: 194 195 196
        on right: 192
    label (166)
        on left: 197
        on right: 109
    goto_expression (167)
        on left: 198
        on right: 106
    switch_expression (168)
        on left: 200
        on right: 102
    $@16 (169)
        on left: 199
        on right: 200
    for_loop_expression (170)
        on left: 202
        on right: 101
    $@17 (171)
        on left: 201
        on right: 202
    for_increment (172)
        on left: 203 204
        on right: 208
    for_to_clause (173)
        on left: 208
        on right: 212
    $@18 (174)
        on left: 205
        on right: 208
    $@19 (175)
        on left: 206
        on right: 208
    $@20 (176)
        on left: 207
        on right: 208
    opt_for_initializer (177)
        on left: 209 211
        on right: 208
    $@21 (178)
        on left: 210
        on right: 211
    for_clause (179)
        on left: 212 213 214
        on right: 202
    in_clause (180)
        on left: 216
        on right: 213
    $@22 (181)
        on left: 215
        on right: 216
    while (182)
        on left: 219
        on right: 100
    $@23 (183)
        on left: 217
        on right: 219
    $@24 (184)
        on left: 218
        on right: 219
    local_block (185)
        on left: 220 221
        on right: 202 219 225 228
    closing_brace (186)
        on left: 222
        on right: 93 221
    if_expression (187)
        on left: 225
        on right: 99
    $@25 (188)
        on left: 223
        on right: 225
    $@26 (189)
        on left: 224
        on right: 225
    else_clause (190)
        on left: 226 228
        on right: 225
    $@27 (191)
        on left: 227
        on right: 228
    stmntlist (192)
        on left: 229 230
        on right: 93 191 221 230
    closing_paren (193)
        on left: 231
        on right: 233 235
    call_expression (194)
        on left: 233 235 236 237
        on right: 97 137
    @28 (195)
        on left: 232
        on right: 233
    @29 (196)
        on left: 234
        on right: 235
    array_constructor (197)
        on left: 239
        on right: 236
    @30 (198)
        on left: 238
        on right: 239
    map_constructor (199)
        on left: 241
        on right: 237
    @31 (200)
        on left: 240
        on right: 241
    optional_map_associates (201)
        on left: 242 243
        on right: 241
    map_associates (202)
        on left: 244 245
        on right: 243 245
    map_associate (203)
        on left: 247
        on right: 244 245
    @32 (204)
        on left: 246
        on right: 247
    function_id_or_pointer (205)
        on left: 248 249
        on right: 235
    parameter (206)
        on left: 250 251
        on right: 73 74
    type_cast (207)
        on left: 252
        on right: 145
    type_name (208)
        on left: 253 254
        on right: 33 60 63 64 76 211 216 252
    array_size (209)
        on left: 255 256
        on right: 254
    boolean_literal (210)
        on left: 257 258
        on right: 266
    float_literal (211)
        on left: 259
        on right: 264
    integer_literal (212)
        on left: 260 261
        on right: 194 263
    character_literal (213)
        on left: 262
        on right: 265
    simple_literal (214)
        on left: 263 264 265 266
        on right: 50 178


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites $@2 global_declarations header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 11 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

   12 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites $@2 global_declarations header_delimiter macro_definitions

    $default  reduce using rule 13 (prerequisites)

    prerequisites  go to state 7


State 6

   12 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . $@2 global_declarations header_delimiter macro_definitions
   14 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 2 ($@2)

    $@2      go to state 10
    require  go to state 11


State 8

   12 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 12 (namespace)


State 9

   15 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

    3 file_structure: $@1 namespace prerequisites $@2 . global_declarations header_delimiter macro_definitions

    $default  reduce using rule 16 (global_declarations)

    global_declarations  go to state 13


State 11

   14 prerequisites: prerequisites require .

    $default  reduce using rule 14 (prerequisites)


State 12

   15 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 14


State 13

    3 file_structure: $@1 namespace prerequisites $@2 global_declarations . header_delimiter macro_definitions
   17 global_declarations: global_declarations . constants ';'
   18                    | global_declarations . global_var ';'
   19                    | global_declarations . T_TYPEDEF typedef ';'

    T_TYPEDEF  shift, and go to state 15
    T_STATIC   shift, and go to state 16
    T_CONST    shift, and go to state 17
    '!'        shift, and go to state 18

    T_STATIC           [reduce using rule 4 (header_delimiter)]
    T_TYPE_IDENTIFIER  reduce using rule 4 (header_delimiter)
    T_TYPE_IDENTIFIER  [reduce using rule 42 (scope)]
    $default           reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 19
    scope             go to state 20
    constants         go to state 21
    global_var        go to state 22


State 14

   15 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 15 (require)


State 15

   19 global_declarations: global_declarations T_TYPEDEF . typedef ';'

    T_ENUM    shift, and go to state 23
    T_STRUCT  shift, and go to state 24
    T_NATIVE  shift, and go to state 25

    typedef                 go to state 26
    struct_definition       go to state 27
    enum_definition         go to state 28
    native_type_definition  go to state 29


State 16

   43 scope: T_STATIC .

    $default  reduce using rule 43 (scope)


State 17

   44 constants: T_CONST . constant_list

    $default  reduce using rule 47 ($@6)

    constant_list  go to state 30
    constdef       go to state 31
    $@6            go to state 32


State 18

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 19

    3 file_structure: $@1 namespace prerequisites $@2 global_declarations header_delimiter . macro_definitions

    T_ANNOTATION  shift, and go to state 33

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 78 (annotations)

    macro_definitions         go to state 34
    element_with_annotations  go to state 35
    annotations               go to state 36
    annotation                go to state 37


State 20

   62 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 38

    var_decl   go to state 39
    type_name  go to state 40


State 21

   17 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 41


State 22

   18 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 42


State 23

   26 enum_definition: T_ENUM . $@4 '{' enum_value_definitions '}' typedef_identifier

    $default  reduce using rule 25 ($@4)

    $@4  go to state 43


State 24

   24 struct_definition: T_STRUCT . $@3 '{' struct_element_definitions '}' typedef_identifier

    $default  reduce using rule 23 ($@3)

    $@3  go to state 44


State 25

   28 native_type_definition: T_NATIVE . $@5 typedef_identifier

    $default  reduce using rule 27 ($@5)

    $@5  go to state 45


State 26

   19 global_declarations: global_declarations T_TYPEDEF typedef . ';'

    ';'  shift, and go to state 46


State 27

   21 typedef: struct_definition .

    $default  reduce using rule 21 (typedef)


State 28

   20 typedef: enum_definition .

    $default  reduce using rule 20 (typedef)


State 29

   22 typedef: native_type_definition .

    $default  reduce using rule 22 (typedef)


State 30

   44 constants: T_CONST constant_list .
   46 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 47

    $default  reduce using rule 44 (constants)


State 31

   45 constant_list: constdef .

    $default  reduce using rule 45 (constant_list)


State 32

   49 constdef: $@6 . variable_identifier T_ASSIGN constant_literal $@7

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 51


State 33

   81 annotation: T_ANNOTATION . $@8 '(' annotation_values ')'

    $default  reduce using rule 80 ($@8)

    $@8  go to state 52


State 34

    3 file_structure: $@1 namespace prerequisites $@2 global_declarations header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 35

    7 macro_definitions: element_with_annotations . macro_definitions

    T_ANNOTATION  shift, and go to state 33

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 78 (annotations)

    macro_definitions         go to state 53
    element_with_annotations  go to state 35
    annotations               go to state 36
    annotation                go to state 37


State 36

    8 element_with_annotations: annotations . macro_or_native_function

    error     shift, and go to state 54
    T_NATIVE  shift, and go to state 55

    T_STATIC           reduce using rule 91 ($@10)
    T_VOID             reduce using rule 91 ($@10)
    T_TYPE_IDENTIFIER  reduce using rule 91 ($@10)

    macro_or_native_function    go to state 56
    native_function_definition  go to state 57
    macro_definition            go to state 58
    $@10                        go to state 59


State 37

   79 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 33

    $default  reduce using rule 78 (annotations)

    annotations  go to state 60
    annotation   go to state 37


State 38

  253 type_name: T_TYPE_IDENTIFIER .
  254          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 61

    $default  reduce using rule 253 (type_name)

    array_size  go to state 62


State 39

   62 global_var: scope var_decl .

    $default  reduce using rule 62 (global_var)


State 40

   63 var_decl: type_name . variable_identifier assignment_expression
   64         | type_name . variable_identifier

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 63


State 41

   17 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 17 (global_declarations)


State 42

   18 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 18 (global_declarations)


State 43

   26 enum_definition: T_ENUM $@4 . '{' enum_value_definitions '}' typedef_identifier

    '{'  shift, and go to state 64


State 44

   24 struct_definition: T_STRUCT $@3 . '{' struct_element_definitions '}' typedef_identifier

    '{'  shift, and go to state 65


State 45

   28 native_type_definition: T_NATIVE $@5 . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 66
    T_IDENT            shift, and go to state 67

    typedef_identifier  go to state 68


State 46

   19 global_declarations: global_declarations T_TYPEDEF typedef ';' .

    $default  reduce using rule 19 (global_declarations)


State 47

   46 constant_list: constant_list ',' . constdef

    $default  reduce using rule 47 ($@6)

    constdef  go to state 69
    $@6       go to state 32


State 48

   52 variable_identifier: T_IDENT .

    $default  reduce using rule 52 (variable_identifier)


State 49

   53 variable_identifier: T_NUM .

    $default  reduce using rule 53 (variable_identifier)


State 50

   54 variable_identifier: T_STRING .

    $default  reduce using rule 54 (variable_identifier)


State 51

   49 constdef: $@6 variable_identifier . T_ASSIGN constant_literal $@7

    T_ASSIGN  shift, and go to state 70


State 52

   81 annotation: T_ANNOTATION $@8 . '(' annotation_values ')'

    '('  shift, and go to state 71


State 53

    7 macro_definitions: element_with_annotations macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 54

   90 native_function_definition: error .

    $default  reduce using rule 90 (native_function_definition)


State 55

   89 native_function_definition: T_NATIVE . $@9 macrostart

    $default  reduce using rule 88 ($@9)

    $@9  go to state 72


State 56

    8 element_with_annotations: annotations macro_or_native_function .

    $default  reduce using rule 8 (element_with_annotations)


State 57

    9 macro_or_native_function: native_function_definition . ';'

    ';'  shift, and go to state 73


State 58

   10 macro_or_native_function: macro_definition .

    $default  reduce using rule 10 (macro_or_native_function)


State 59

   92 macro_definition: $@10 . macrostart block

    T_STATIC  shift, and go to state 16

    $default  reduce using rule 42 (scope)

    scope       go to state 74
    macro_type  go to state 75
    macrostart  go to state 76


State 60

   79 annotations: annotation annotations .

    $default  reduce using rule 79 (annotations)


State 61

  255 array_size: '[' . ']'
  256           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 77
    ']'    shift, and go to state 78


State 62

  254 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 254 (type_name)


State 63

   63 var_decl: type_name variable_identifier . assignment_expression
   64         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 79

    $default  reduce using rule 64 (var_decl)

    assignment_expression  go to state 80


State 64

   26 enum_definition: T_ENUM $@4 '{' . enum_value_definitions '}' typedef_identifier

    T_IDENT  shift, and go to state 81

    $default  reduce using rule 34 (enum_value_definitions)

    enum_value_definitions  go to state 82
    enum_values             go to state 83
    enum_value              go to state 84


State 65

   24 struct_definition: T_STRUCT $@3 '{' . struct_element_definitions '}' typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 38

    struct_element_definitions  go to state 85
    struct_element              go to state 86
    type_name                   go to state 87


State 66

   30 typedef_identifier: T_TYPE_IDENTIFIER .

    $default  reduce using rule 30 (typedef_identifier)


State 67

   29 typedef_identifier: T_IDENT .

    $default  reduce using rule 29 (typedef_identifier)


State 68

   28 native_type_definition: T_NATIVE $@5 typedef_identifier .

    $default  reduce using rule 28 (native_type_definition)


State 69

   46 constant_list: constant_list ',' constdef .

    $default  reduce using rule 46 (constant_list)


State 70

   49 constdef: $@6 variable_identifier T_ASSIGN . constant_literal $@7

    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    '-'                      shift, and go to state 94

    constant_literal   go to state 95
    boolean_literal    go to state 96
    float_literal      go to state 97
    integer_literal    go to state 98
    character_literal  go to state 99
    simple_literal     go to state 100


State 71

   81 annotation: T_ANNOTATION $@8 '(' . annotation_values ')'

    T_IDENT   shift, and go to state 101
    T_STRING  shift, and go to state 102

    $default  reduce using rule 85 (annotation_values)

    annotation_value   go to state 103
    annotation_values  go to state 104


State 72

   89 native_function_definition: T_NATIVE $@9 . macrostart

    T_STATIC  shift, and go to state 16

    $default  reduce using rule 42 (scope)

    scope       go to state 74
    macro_type  go to state 75
    macrostart  go to state 105


State 73

    9 macro_or_native_function: native_function_definition ';' .

    $default  reduce using rule 9 (macro_or_native_function)


State 74

   59 macro_type: scope . T_VOID
   60           | scope . type_name

    T_VOID             shift, and go to state 106
    T_TYPE_IDENTIFIER  shift, and go to state 38

    type_name  go to state 107


State 75

   61 macrostart: macro_type . macro_declaration '(' argument_list ')' optional_description

    T_IDENT  shift, and go to state 108
    T_FUNC   shift, and go to state 109

    macro_declaration  go to state 110


State 76

   92 macro_definition: $@10 macrostart . block

    '{'  shift, and go to state 111

    block  go to state 112


State 77

  256 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 113


State 78

  255 array_size: '[' ']' .

    $default  reduce using rule 255 (array_size)


State 79

  125 assignment_expression: T_ASSIGN . expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    T_IDENT     [reduce using rule 128 (range_expression)]
    T_FUNC      [reduce using rule 128 (range_expression)]
    T_VARIABLE  [reduce using rule 128 (range_expression)]
    '~'         [reduce using rule 128 (range_expression)]
    '+'         [reduce using rule 128 (range_expression)]
    '-'         [reduce using rule 128 (range_expression)]
    '*'         [reduce using rule 128 (range_expression)]
    '['         [reduce using rule 128 (range_expression)]
    '{'         [reduce using rule 128 (range_expression)]
    $default    reduce using rule 128 (range_expression)

    variable_reference      go to state 127
    expression              go to state 128
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 80

   63 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 63 (var_decl)


State 81

   38 enum_value: T_IDENT . opt_enum_assignment

    T_ASSIGN  shift, and go to state 142

    $default  reduce using rule 39 (opt_enum_assignment)

    opt_enum_assignment  go to state 143


State 82

   26 enum_definition: T_ENUM $@4 '{' enum_value_definitions . '}' typedef_identifier

    '}'  shift, and go to state 144


State 83

   35 enum_value_definitions: enum_values .

    $default  reduce using rule 35 (enum_value_definitions)


State 84

   36 enum_values: enum_value .
   37            | enum_value . ',' enum_values

    ','  shift, and go to state 145

    $default  reduce using rule 36 (enum_values)


State 85

   24 struct_definition: T_STRUCT $@3 '{' struct_element_definitions . '}' typedef_identifier

    '}'  shift, and go to state 146


State 86

   31 struct_element_definitions: struct_element .
   32                           | struct_element . struct_element_definitions

    T_TYPE_IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 31 (struct_element_definitions)

    struct_element_definitions  go to state 147
    struct_element              go to state 86
    type_name                   go to state 87


State 87

   33 struct_element: type_name . variable_identifier ';'

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 148


State 88

  260 integer_literal: T_NUM .

    $default  reduce using rule 260 (integer_literal)


State 89

  259 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 259 (float_literal)


State 90

   51 constant_literal: T_STRING .

    $default  reduce using rule 51 (constant_literal)


State 91

  262 character_literal: T_CHARACTER .

    $default  reduce using rule 262 (character_literal)


State 92

  257 boolean_literal: T_TRUE .

    $default  reduce using rule 257 (boolean_literal)


State 93

  258 boolean_literal: T_FALSE .

    $default  reduce using rule 258 (boolean_literal)


State 94

  261 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 149


State 95

   49 constdef: $@6 variable_identifier T_ASSIGN constant_literal . $@7

    $default  reduce using rule 48 ($@7)

    $@7  go to state 150


State 96

  266 simple_literal: boolean_literal .

    $default  reduce using rule 266 (simple_literal)


State 97

  264 simple_literal: float_literal .

    $default  reduce using rule 264 (simple_literal)


State 98

  263 simple_literal: integer_literal .

    $default  reduce using rule 263 (simple_literal)


State 99

  265 simple_literal: character_literal .

    $default  reduce using rule 265 (simple_literal)


State 100

   50 constant_literal: simple_literal .

    $default  reduce using rule 50 (constant_literal)


State 101

   82 annotation_value: T_IDENT . T_ASSIGN T_STRING
   83                 | T_IDENT .

    T_ASSIGN  shift, and go to state 151

    $default  reduce using rule 83 (annotation_value)


State 102

   84 annotation_value: T_STRING .

    $default  reduce using rule 84 (annotation_value)


State 103

   86 annotation_values: annotation_value .
   87                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 152

    $default  reduce using rule 86 (annotation_values)


State 104

   81 annotation: T_ANNOTATION $@8 '(' annotation_values . ')'

    ')'  shift, and go to state 153


State 105

   89 native_function_definition: T_NATIVE $@9 macrostart .

    $default  reduce using rule 89 (native_function_definition)


State 106

   59 macro_type: scope T_VOID .

    $default  reduce using rule 59 (macro_type)


State 107

   60 macro_type: scope type_name .

    $default  reduce using rule 60 (macro_type)


State 108

   57 macro_declaration: T_IDENT .

    $default  reduce using rule 57 (macro_declaration)


State 109

   58 macro_declaration: T_FUNC .

    $default  reduce using rule 58 (macro_declaration)


State 110

   61 macrostart: macro_type macro_declaration . '(' argument_list ')' optional_description

    '('  shift, and go to state 154


State 111

   93 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 94 (var_decls)

    var_decls  go to state 155


State 112

   92 macro_definition: $@10 macrostart block .

    $default  reduce using rule 92 (macro_definition)


State 113

  256 array_size: '[' T_NUM ']' .

    $default  reduce using rule 256 (array_size)


State 114

  139 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 156


State 115

   56 variable_reference: T_IDENT .
  179 value: T_IDENT .
  249 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 56 (variable_reference)
    '('       reduce using rule 249 (function_id_or_pointer)
    $default  reduce using rule 179 (value)


State 116

  180 string: T_STRING .

    $default  reduce using rule 180 (string)


State 117

  233 call_expression: T_FUNC . '(' @28 parameter_list closing_paren

    '('  shift, and go to state 157


State 118

   55 variable_reference: T_VARIABLE .
  176 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 55 (variable_reference)
    $default  reduce using rule 176 (value)


State 119

  140 unary_expression: '!' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 158
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 120

  141 unary_expression: '~' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 159
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 121

  142 unary_expression: '+' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 160
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 122

  143 unary_expression: '-' . variable_reference
  261 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 161
    T_NUM       shift, and go to state 149
    T_VARIABLE  shift, and go to state 162

    variable_reference  go to state 163


State 123

  248 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 161
    T_VARIABLE  shift, and go to state 162

    variable_reference  go to state 164


State 124

  239 array_constructor: '[' . @30 parameter_list ']'

    $default  reduce using rule 238 (@30)

    @30  go to state 165


State 125

  241 map_constructor: '{' . @31 optional_map_associates '}'

    $default  reduce using rule 240 (@31)

    @31  go to state 166


State 126

  172 binary_expression: '(' . binary_expression ')'
  252 type_cast: '(' . type_name ')'

    T_NEW                    shift, and go to state 114
    T_TYPE_IDENTIFIER        shift, and go to state 38
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 167
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    type_name               go to state 168
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 127

  173 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 79

    assignment_expression  go to state 169


State 128

  125 assignment_expression: T_ASSIGN expression .

    $default  reduce using rule 125 (assignment_expression)


State 129

  127 expression: range_expression .

    $default  reduce using rule 127 (expression)


State 130

  144 binary_expression: simple_term .

    $default  reduce using rule 144 (binary_expression)


State 131

  138 simple_term: constructor_expression .

    $default  reduce using rule 138 (simple_term)


State 132

  147 binary_expression: unary_expression .

    $default  reduce using rule 147 (binary_expression)


State 133

  126 expression: binary_expression .
  130 range_expression: binary_expression . T_DOTDOT binary_expression $@13 range_increment
  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 170
    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_OR           shift, and go to state 176
    T_AND          shift, and go to state 177
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    T_DOTDOT       [reduce using rule 126 (expression)]
    T_NMATCH       [reduce using rule 126 (expression)]
    T_NE           [reduce using rule 126 (expression)]
    T_EQ           [reduce using rule 126 (expression)]
    T_SHIFT_LEFT   [reduce using rule 126 (expression)]
    T_SHIFT_RIGHT  [reduce using rule 126 (expression)]
    T_OR           [reduce using rule 126 (expression)]
    T_AND          [reduce using rule 126 (expression)]
    T_LE           [reduce using rule 126 (expression)]
    T_GE           [reduce using rule 126 (expression)]
    T_POWER_TO     [reduce using rule 126 (expression)]
    '&'            [reduce using rule 126 (expression)]
    '|'            [reduce using rule 126 (expression)]
    '^'            [reduce using rule 126 (expression)]
    '~'            [reduce using rule 126 (expression)]
    '<'            [reduce using rule 126 (expression)]
    '>'            [reduce using rule 126 (expression)]
    '+'            [reduce using rule 126 (expression)]
    '-'            [reduce using rule 126 (expression)]
    '*'            [reduce using rule 126 (expression)]
    '/'            [reduce using rule 126 (expression)]
    '%'            [reduce using rule 126 (expression)]
    '['            [reduce using rule 126 (expression)]
    '.'            [reduce using rule 126 (expression)]
    $default       reduce using rule 126 (expression)


State 134

  136 simple_term: value .

    $default  reduce using rule 136 (simple_term)


State 135

  177 value: string .
  181 string: string . T_STRING

    T_STRING  shift, and go to state 194

    $default  reduce using rule 177 (value)


State 136

  137 simple_term: call_expression .

    $default  reduce using rule 137 (simple_term)


State 137

  236 call_expression: array_constructor .

    $default  reduce using rule 236 (call_expression)


State 138

  237 call_expression: map_constructor .

    $default  reduce using rule 237 (call_expression)


State 139

  235 call_expression: function_id_or_pointer . '(' @29 parameter_list closing_paren

    '('  shift, and go to state 195


State 140

  145 binary_expression: type_cast . simple_term

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 196
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 197
    '-'                      shift, and go to state 94
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125

    simple_term             go to state 198
    constructor_expression  go to state 131
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 141

  178 value: simple_literal .

    $default  reduce using rule 178 (value)


State 142

   40 opt_enum_assignment: T_ASSIGN . T_NUM
   41                    | T_ASSIGN . '-' T_NUM

    T_NUM  shift, and go to state 199
    '-'    shift, and go to state 200


State 143

   38 enum_value: T_IDENT opt_enum_assignment .

    $default  reduce using rule 38 (enum_value)


State 144

   26 enum_definition: T_ENUM $@4 '{' enum_value_definitions '}' . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 66
    T_IDENT            shift, and go to state 67

    typedef_identifier  go to state 201


State 145

   37 enum_values: enum_value ',' . enum_values

    T_IDENT  shift, and go to state 81

    enum_values  go to state 202
    enum_value   go to state 84


State 146

   24 struct_definition: T_STRUCT $@3 '{' struct_element_definitions '}' . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 66
    T_IDENT            shift, and go to state 67

    typedef_identifier  go to state 203


State 147

   32 struct_element_definitions: struct_element struct_element_definitions .

    $default  reduce using rule 32 (struct_element_definitions)


State 148

   33 struct_element: type_name variable_identifier . ';'

    ';'  shift, and go to state 204


State 149

  261 integer_literal: '-' T_NUM .

    $default  reduce using rule 261 (integer_literal)


State 150

   49 constdef: $@6 variable_identifier T_ASSIGN constant_literal $@7 .

    $default  reduce using rule 49 (constdef)


State 151

   82 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 205


State 152

   87 annotation_values: annotation_value ',' . annotation_values

    T_IDENT   shift, and go to state 101
    T_STRING  shift, and go to state 102

    $default  reduce using rule 85 (annotation_values)

    annotation_value   go to state 103
    annotation_values  go to state 206


State 153

   81 annotation: T_ANNOTATION $@8 '(' annotation_values ')' .

    $default  reduce using rule 81 (annotation)


State 154

   61 macrostart: macro_type macro_declaration '(' . argument_list ')' optional_description

    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_ELLIPSIS         shift, and go to state 207

    $default  reduce using rule 67 (argument_list)

    argument_list         go to state 208
    non_empty_arguments   go to state 209
    argument_declaration  go to state 210
    type_name             go to state 211


State 155

   93 block: '{' var_decls . stmntlist closing_brace
   95 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 117
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 162
    '*'                shift, and go to state 123
    '['                shift, and go to state 124
    ';'                shift, and go to state 222
    '{'                shift, and go to state 223

    '}'  reduce using rule 229 (stmntlist)

    variable_reference      go to state 224
    var_decl                go to state 225
    block                   go to state 226
    statement               go to state 227
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    if_expression           go to state 240
    stmntlist               go to state 241
    call_expression         go to state 242
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_name               go to state 40


State 156

  139 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 243


State 157

  233 call_expression: T_FUNC '(' . @28 parameter_list closing_paren

    $default  reduce using rule 232 (@28)

    @28  go to state 244


State 158

  140 unary_expression: '!' binary_expression .
  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 140 (unary_expression)


State 159

  141 unary_expression: '~' binary_expression .
  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 141 (unary_expression)


State 160

  142 unary_expression: '+' binary_expression .
  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 180
    '*'         shift, and go to state 189
    '/'         shift, and go to state 190
    '%'         shift, and go to state 191
    '['         shift, and go to state 192
    '.'         shift, and go to state 193

    $default  reduce using rule 142 (unary_expression)


State 161

   56 variable_reference: T_IDENT .

    $default  reduce using rule 56 (variable_reference)


State 162

   55 variable_reference: T_VARIABLE .

    $default  reduce using rule 55 (variable_reference)


State 163

  143 unary_expression: '-' variable_reference .

    $default  reduce using rule 143 (unary_expression)


State 164

  248 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 248 (function_id_or_pointer)


State 165

  239 array_constructor: '[' @30 . parameter_list ']'

    error                    shift, and go to state 245
    T_NEW                    shift, and go to state 114
    T_ELLIPSIS               shift, and go to state 246
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    ','  reduce using rule 128 (range_expression)
    ']'  reduce using rule 71 (parameter_list)
    ']'  [reduce using rule 128 (range_expression)]

    variable_reference      go to state 127
    parameter_list          go to state 247
    non_empty_parameters    go to state 248
    expression              go to state 249
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    parameter               go to state 250
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 166

  241 map_constructor: '{' @31 . optional_map_associates '}'

    T_STRING  shift, and go to state 251

    $default  reduce using rule 242 (optional_map_associates)

    optional_map_associates  go to state 252
    map_associates           go to state 253
    map_associate            go to state 254


State 167

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression
  172                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_OR           shift, and go to state 176
    T_AND          shift, and go to state 177
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193
    ')'            shift, and go to state 255


State 168

  252 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 256


State 169

  173 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 173 (binary_expression)


State 170

  130 range_expression: binary_expression T_DOTDOT . binary_expression $@13 range_increment

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 257
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 171

  150 binary_expression: binary_expression T_NMATCH . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 258
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 172

  171 binary_expression: binary_expression T_NE . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 259
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 173

  170 binary_expression: binary_expression T_EQ . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 260
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 174

  159 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 261
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 175

  160 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 262
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 176

  165 binary_expression: binary_expression T_OR . @15 binary_expression

    $default  reduce using rule 164 (@15)

    @15  go to state 263


State 177

  163 binary_expression: binary_expression T_AND . @14 binary_expression

    $default  reduce using rule 162 (@14)

    @14  go to state 264


State 178

  168 binary_expression: binary_expression T_LE . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 265
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 179

  169 binary_expression: binary_expression T_GE . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 266
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 180

  161 binary_expression: binary_expression T_POWER_TO . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 267
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 181

  151 binary_expression: binary_expression '&' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 268
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 182

  152 binary_expression: binary_expression '|' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 269
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 183

  154 binary_expression: binary_expression '^' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 270
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 184

  149 binary_expression: binary_expression '~' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 271
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 185

  166 binary_expression: binary_expression '<' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 272
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 186

  167 binary_expression: binary_expression '>' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 273
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 187

  153 binary_expression: binary_expression '+' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 274
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 188

  155 binary_expression: binary_expression '-' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 275
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 189

  156 binary_expression: binary_expression '*' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 276
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 190

  157 binary_expression: binary_expression '/' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 277
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 191

  158 binary_expression: binary_expression '%' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 278
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 192

  148 binary_expression: binary_expression '[' . expression ']'

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    $default  reduce using rule 128 (range_expression)

    variable_reference      go to state 127
    expression              go to state 279
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 193

  146 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 280


State 194

  181 string: string T_STRING .

    $default  reduce using rule 181 (string)


State 195

  235 call_expression: function_id_or_pointer '(' . @29 parameter_list closing_paren

    $default  reduce using rule 234 (@29)

    @29  go to state 281


State 196

  179 value: T_IDENT .
  249 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 249 (function_id_or_pointer)
    $default  reduce using rule 179 (value)


State 197

  176 value: T_VARIABLE .

    $default  reduce using rule 176 (value)


State 198

  145 binary_expression: type_cast simple_term .

    $default  reduce using rule 145 (binary_expression)


State 199

   40 opt_enum_assignment: T_ASSIGN T_NUM .

    $default  reduce using rule 40 (opt_enum_assignment)


State 200

   41 opt_enum_assignment: T_ASSIGN '-' . T_NUM

    T_NUM  shift, and go to state 282


State 201

   26 enum_definition: T_ENUM $@4 '{' enum_value_definitions '}' typedef_identifier .

    $default  reduce using rule 26 (enum_definition)


State 202

   37 enum_values: enum_value ',' enum_values .

    $default  reduce using rule 37 (enum_values)


State 203

   24 struct_definition: T_STRUCT $@3 '{' struct_element_definitions '}' typedef_identifier .

    $default  reduce using rule 24 (struct_definition)


State 204

   33 struct_element: type_name variable_identifier ';' .

    $default  reduce using rule 33 (struct_element)


State 205

   82 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 82 (annotation_value)


State 206

   87 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 87 (annotation_values)


State 207

   77 argument_declaration: T_ELLIPSIS .

    $default  reduce using rule 77 (argument_declaration)


State 208

   61 macrostart: macro_type macro_declaration '(' argument_list . ')' optional_description

    ')'  shift, and go to state 283


State 209

   68 argument_list: non_empty_arguments .
   70 non_empty_arguments: non_empty_arguments . ',' argument_declaration

    ','  shift, and go to state 284

    $default  reduce using rule 68 (argument_list)


State 210

   69 non_empty_arguments: argument_declaration .

    $default  reduce using rule 69 (non_empty_arguments)


State 211

   76 argument_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 285


State 212

  111 statement: error . ';'

    ';'  shift, and go to state 286


State 213

  202 for_loop_expression: T_FOR . for_clause $@17 local_block

    error  shift, and go to state 287
    '('    shift, and go to state 288

    for_to_clause  go to state 289
    for_clause     go to state 290
    in_clause      go to state 291


State 214

   56 variable_reference: T_IDENT .
  197 label: T_IDENT . ':'
  249 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 292

    '('       reduce using rule 249 (function_id_or_pointer)
    $default  reduce using rule 56 (variable_reference)


State 215

  225 if_expression: T_IF . condition $@25 local_block $@26 else_clause

    '('  shift, and go to state 293

    condition  go to state 294


State 216

  219 while: T_WHILE . $@23 condition $@24 local_block

    $default  reduce using rule 217 ($@23)

    $@23  go to state 295


State 217

  198 goto_expression: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 296


State 218

  200 switch_expression: T_SWITCH . '(' value ')' $@16 '{' case_clauses '}'

    '('  shift, and go to state 297


State 219

  182 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 298

    $default  reduce using rule 187 (opt_num)

    opt_num  go to state 299


State 220

  183 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 298

    $default  reduce using rule 187 (opt_num)

    opt_num  go to state 300


State 221

  184 return_expression: T_RETURN . optional_bterm

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    $default  reduce using rule 185 (optional_bterm)

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 301
    value                   go to state 134
    string                  go to state 135
    optional_bterm          go to state 302
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 222

   96 statement: ';' .

    $default  reduce using rule 96 (statement)


State 223

   93 block: '{' . var_decls stmntlist closing_brace
  241 map_constructor: '{' . @31 optional_map_associates '}'

    T_STRING  reduce using rule 240 (@31)
    '}'       reduce using rule 94 (var_decls)
    '}'       [reduce using rule 240 (@31)]
    $default  reduce using rule 94 (var_decls)

    var_decls  go to state 155
    @31        go to state 166


State 224

  112 assignment: variable_reference . assignment_expression
  118 shorthand_assignment: variable_reference . $@12 shorthand_assignment_operator expression
  119 assignment_target: variable_reference .
  135 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 303
    T_MINUSMINUS  shift, and go to state 304
    T_ASSIGN      shift, and go to state 79

    '['       reduce using rule 119 (assignment_target)
    '.'       reduce using rule 119 (assignment_target)
    $default  reduce using rule 117 ($@12)

    $@12                   go to state 305
    assignment_expression  go to state 306
    minusminus_plusplus    go to state 307


State 225

   95 var_decls: var_decls var_decl . ';'
  110 statement: var_decl .

    ';'  shift, and go to state 308

    ';'       [reduce using rule 110 (statement)]
    $default  reduce using rule 110 (statement)


State 226

  107 statement: block .

    $default  reduce using rule 107 (statement)


State 227

  230 stmntlist: statement . stmntlist

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 117
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 162
    '*'                shift, and go to state 123
    '['                shift, and go to state 124
    ';'                shift, and go to state 222
    '{'                shift, and go to state 223

    T_CASE     reduce using rule 229 (stmntlist)
    T_DEFAULT  reduce using rule 229 (stmntlist)
    '}'        reduce using rule 229 (stmntlist)

    variable_reference      go to state 224
    var_decl                go to state 309
    block                   go to state 226
    statement               go to state 227
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    if_expression           go to state 240
    stmntlist               go to state 310
    call_expression         go to state 242
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_name               go to state 40


State 228

   98 statement: assignment . ';'

    ';'  shift, and go to state 311


State 229

  116 assignment: shorthand_assignment .

    $default  reduce using rule 116 (assignment)


State 230

  114 assignment: assignment_target . '.' T_IDENT $@11 assignment_expression
  115           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 312
    '.'  shift, and go to state 313


State 231

  108 statement: increment_expression . ';'

    ';'  shift, and go to state 314


State 232

  103 statement: break .

    $default  reduce using rule 103 (statement)


State 233

  104 statement: continue .

    $default  reduce using rule 104 (statement)


State 234

  105 statement: return_expression . ';'

    ';'  shift, and go to state 315


State 235

  109 statement: label .

    $default  reduce using rule 109 (statement)


State 236

  106 statement: goto_expression . ';'

    ';'  shift, and go to state 316


State 237

  102 statement: switch_expression .

    $default  reduce using rule 102 (statement)


State 238

  101 statement: for_loop_expression .

    $default  reduce using rule 101 (statement)


State 239

  100 statement: while .

    $default  reduce using rule 100 (statement)


State 240

   99 statement: if_expression .

    $default  reduce using rule 99 (statement)


State 241

   93 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 317

    closing_brace  go to state 318


State 242

   97 statement: call_expression . ';'

    ';'  shift, and go to state 319


State 243

  139 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 320


State 244

  233 call_expression: T_FUNC '(' @28 . parameter_list closing_paren

    error                    shift, and go to state 245
    T_NEW                    shift, and go to state 114
    T_ELLIPSIS               shift, and go to state 246
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    ','  reduce using rule 128 (range_expression)
    ')'  reduce using rule 71 (parameter_list)
    ')'  [reduce using rule 128 (range_expression)]

    variable_reference      go to state 127
    parameter_list          go to state 321
    non_empty_parameters    go to state 248
    expression              go to state 249
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    parameter               go to state 250
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 245

   75 non_empty_parameters: error .

    $default  reduce using rule 75 (non_empty_parameters)


State 246

  251 parameter: T_ELLIPSIS . expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    $default  reduce using rule 128 (range_expression)

    variable_reference      go to state 127
    expression              go to state 322
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 247

  239 array_constructor: '[' @30 parameter_list . ']'

    ']'  shift, and go to state 323


State 248

   72 parameter_list: non_empty_parameters .
   74 non_empty_parameters: non_empty_parameters . ',' parameter

    ','  shift, and go to state 324

    $default  reduce using rule 72 (parameter_list)


State 249

  250 parameter: expression .

    $default  reduce using rule 250 (parameter)


State 250

   73 non_empty_parameters: parameter .

    $default  reduce using rule 73 (non_empty_parameters)


State 251

  247 map_associate: T_STRING . ':' @32 value

    ':'  shift, and go to state 325


State 252

  241 map_constructor: '{' @31 optional_map_associates . '}'

    '}'  shift, and go to state 326


State 253

  243 optional_map_associates: map_associates .
  245 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 327

    $default  reduce using rule 243 (optional_map_associates)


State 254

  244 map_associates: map_associate .

    $default  reduce using rule 244 (map_associates)


State 255

  172 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 172 (binary_expression)


State 256

  252 type_cast: '(' type_name ')' .

    $default  reduce using rule 252 (type_cast)


State 257

  130 range_expression: binary_expression T_DOTDOT binary_expression . $@13 range_increment
  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_OR           shift, and go to state 176
    T_AND          shift, and go to state 177
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    T_NMATCH       [reduce using rule 129 ($@13)]
    T_NE           [reduce using rule 129 ($@13)]
    T_EQ           [reduce using rule 129 ($@13)]
    T_SHIFT_LEFT   [reduce using rule 129 ($@13)]
    T_SHIFT_RIGHT  [reduce using rule 129 ($@13)]
    T_OR           [reduce using rule 129 ($@13)]
    T_AND          [reduce using rule 129 ($@13)]
    T_LE           [reduce using rule 129 ($@13)]
    T_GE           [reduce using rule 129 ($@13)]
    T_POWER_TO     [reduce using rule 129 ($@13)]
    '&'            [reduce using rule 129 ($@13)]
    '|'            [reduce using rule 129 ($@13)]
    '^'            [reduce using rule 129 ($@13)]
    '~'            [reduce using rule 129 ($@13)]
    '<'            [reduce using rule 129 ($@13)]
    '>'            [reduce using rule 129 ($@13)]
    '+'            [reduce using rule 129 ($@13)]
    '-'            [reduce using rule 129 ($@13)]
    '*'            [reduce using rule 129 ($@13)]
    '/'            [reduce using rule 129 ($@13)]
    '%'            [reduce using rule 129 ($@13)]
    '['            [reduce using rule 129 ($@13)]
    '.'            [reduce using rule 129 ($@13)]
    $default       reduce using rule 129 ($@13)

    $@13  go to state 328


State 258

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression T_NMATCH binary_expression .
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 150 (binary_expression)


State 259

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression
  171                  | binary_expression T_NE binary_expression .

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 171 (binary_expression)


State 260

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  170                  | binary_expression T_EQ binary_expression .
  171                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 170 (binary_expression)


State 261

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression T_SHIFT_LEFT binary_expression .
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 180
    '+'         shift, and go to state 187
    '-'         shift, and go to state 188
    '*'         shift, and go to state 189
    '/'         shift, and go to state 190
    '%'         shift, and go to state 191
    '['         shift, and go to state 192
    '.'         shift, and go to state 193

    $default  reduce using rule 159 (binary_expression)


State 262

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression T_SHIFT_RIGHT binary_expression .
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 180
    '+'         shift, and go to state 187
    '-'         shift, and go to state 188
    '*'         shift, and go to state 189
    '/'         shift, and go to state 190
    '%'         shift, and go to state 191
    '['         shift, and go to state 192
    '.'         shift, and go to state 193

    $default  reduce using rule 160 (binary_expression)


State 263

  165 binary_expression: binary_expression T_OR @15 . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 329
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 264

  163 binary_expression: binary_expression T_AND @14 . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 330
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 265

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  168                  | binary_expression T_LE binary_expression .
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_POWER_TO     shift, and go to state 180
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 168 (binary_expression)


State 266

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  169                  | binary_expression T_GE binary_expression .
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_POWER_TO     shift, and go to state 180
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 169 (binary_expression)


State 267

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression T_POWER_TO binary_expression .
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 192
    '.'  shift, and go to state 193

    $default  reduce using rule 161 (binary_expression)


State 268

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  151                  | binary_expression '&' binary_expression .
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 151 (binary_expression)


State 269

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  152                  | binary_expression '|' binary_expression .
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 152 (binary_expression)


State 270

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  154                  | binary_expression '^' binary_expression .
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 154 (binary_expression)


State 271

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  149                  | binary_expression '~' binary_expression .
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 149 (binary_expression)


State 272

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  166                  | binary_expression '<' binary_expression .
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_POWER_TO     shift, and go to state 180
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 166 (binary_expression)


State 273

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  167                  | binary_expression '>' binary_expression .
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_POWER_TO     shift, and go to state 180
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 167 (binary_expression)


State 274

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  153                  | binary_expression '+' binary_expression .
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 180
    '*'         shift, and go to state 189
    '/'         shift, and go to state 190
    '%'         shift, and go to state 191
    '['         shift, and go to state 192
    '.'         shift, and go to state 193

    $default  reduce using rule 153 (binary_expression)


State 275

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  155                  | binary_expression '-' binary_expression .
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 180
    '*'         shift, and go to state 189
    '/'         shift, and go to state 190
    '%'         shift, and go to state 191
    '['         shift, and go to state 192
    '.'         shift, and go to state 193

    $default  reduce using rule 155 (binary_expression)


State 276

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  156                  | binary_expression '*' binary_expression .
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 192
    '.'  shift, and go to state 193

    $default  reduce using rule 156 (binary_expression)


State 277

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  157                  | binary_expression '/' binary_expression .
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 192
    '.'  shift, and go to state 193

    $default  reduce using rule 157 (binary_expression)


State 278

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  158                  | binary_expression '%' binary_expression .
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 192
    '.'  shift, and go to state 193

    $default  reduce using rule 158 (binary_expression)


State 279

  148 binary_expression: binary_expression '[' expression . ']'

    ']'  shift, and go to state 331


State 280

  146 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 146 (binary_expression)


State 281

  235 call_expression: function_id_or_pointer '(' @29 . parameter_list closing_paren

    error                    shift, and go to state 245
    T_NEW                    shift, and go to state 114
    T_ELLIPSIS               shift, and go to state 246
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    ','  reduce using rule 128 (range_expression)
    ')'  reduce using rule 71 (parameter_list)
    ')'  [reduce using rule 128 (range_expression)]

    variable_reference      go to state 127
    parameter_list          go to state 332
    non_empty_parameters    go to state 248
    expression              go to state 249
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    parameter               go to state 250
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 282

   41 opt_enum_assignment: T_ASSIGN '-' T_NUM .

    $default  reduce using rule 41 (opt_enum_assignment)


State 283

   61 macrostart: macro_type macro_declaration '(' argument_list ')' . optional_description

    T_STRING  shift, and go to state 333

    $default  reduce using rule 65 (optional_description)

    optional_description  go to state 334


State 284

   70 non_empty_arguments: non_empty_arguments ',' . argument_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_ELLIPSIS         shift, and go to state 207

    argument_declaration  go to state 335
    type_name             go to state 211


State 285

   76 argument_declaration: type_name variable_identifier .

    $default  reduce using rule 76 (argument_declaration)


State 286

  111 statement: error ';' .

    $default  reduce using rule 111 (statement)


State 287

  214 for_clause: error .

    $default  reduce using rule 214 (for_clause)


State 288

  208 for_to_clause: '(' . opt_for_initializer $@18 ';' binary_expression ';' $@19 for_increment $@20 ')'
  216 in_clause: '(' . type_name variable_identifier $@22 ':' expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 209 (opt_for_initializer)

    opt_for_initializer  go to state 336
    type_name            go to state 337


State 289

  212 for_clause: for_to_clause .

    $default  reduce using rule 212 (for_clause)


State 290

  202 for_loop_expression: T_FOR for_clause . $@17 local_block

    $default  reduce using rule 201 ($@17)

    $@17  go to state 338


State 291

  213 for_clause: in_clause .

    $default  reduce using rule 213 (for_clause)


State 292

  197 label: T_IDENT ':' .

    $default  reduce using rule 197 (label)


State 293

  174 condition: '(' . binary_expression ')'
  175          | '(' . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 339
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 294

  225 if_expression: T_IF condition . $@25 local_block $@26 else_clause

    $default  reduce using rule 223 ($@25)

    $@25  go to state 340


State 295

  219 while: T_WHILE $@23 . condition $@24 local_block

    '('  shift, and go to state 293

    condition  go to state 341


State 296

  198 goto_expression: T_GOTO T_IDENT .

    $default  reduce using rule 198 (goto_expression)


State 297

  200 switch_expression: T_SWITCH '(' . value ')' $@16 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 342
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_VARIABLE               shift, and go to state 197
    '-'                      shift, and go to state 94

    value              go to state 343
    string             go to state 135
    boolean_literal    go to state 96
    float_literal      go to state 97
    integer_literal    go to state 98
    character_literal  go to state 99
    simple_literal     go to state 141


State 298

  188 opt_num: T_NUM .

    $default  reduce using rule 188 (opt_num)


State 299

  182 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 344


State 300

  183 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 345


State 301

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression
  186 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_OR           shift, and go to state 176
    T_AND          shift, and go to state 177
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 186 (optional_bterm)


State 302

  184 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 184 (return_expression)


State 303

  134 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 134 (minusminus_plusplus)


State 304

  133 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 133 (minusminus_plusplus)


State 305

  118 shorthand_assignment: variable_reference $@12 . shorthand_assignment_operator expression

    T_SH_ASSIGN_PLUS   shift, and go to state 346
    T_SH_ASSIGN_MINUS  shift, and go to state 347
    T_SH_ASSIGN_MULT   shift, and go to state 348
    T_SH_ASSIGN_DIV    shift, and go to state 349
    T_SH_ASSIGN_MOD    shift, and go to state 350

    shorthand_assignment_operator  go to state 351


State 306

  112 assignment: variable_reference assignment_expression .

    $default  reduce using rule 112 (assignment)


State 307

  135 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 135 (increment_expression)


State 308

   95 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 95 (var_decls)


State 309

  110 statement: var_decl .

    $default  reduce using rule 110 (statement)


State 310

  230 stmntlist: statement stmntlist .

    $default  reduce using rule 230 (stmntlist)


State 311

   98 statement: assignment ';' .

    $default  reduce using rule 98 (statement)


State 312

  115 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 352
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 313

  114 assignment: assignment_target '.' . T_IDENT $@11 assignment_expression

    T_IDENT  shift, and go to state 353


State 314

  108 statement: increment_expression ';' .

    $default  reduce using rule 108 (statement)


State 315

  105 statement: return_expression ';' .

    $default  reduce using rule 105 (statement)


State 316

  106 statement: goto_expression ';' .

    $default  reduce using rule 106 (statement)


State 317

  222 closing_brace: '}' .

    $default  reduce using rule 222 (closing_brace)


State 318

   93 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 93 (block)


State 319

   97 statement: call_expression ';' .

    $default  reduce using rule 97 (statement)


State 320

  139 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 139 (constructor_expression)


State 321

  233 call_expression: T_FUNC '(' @28 parameter_list . closing_paren

    ')'  shift, and go to state 354

    closing_paren  go to state 355


State 322

  251 parameter: T_ELLIPSIS expression .

    $default  reduce using rule 251 (parameter)


State 323

  239 array_constructor: '[' @30 parameter_list ']' .

    $default  reduce using rule 239 (array_constructor)


State 324

   74 non_empty_parameters: non_empty_parameters ',' . parameter

    T_NEW                    shift, and go to state 114
    T_ELLIPSIS               shift, and go to state 246
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    $default  reduce using rule 128 (range_expression)

    variable_reference      go to state 127
    expression              go to state 249
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    parameter               go to state 356
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 325

  247 map_associate: T_STRING ':' . @32 value

    $default  reduce using rule 246 (@32)

    @32  go to state 357


State 326

  241 map_constructor: '{' @31 optional_map_associates '}' .

    $default  reduce using rule 241 (map_constructor)


State 327

  245 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 251

    map_associate  go to state 358


State 328

  130 range_expression: binary_expression T_DOTDOT binary_expression $@13 . range_increment

    T_DOTDOT  shift, and go to state 359

    T_DOTDOT  [reduce using rule 131 (range_increment)]
    $default  reduce using rule 131 (range_increment)

    range_increment  go to state 360


State 329

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  165                  | binary_expression T_OR @15 binary_expression .
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 165 (binary_expression)


State 330

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  163                  | binary_expression T_AND @14 binary_expression .
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193

    $default  reduce using rule 163 (binary_expression)


State 331

  148 binary_expression: binary_expression '[' expression ']' .

    $default  reduce using rule 148 (binary_expression)


State 332

  235 call_expression: function_id_or_pointer '(' @29 parameter_list . closing_paren

    ')'  shift, and go to state 354

    closing_paren  go to state 361


State 333

   66 optional_description: T_STRING .

    $default  reduce using rule 66 (optional_description)


State 334

   61 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description .

    $default  reduce using rule 61 (macrostart)


State 335

   70 non_empty_arguments: non_empty_arguments ',' argument_declaration .

    $default  reduce using rule 70 (non_empty_arguments)


State 336

  208 for_to_clause: '(' opt_for_initializer . $@18 ';' binary_expression ';' $@19 for_increment $@20 ')'

    $default  reduce using rule 205 ($@18)

    $@18  go to state 362


State 337

  211 opt_for_initializer: type_name . variable_identifier $@21 assignment_expression
  216 in_clause: '(' type_name . variable_identifier $@22 ':' expression ')'

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 363


State 338

  202 for_loop_expression: T_FOR for_clause $@17 . local_block

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 117
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 162
    '*'                shift, and go to state 123
    '['                shift, and go to state 124
    ';'                shift, and go to state 222
    '{'                shift, and go to state 364

    variable_reference      go to state 224
    var_decl                go to state 309
    block                   go to state 226
    statement               go to state 365
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    local_block             go to state 366
    if_expression           go to state 240
    call_expression         go to state 242
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_name               go to state 40


State 339

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression
  174 condition: '(' binary_expression . ')'
  175          | '(' binary_expression .

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_OR           shift, and go to state 176
    T_AND          shift, and go to state 177
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193
    ')'            shift, and go to state 367

    '*'       [reduce using rule 175 (condition)]
    '['       [reduce using rule 175 (condition)]
    $default  reduce using rule 175 (condition)


State 340

  225 if_expression: T_IF condition $@25 . local_block $@26 else_clause

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 117
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 162
    '*'                shift, and go to state 123
    '['                shift, and go to state 124
    ';'                shift, and go to state 222
    '{'                shift, and go to state 364

    variable_reference      go to state 224
    var_decl                go to state 309
    block                   go to state 226
    statement               go to state 365
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    local_block             go to state 368
    if_expression           go to state 240
    call_expression         go to state 242
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_name               go to state 40


State 341

  219 while: T_WHILE $@23 condition . $@24 local_block

    $default  reduce using rule 218 ($@24)

    $@24  go to state 369


State 342

  179 value: T_IDENT .

    $default  reduce using rule 179 (value)


State 343

  200 switch_expression: T_SWITCH '(' value . ')' $@16 '{' case_clauses '}'

    ')'  shift, and go to state 370


State 344

  182 break: T_BREAK opt_num ';' .

    $default  reduce using rule 182 (break)


State 345

  183 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 183 (continue)


State 346

  123 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 123 (shorthand_assignment_operator)


State 347

  124 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 124 (shorthand_assignment_operator)


State 348

  120 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 120 (shorthand_assignment_operator)


State 349

  121 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 121 (shorthand_assignment_operator)


State 350

  122 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 122 (shorthand_assignment_operator)


State 351

  118 shorthand_assignment: variable_reference $@12 shorthand_assignment_operator . expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    $default  reduce using rule 128 (range_expression)

    variable_reference      go to state 127
    expression              go to state 371
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 352

  115 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_OR           shift, and go to state 176
    T_AND          shift, and go to state 177
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193
    ']'            shift, and go to state 372


State 353

  114 assignment: assignment_target '.' T_IDENT . $@11 assignment_expression

    $default  reduce using rule 113 ($@11)

    $@11  go to state 373


State 354

  231 closing_paren: ')' .

    $default  reduce using rule 231 (closing_paren)


State 355

  233 call_expression: T_FUNC '(' @28 parameter_list closing_paren .

    $default  reduce using rule 233 (call_expression)


State 356

   74 non_empty_parameters: non_empty_parameters ',' parameter .

    $default  reduce using rule 74 (non_empty_parameters)


State 357

  247 map_associate: T_STRING ':' @32 . value

    T_IDENT                  shift, and go to state 342
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_VARIABLE               shift, and go to state 197
    '-'                      shift, and go to state 94

    value              go to state 374
    string             go to state 135
    boolean_literal    go to state 96
    float_literal      go to state 97
    integer_literal    go to state 98
    character_literal  go to state 99
    simple_literal     go to state 141


State 358

  245 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 245 (map_associates)


State 359

  132 range_increment: T_DOTDOT . binary_expression

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 375
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 360

  130 range_expression: binary_expression T_DOTDOT binary_expression $@13 range_increment .

    $default  reduce using rule 130 (range_expression)


State 361

  235 call_expression: function_id_or_pointer '(' @29 parameter_list closing_paren .

    $default  reduce using rule 235 (call_expression)


State 362

  208 for_to_clause: '(' opt_for_initializer $@18 . ';' binary_expression ';' $@19 for_increment $@20 ')'

    ';'  shift, and go to state 376


State 363

  211 opt_for_initializer: type_name variable_identifier . $@21 assignment_expression
  216 in_clause: '(' type_name variable_identifier . $@22 ':' expression ')'

    ':'       reduce using rule 215 ($@22)
    $default  reduce using rule 210 ($@21)

    $@21  go to state 377
    $@22  go to state 378


State 364

   93 block: '{' . var_decls stmntlist closing_brace
  221 local_block: '{' . stmntlist closing_brace
  241 map_constructor: '{' . @31 optional_map_associates '}'

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 117
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 162
    '*'                shift, and go to state 123
    '['                shift, and go to state 124
    ';'                shift, and go to state 222
    '{'                shift, and go to state 223

    error              [reduce using rule 94 (var_decls)]
    T_FOR              [reduce using rule 94 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 94 (var_decls)]
    T_IDENT            [reduce using rule 94 (var_decls)]
    T_STRING           reduce using rule 240 (@31)
    T_FUNC             [reduce using rule 94 (var_decls)]
    T_IF               [reduce using rule 94 (var_decls)]
    T_WHILE            [reduce using rule 94 (var_decls)]
    T_GOTO             [reduce using rule 94 (var_decls)]
    T_SWITCH           [reduce using rule 94 (var_decls)]
    T_BREAK            [reduce using rule 94 (var_decls)]
    T_CONTINUE         [reduce using rule 94 (var_decls)]
    T_RETURN           [reduce using rule 94 (var_decls)]
    T_VARIABLE         [reduce using rule 94 (var_decls)]
    '*'                [reduce using rule 94 (var_decls)]
    '['                [reduce using rule 94 (var_decls)]
    ';'                [reduce using rule 94 (var_decls)]
    '{'                [reduce using rule 94 (var_decls)]
    '}'                reduce using rule 94 (var_decls)
    '}'                [reduce using rule 229 (stmntlist)]
    '}'                [reduce using rule 240 (@31)]

    variable_reference      go to state 224
    var_decl                go to state 309
    block                   go to state 226
    var_decls               go to state 155
    statement               go to state 227
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    if_expression           go to state 240
    stmntlist               go to state 379
    call_expression         go to state 242
    array_constructor       go to state 137
    map_constructor         go to state 138
    @31                     go to state 166
    function_id_or_pointer  go to state 139
    type_name               go to state 40


State 365

  220 local_block: statement .

    $default  reduce using rule 220 (local_block)


State 366

  202 for_loop_expression: T_FOR for_clause $@17 local_block .

    $default  reduce using rule 202 (for_loop_expression)


State 367

  174 condition: '(' binary_expression ')' .

    $default  reduce using rule 174 (condition)


State 368

  225 if_expression: T_IF condition $@25 local_block . $@26 else_clause

    $default  reduce using rule 224 ($@26)

    $@26  go to state 380


State 369

  219 while: T_WHILE $@23 condition $@24 . local_block

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 117
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 162
    '*'                shift, and go to state 123
    '['                shift, and go to state 124
    ';'                shift, and go to state 222
    '{'                shift, and go to state 364

    variable_reference      go to state 224
    var_decl                go to state 309
    block                   go to state 226
    statement               go to state 365
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    local_block             go to state 381
    if_expression           go to state 240
    call_expression         go to state 242
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_name               go to state 40


State 370

  200 switch_expression: T_SWITCH '(' value ')' . $@16 '{' case_clauses '}'

    $default  reduce using rule 199 ($@16)

    $@16  go to state 382


State 371

  118 shorthand_assignment: variable_reference $@12 shorthand_assignment_operator expression .

    $default  reduce using rule 118 (shorthand_assignment)


State 372

  115 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 79

    assignment_expression  go to state 383


State 373

  114 assignment: assignment_target '.' T_IDENT $@11 . assignment_expression

    T_ASSIGN  shift, and go to state 79

    assignment_expression  go to state 384


State 374

  247 map_associate: T_STRING ':' @32 value .

    $default  reduce using rule 247 (map_associate)


State 375

  132 range_increment: T_DOTDOT binary_expression .
  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 132 (range_increment)


State 376

  208 for_to_clause: '(' opt_for_initializer $@18 ';' . binary_expression ';' $@19 for_increment $@20 ')'

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    variable_reference      go to state 127
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 385
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 377

  211 opt_for_initializer: type_name variable_identifier $@21 . assignment_expression

    T_ASSIGN  shift, and go to state 79

    assignment_expression  go to state 386


State 378

  216 in_clause: '(' type_name variable_identifier $@22 . ':' expression ')'

    ':'  shift, and go to state 387


State 379

  221 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 317

    closing_brace  go to state 388


State 380

  225 if_expression: T_IF condition $@25 local_block $@26 . else_clause

    T_ELSE  shift, and go to state 389

    T_ELSE    [reduce using rule 226 (else_clause)]
    $default  reduce using rule 226 (else_clause)

    else_clause  go to state 390


State 381

  219 while: T_WHILE $@23 condition $@24 local_block .

    $default  reduce using rule 219 (while)


State 382

  200 switch_expression: T_SWITCH '(' value ')' $@16 . '{' case_clauses '}'

    '{'  shift, and go to state 391


State 383

  115 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 115 (assignment)


State 384

  114 assignment: assignment_target '.' T_IDENT $@11 assignment_expression .

    $default  reduce using rule 114 (assignment)


State 385

  146 binary_expression: binary_expression . '.' T_IDENT
  148                  | binary_expression . '[' expression ']'
  149                  | binary_expression . '~' binary_expression
  150                  | binary_expression . T_NMATCH binary_expression
  151                  | binary_expression . '&' binary_expression
  152                  | binary_expression . '|' binary_expression
  153                  | binary_expression . '+' binary_expression
  154                  | binary_expression . '^' binary_expression
  155                  | binary_expression . '-' binary_expression
  156                  | binary_expression . '*' binary_expression
  157                  | binary_expression . '/' binary_expression
  158                  | binary_expression . '%' binary_expression
  159                  | binary_expression . T_SHIFT_LEFT binary_expression
  160                  | binary_expression . T_SHIFT_RIGHT binary_expression
  161                  | binary_expression . T_POWER_TO binary_expression
  163                  | binary_expression . T_AND @14 binary_expression
  165                  | binary_expression . T_OR @15 binary_expression
  166                  | binary_expression . '<' binary_expression
  167                  | binary_expression . '>' binary_expression
  168                  | binary_expression . T_LE binary_expression
  169                  | binary_expression . T_GE binary_expression
  170                  | binary_expression . T_EQ binary_expression
  171                  | binary_expression . T_NE binary_expression
  208 for_to_clause: '(' opt_for_initializer $@18 ';' binary_expression . ';' $@19 for_increment $@20 ')'

    T_NMATCH       shift, and go to state 171
    T_NE           shift, and go to state 172
    T_EQ           shift, and go to state 173
    T_SHIFT_LEFT   shift, and go to state 174
    T_SHIFT_RIGHT  shift, and go to state 175
    T_OR           shift, and go to state 176
    T_AND          shift, and go to state 177
    T_LE           shift, and go to state 178
    T_GE           shift, and go to state 179
    T_POWER_TO     shift, and go to state 180
    '&'            shift, and go to state 181
    '|'            shift, and go to state 182
    '^'            shift, and go to state 183
    '~'            shift, and go to state 184
    '<'            shift, and go to state 185
    '>'            shift, and go to state 186
    '+'            shift, and go to state 187
    '-'            shift, and go to state 188
    '*'            shift, and go to state 189
    '/'            shift, and go to state 190
    '%'            shift, and go to state 191
    '['            shift, and go to state 192
    '.'            shift, and go to state 193
    ';'            shift, and go to state 392


State 386

  211 opt_for_initializer: type_name variable_identifier $@21 assignment_expression .

    $default  reduce using rule 211 (opt_for_initializer)


State 387

  216 in_clause: '(' type_name variable_identifier $@22 ':' . expression ')'

    T_NEW                    shift, and go to state 114
    T_IDENT                  shift, and go to state 115
    T_NUM                    shift, and go to state 88
    T_FLOATING_POINT_NUMBER  shift, and go to state 89
    T_STRING                 shift, and go to state 116
    T_CHARACTER              shift, and go to state 91
    T_TRUE                   shift, and go to state 92
    T_FALSE                  shift, and go to state 93
    T_FUNC                   shift, and go to state 117
    T_VARIABLE               shift, and go to state 118
    '!'                      shift, and go to state 119
    '~'                      shift, and go to state 120
    '+'                      shift, and go to state 121
    '-'                      shift, and go to state 122
    '*'                      shift, and go to state 123
    '['                      shift, and go to state 124
    '{'                      shift, and go to state 125
    '('                      shift, and go to state 126

    $default  reduce using rule 128 (range_expression)

    variable_reference      go to state 127
    expression              go to state 393
    range_expression        go to state 129
    simple_term             go to state 130
    constructor_expression  go to state 131
    unary_expression        go to state 132
    binary_expression       go to state 133
    value                   go to state 134
    string                  go to state 135
    call_expression         go to state 136
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_cast               go to state 140
    boolean_literal         go to state 96
    float_literal           go to state 97
    integer_literal         go to state 98
    character_literal       go to state 99
    simple_literal          go to state 141


State 388

  221 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 221 (local_block)


State 389

  228 else_clause: T_ELSE . $@27 local_block

    $default  reduce using rule 227 ($@27)

    $@27  go to state 394


State 390

  225 if_expression: T_IF condition $@25 local_block $@26 else_clause .

    $default  reduce using rule 225 (if_expression)


State 391

  200 switch_expression: T_SWITCH '(' value ')' $@16 '{' . case_clauses '}'

    T_CASE     shift, and go to state 395
    T_DEFAULT  shift, and go to state 396

    $default  reduce using rule 189 (case_clauses)

    case_clauses   go to state 397
    case_clause    go to state 398
    case_selector  go to state 399


State 392

  208 for_to_clause: '(' opt_for_initializer $@18 ';' binary_expression ';' . $@19 for_increment $@20 ')'

    $default  reduce using rule 206 ($@19)

    $@19  go to state 400


State 393

  216 in_clause: '(' type_name variable_identifier $@22 ':' expression . ')'

    ')'  shift, and go to state 401


State 394

  228 else_clause: T_ELSE $@27 . local_block

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 117
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 162
    '*'                shift, and go to state 123
    '['                shift, and go to state 124
    ';'                shift, and go to state 222
    '{'                shift, and go to state 364

    variable_reference      go to state 224
    var_decl                go to state 309
    block                   go to state 226
    statement               go to state 365
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    local_block             go to state 402
    if_expression           go to state 240
    call_expression         go to state 242
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_name               go to state 40


State 395

  192 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 403
    T_STRING  shift, and go to state 404
    '-'       shift, and go to state 94

    case_condition   go to state 405
    integer_literal  go to state 406


State 396

  193 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 407


State 397

  200 switch_expression: T_SWITCH '(' value ')' $@16 '{' case_clauses . '}'

    '}'  shift, and go to state 408


State 398

  190 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 395
    T_DEFAULT  shift, and go to state 396

    $default  reduce using rule 189 (case_clauses)

    case_clauses   go to state 409
    case_clause    go to state 398
    case_selector  go to state 399


State 399

  191 case_clause: case_selector . stmntlist

    error              shift, and go to state 212
    T_FOR              shift, and go to state 213
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 214
    T_FUNC             shift, and go to state 117
    T_IF               shift, and go to state 215
    T_WHILE            shift, and go to state 216
    T_GOTO             shift, and go to state 217
    T_SWITCH           shift, and go to state 218
    T_BREAK            shift, and go to state 219
    T_CONTINUE         shift, and go to state 220
    T_RETURN           shift, and go to state 221
    T_VARIABLE         shift, and go to state 162
    '*'                shift, and go to state 123
    '['                shift, and go to state 124
    ';'                shift, and go to state 222
    '{'                shift, and go to state 223

    T_CASE     reduce using rule 229 (stmntlist)
    T_DEFAULT  reduce using rule 229 (stmntlist)
    '}'        reduce using rule 229 (stmntlist)

    variable_reference      go to state 224
    var_decl                go to state 309
    block                   go to state 226
    statement               go to state 227
    assignment              go to state 228
    shorthand_assignment    go to state 229
    assignment_target       go to state 230
    increment_expression    go to state 231
    break                   go to state 232
    continue                go to state 233
    return_expression       go to state 234
    label                   go to state 235
    goto_expression         go to state 236
    switch_expression       go to state 237
    for_loop_expression     go to state 238
    while                   go to state 239
    if_expression           go to state 240
    stmntlist               go to state 410
    call_expression         go to state 242
    array_constructor       go to state 137
    map_constructor         go to state 138
    function_id_or_pointer  go to state 139
    type_name               go to state 40


State 400

  208 for_to_clause: '(' opt_for_initializer $@18 ';' binary_expression ';' $@19 . for_increment $@20 ')'

    T_IDENT     shift, and go to state 161
    T_VARIABLE  shift, and go to state 162

    variable_reference    go to state 411
    shorthand_assignment  go to state 412
    increment_expression  go to state 413
    for_increment         go to state 414


State 401

  216 in_clause: '(' type_name variable_identifier $@22 ':' expression ')' .

    $default  reduce using rule 216 (in_clause)


State 402

  228 else_clause: T_ELSE $@27 local_block .

    $default  reduce using rule 228 (else_clause)


State 403

  196 case_condition: T_NUM . T_DOTDOT T_NUM
  260 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 415

    $default  reduce using rule 260 (integer_literal)


State 404

  195 case_condition: T_STRING .

    $default  reduce using rule 195 (case_condition)


State 405

  192 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 416


State 406

  194 case_condition: integer_literal .

    $default  reduce using rule 194 (case_condition)


State 407

  193 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 193 (case_selector)


State 408

  200 switch_expression: T_SWITCH '(' value ')' $@16 '{' case_clauses '}' .

    $default  reduce using rule 200 (switch_expression)


State 409

  190 case_clauses: case_clause case_clauses .

    $default  reduce using rule 190 (case_clauses)


State 410

  191 case_clause: case_selector stmntlist .

    $default  reduce using rule 191 (case_clause)


State 411

  118 shorthand_assignment: variable_reference . $@12 shorthand_assignment_operator expression
  135 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 303
    T_MINUSMINUS  shift, and go to state 304

    $default  reduce using rule 117 ($@12)

    $@12                 go to state 305
    minusminus_plusplus  go to state 307


State 412

  204 for_increment: shorthand_assignment .

    $default  reduce using rule 204 (for_increment)


State 413

  203 for_increment: increment_expression .

    $default  reduce using rule 203 (for_increment)


State 414

  208 for_to_clause: '(' opt_for_initializer $@18 ';' binary_expression ';' $@19 for_increment . $@20 ')'

    $default  reduce using rule 207 ($@20)

    $@20  go to state 417


State 415

  196 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 418


State 416

  192 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 192 (case_selector)


State 417

  208 for_to_clause: '(' opt_for_initializer $@18 ';' binary_expression ';' $@19 for_increment $@20 . ')'

    ')'  shift, and go to state 419


State 418

  196 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 196 (case_condition)


State 419

  208 for_to_clause: '(' opt_for_initializer $@18 ';' binary_expression ';' $@19 for_increment $@20 ')' .

    $default  reduce using rule 208 (for_to_clause)
