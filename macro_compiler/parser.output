State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 49 conflicts: 10 shift/reduce
State 90 conflicts: 23 shift/reduce
State 101 conflicts: 1 reduce/reduce
State 108 conflicts: 45 reduce/reduce
State 115 conflicts: 22 shift/reduce
State 166 conflicts: 6 shift/reduce
State 169 conflicts: 1 shift/reduce
State 186 conflicts: 1 reduce/reduce
State 203 conflicts: 22 shift/reduce
State 229 conflicts: 1 reduce/reduce
State 245 conflicts: 1 shift/reduce
State 266 conflicts: 1 shift/reduce
State 275 conflicts: 1 shift/reduce
State 304 conflicts: 16 shift/reduce, 1 reduce/reduce
State 316 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | macro_definition macro_definitions

    8 namespace: %empty
    9          | T_NAMESPACE T_IDENT ';'

   10 prerequisites: %empty
   11              | prerequisites require

   12 require: T_REQUIRE T_STRING ';'

   13 global_declarations: %empty
   14                    | global_declarations constants ';'
   15                    | global_declarations global_var ';'

   16 scope: %empty
   17      | T_STATIC

   18 constants: T_CONST constant_list

   19 constant_list: constdef
   20              | constant_list ',' constdef

   21 $@3: %empty

   22 $@4: %empty

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   24 constant_literal: simple_literal
   25                 | T_STRING

   26 variable_identifier: T_IDENT
   27                    | T_NUM
   28                    | T_STRING

   29 variable_reference: T_VARIABLE
   30                   | T_IDENT

   31 macro_declaration: T_IDENT
   32                  | T_FUNC

   33 macro_type: scope T_VOID
   34           | scope type_name

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description

   36 global_var: scope var_decl

   37 var_decl: type_name variable_identifier assignment_expression
   38         | type_name variable_identifier

   39 optional_description: %empty
   40                     | T_STRING

   41 parameter_list: %empty
   42               | non_empty_pardecl

   43 non_empty_pardecl: par_decl
   44                  | non_empty_pardecl ',' par_decl

   45 par_decl: type_name variable_identifier

   46 $@5: %empty

   47 macro_definition: $@5 macrostart block

   48 block: '{' var_decls stmntlist closing_brace

   49 var_decls: %empty
   50          | var_decls var_decl ';'

   51 statement: ';'
   52          | call_expression ';'
   53          | assignment ';'
   54          | if_expression
   55          | while
   56          | foreach
   57          | switch_expression
   58          | break
   59          | continue
   60          | return_expression
   61          | goto
   62          | block
   63          | increment_expression
   64          | label
   65          | var_decl
   66          | error ';'

   67 assignment: variable_reference assignment_expression

   68 $@6: %empty

   69 assignment: variable_reference '.' T_IDENT $@6 assignment_expression
   70           | variable_reference '[' binary_expression ']' assignment_expression

   71 $@7: %empty

   72 assignment: variable_reference $@7 shorthand_assignment_operator simple_expression

   73 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   74                              | T_SH_ASSIGN_DIV
   75                              | T_SH_ASSIGN_MOD
   76                              | T_SH_ASSIGN_PLUS
   77                              | T_SH_ASSIGN_MINUS

   78 assignment_expression: T_ASSIGN simple_expression

   79 simple_expression: binary_expression
   80                  | range_expression

   81 binary_expression_or_range: binary_expression
   82                           | range_expression

   83 range_expression: %empty

   84 $@8: %empty

   85 range_expression: binary_expression T_DOTDOT binary_expression $@8 range_increment

   86 range_increment: %empty
   87                | T_DOTDOT binary_expression

   88 increment_expression: variable_reference T_MINUSMINUS
   89                     | variable_reference T_PLUSPLUS

   90 s_bterm: value
   91        | call_expression
   92        | constructor_expression

   93 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

   94 binary_expression: s_bterm
   95                  | type_cast s_bterm
   96                  | '-' T_NUM
   97                  | binary_expression '[' binary_expression_or_range ']'
   98                  | '!' binary_expression
   99                  | '~' binary_expression
  100                  | '+' binary_expression
  101                  | '-' binary_expression
  102                  | binary_expression '~' binary_expression
  103                  | binary_expression T_NMATCH binary_expression
  104                  | binary_expression '&' binary_expression
  105                  | binary_expression '|' binary_expression
  106                  | binary_expression '+' binary_expression
  107                  | binary_expression '^' binary_expression
  108                  | binary_expression '-' binary_expression
  109                  | binary_expression '*' binary_expression
  110                  | binary_expression '/' binary_expression
  111                  | binary_expression '%' binary_expression
  112                  | binary_expression T_SHIFT_LEFT binary_expression
  113                  | binary_expression T_SHIFT_RIGHT binary_expression
  114                  | binary_expression T_POWER_TO binary_expression
  115                  | binary_expression T_AND binary_expression
  116                  | binary_expression T_OR binary_expression
  117                  | binary_expression '<' binary_expression
  118                  | binary_expression '>' binary_expression
  119                  | binary_expression T_LE binary_expression
  120                  | binary_expression T_GE binary_expression
  121                  | binary_expression T_EQ binary_expression
  122                  | binary_expression T_NE binary_expression
  123                  | '(' binary_expression ')'
  124                  | variable_reference assignment_expression

  125 condition: '(' binary_expression ')'
  126          | '(' binary_expression

  127 value: T_VARIABLE
  128      | struct_reference
  129      | string
  130      | simple_literal
  131      | map_literal
  132      | array_literal
  133      | T_IDENT

  134 struct_reference: T_VARIABLE '.' T_IDENT
  135                 | struct_reference '.' T_IDENT

  136 $@9: %empty

  137 map_literal: '{' $@9 optional_map_associates closing_brace

  138 optional_map_associates: %empty
  139                        | map_associates

  140 map_associates: map_associate
  141               | map_associates ',' map_associate

  142 map_associate: T_STRING T_ASSOC_ARROW simple_literal
  143              | T_STRING T_ASSOC_ARROW T_STRING

  144 $@10: %empty

  145 array_literal: '[' $@10 ']'

  146 $@11: %empty

  147 array_literal: '[' $@11 array_elements ']'

  148 array_elements: array_elements ',' array_element
  149               | array_element

  150 array_element: simple_array_element
  151              | T_STRING

  152 simple_array_element: T_NUM
  153                     | T_CHARACTER
  154                     | T_TRUE
  155                     | T_FALSE

  156 string: T_STRING
  157       | string T_STRING

  158 break: T_BREAK opt_num ';'

  159 continue: T_CONTINUE opt_num ';'

  160 return_expression: T_RETURN optional_bterm

  161 optional_bterm: %empty
  162               | binary_expression

  163 opt_num: %empty
  164        | T_NUM

  165 case_clauses: %empty
  166             | case_clause case_clauses

  167 case_clause: case_selector stmntlist

  168 case_selector: T_CASE case_condition ':'
  169              | T_DEFAULT ':'

  170 case_condition: T_NUM
  171               | T_STRING
  172               | T_NUM T_DOTDOT T_NUM

  173 label: T_IDENT ':'

  174 goto: T_GOTO T_IDENT

  175 $@12: %empty

  176 in_clause: '(' type_name variable_identifier $@12 ':' simple_expression ')'

  177 $@13: %empty

  178 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses '}'

  179 $@14: %empty

  180 $@15: %empty

  181 foreach: T_FOR $@14 in_clause $@15 local_block

  182 $@16: %empty

  183 $@17: %empty

  184 while: T_WHILE $@16 condition $@17 local_block

  185 local_block: statement
  186            | '{' stmntlist closing_brace

  187 closing_brace: '}'

  188 $@18: %empty

  189 $@19: %empty

  190 if_expression: T_IF condition $@18 local_block $@19 else_clause

  191 else_clause: %empty

  192 $@20: %empty

  193 else_clause: T_ELSE $@20 local_block

  194 stmntlist: %empty

  195 $@21: %empty

  196 stmntlist: statement $@21 stmntlist

  197 closing_paren: ')'

  198 @22: %empty

  199 call_expression: T_FUNC '(' @22 parameter_list closing_paren

  200 @23: %empty

  201 call_expression: function_id_or_pointer '(' @23 parameter_list closing_paren

  202 function_id_or_pointer: '*' variable_reference
  203                       | T_IDENT
  204                       | error

  205 parameter_list: nonempty_parameters

  206 nonempty_parameters: parameter
  207                    | nonempty_parameters ',' parameter
  208                    | error

  209 parameter: simple_expression

  210 type_cast: '(' type_name ')'

  211 type_name: T_TYPE_IDENTIFIER
  212          | T_TYPE_IDENTIFIER array_dimension

  213 array_dimension: '[' ']'
  214                | '[' T_NUM ']'

  215 boolean_literal: T_TRUE
  216                | T_FALSE

  217 float_literal: T_FLOATING_POINT_NUMBER

  218 integer_literal: T_NUM

  219 character_literal: T_CHARACTER

  220 simple_literal: integer_literal
  221               | float_literal
  222               | character_literal
  223               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 98
    '%' (37) 111
    '&' (38) 104
    '(' (40) 35 93 123 125 126 176 178 199 201 210
    ')' (41) 35 93 123 125 176 178 197 210
    '*' (42) 109 202
    '+' (43) 100 106
    ',' (44) 20 44 141 148 207
    '-' (45) 96 101 108
    '.' (46) 69 134 135
    '/' (47) 110
    ':' (58) 168 169 173 176
    ';' (59) 9 12 14 15 50 51 52 53 66 158 159
    '<' (60) 117
    '>' (62) 118
    '[' (91) 70 97 145 147 213 214
    ']' (93) 70 97 145 147 213 214
    '^' (94) 107
    '{' (123) 48 137 178 186
    '|' (124) 105
    '}' (125) 178 187
    '~' (126) 99 102
    error (256) 66 204 208
    T_NAMESPACE (258) 9
    T_REQUIRE (259) 12
    T_FOR (260) 181
    T_NEW (261) 93
    T_STATIC (262) 17
    T_VOID (263) 33
    T_TYPE_IDENTIFIER (264) 93 211 212
    T_IDENT (265) 9 26 30 31 69 133 134 135 173 174 203
    T_NUM (266) 27 96 152 164 170 172 214 218
    T_FLOATING_POINT_NUMBER (267) 217
    T_STRING (268) 12 25 28 40 142 143 151 156 157 171
    T_CHARACTER (269) 153 219
    T_CONST (270) 18
    T_TRUE (271) 154 215
    T_FALSE (272) 155 216
    T_FUNC (273) 32 199
    T_DOTDOT (274) 85 87 172
    T_PLUSPLUS (275) 89
    T_MINUSMINUS (276) 88
    T_IF (277) 190
    T_ELSE (278) 193
    T_WHILE (279) 184
    T_GOTO (280) 174
    T_SH_ASSIGN_PLUS (281) 76
    T_SH_ASSIGN_MINUS (282) 77
    T_SH_ASSIGN_MULT (283) 73
    T_SH_ASSIGN_DIV (284) 74
    T_SH_ASSIGN_MOD (285) 75
    T_SWITCH (286) 178
    T_CASE (287) 168
    T_DEFAULT (288) 169
    T_BREAK (289) 158
    T_CONTINUE (290) 159
    T_RETURN (291) 160
    T_VARIABLE (292) 29 127 134
    T_ASSOC_ARROW (293) 142 143
    T_NMATCH (294) 103
    T_ASSIGN (295) 23 78
    T_NE (296) 122
    T_EQ (297) 121
    T_SHIFT_LEFT (298) 112
    T_SHIFT_RIGHT (299) 113
    T_OR (300) 116
    T_AND (301) 115
    T_LE (302) 119
    T_GE (303) 120
    T_POWER_TO (304) 114


Nonterminals, with rules where they appear

    $accept (72)
        on left: 0
    file_structure (73)
        on left: 3
        on right: 0
    $@1 (74)
        on left: 1
        on right: 3
    $@2 (75)
        on left: 2
        on right: 3
    header_delimiter (76)
        on left: 4 5
        on right: 3
    macro_definitions (77)
        on left: 6 7
        on right: 3 7
    namespace (78)
        on left: 8 9
        on right: 3
    prerequisites (79)
        on left: 10 11
        on right: 3 11
    require (80)
        on left: 12
        on right: 11
    global_declarations (81)
        on left: 13 14 15
        on right: 3 14 15
    scope (82)
        on left: 16 17
        on right: 33 34 36
    constants (83)
        on left: 18
        on right: 14
    constant_list (84)
        on left: 19 20
        on right: 18 20
    constdef (85)
        on left: 23
        on right: 19 20
    $@3 (86)
        on left: 21
        on right: 23
    $@4 (87)
        on left: 22
        on right: 23
    constant_literal (88)
        on left: 24 25
        on right: 23
    variable_identifier (89)
        on left: 26 27 28
        on right: 23 37 38 45 176
    variable_reference (90)
        on left: 29 30
        on right: 67 69 70 72 88 89 124 202
    macro_declaration (91)
        on left: 31 32
        on right: 35
    macro_type (92)
        on left: 33 34
        on right: 35
    macrostart (93)
        on left: 35
        on right: 47
    global_var (94)
        on left: 36
        on right: 15
    var_decl (95)
        on left: 37 38
        on right: 36 50 65
    optional_description (96)
        on left: 39 40
        on right: 35
    parameter_list (97)
        on left: 41 42 205
        on right: 35 199 201
    non_empty_pardecl (98)
        on left: 43 44
        on right: 42 44
    par_decl (99)
        on left: 45
        on right: 43 44
    macro_definition (100)
        on left: 47
        on right: 7
    $@5 (101)
        on left: 46
        on right: 47
    block (102)
        on left: 48
        on right: 47 62
    var_decls (103)
        on left: 49 50
        on right: 48 50
    statement (104)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
        on right: 185 196
    assignment (105)
        on left: 67 69 70 72
        on right: 53
    $@6 (106)
        on left: 68
        on right: 69
    $@7 (107)
        on left: 71
        on right: 72
    shorthand_assignment_operator (108)
        on left: 73 74 75 76 77
        on right: 72
    assignment_expression (109)
        on left: 78
        on right: 37 67 69 70 124
    simple_expression (110)
        on left: 79 80
        on right: 72 78 176 209
    binary_expression_or_range (111)
        on left: 81 82
        on right: 97
    range_expression (112)
        on left: 83 85
        on right: 80 82
    $@8 (113)
        on left: 84
        on right: 85
    range_increment (114)
        on left: 86 87
        on right: 85
    increment_expression (115)
        on left: 88 89
        on right: 63
    s_bterm (116)
        on left: 90 91 92
        on right: 94 95
    constructor_expression (117)
        on left: 93
        on right: 92
    binary_expression (118)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124
        on right: 70 79 81 85 87 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 125 126 162
    condition (119)
        on left: 125 126
        on right: 184 190
    value (120)
        on left: 127 128 129 130 131 132 133
        on right: 90 178
    struct_reference (121)
        on left: 134 135
        on right: 128 135
    map_literal (122)
        on left: 137
        on right: 131
    $@9 (123)
        on left: 136
        on right: 137
    optional_map_associates (124)
        on left: 138 139
        on right: 137
    map_associates (125)
        on left: 140 141
        on right: 139 141
    map_associate (126)
        on left: 142 143
        on right: 140 141
    array_literal (127)
        on left: 145 147
        on right: 132
    $@10 (128)
        on left: 144
        on right: 145
    $@11 (129)
        on left: 146
        on right: 147
    array_elements (130)
        on left: 148 149
        on right: 147 148
    array_element (131)
        on left: 150 151
        on right: 148 149
    simple_array_element (132)
        on left: 152 153 154 155
        on right: 150
    string (133)
        on left: 156 157
        on right: 129 157
    break (134)
        on left: 158
        on right: 58
    continue (135)
        on left: 159
        on right: 59
    return_expression (136)
        on left: 160
        on right: 60
    optional_bterm (137)
        on left: 161 162
        on right: 160
    opt_num (138)
        on left: 163 164
        on right: 158 159
    case_clauses (139)
        on left: 165 166
        on right: 166 178
    case_clause (140)
        on left: 167
        on right: 166
    case_selector (141)
        on left: 168 169
        on right: 167
    case_condition (142)
        on left: 170 171 172
        on right: 168
    label (143)
        on left: 173
        on right: 64
    goto (144)
        on left: 174
        on right: 61
    in_clause (145)
        on left: 176
        on right: 181
    $@12 (146)
        on left: 175
        on right: 176
    switch_expression (147)
        on left: 178
        on right: 57
    $@13 (148)
        on left: 177
        on right: 178
    foreach (149)
        on left: 181
        on right: 56
    $@14 (150)
        on left: 179
        on right: 181
    $@15 (151)
        on left: 180
        on right: 181
    while (152)
        on left: 184
        on right: 55
    $@16 (153)
        on left: 182
        on right: 184
    $@17 (154)
        on left: 183
        on right: 184
    local_block (155)
        on left: 185 186
        on right: 181 184 190 193
    closing_brace (156)
        on left: 187
        on right: 48 137 186
    if_expression (157)
        on left: 190
        on right: 54
    $@18 (158)
        on left: 188
        on right: 190
    $@19 (159)
        on left: 189
        on right: 190
    else_clause (160)
        on left: 191 193
        on right: 190
    $@20 (161)
        on left: 192
        on right: 193
    stmntlist (162)
        on left: 194 196
        on right: 48 167 186 196
    $@21 (163)
        on left: 195
        on right: 196
    closing_paren (164)
        on left: 197
        on right: 199 201
    call_expression (165)
        on left: 199 201
        on right: 52 91
    @22 (166)
        on left: 198
        on right: 199
    @23 (167)
        on left: 200
        on right: 201
    function_id_or_pointer (168)
        on left: 202 203 204
        on right: 201
    nonempty_parameters (169)
        on left: 206 207 208
        on right: 205 207
    parameter (170)
        on left: 209
        on right: 206 207
    type_cast (171)
        on left: 210
        on right: 95
    type_name (172)
        on left: 211 212
        on right: 34 37 38 45 176 210
    array_dimension (173)
        on left: 213 214
        on right: 212
    boolean_literal (174)
        on left: 215 216
        on right: 223
    float_literal (175)
        on left: 217
        on right: 221
    integer_literal (176)
        on left: 218
        on right: 220
    character_literal (177)
        on left: 219
        on right: 222
    simple_literal (178)
        on left: 220 221 222 223
        on right: 24 130 142


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 8 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

    9 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites global_declarations $@2 header_delimiter macro_definitions

    $default  reduce using rule 10 (prerequisites)

    prerequisites  go to state 7


State 6

    9 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . global_declarations $@2 header_delimiter macro_definitions
   11 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 13 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

    9 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 9 (namespace)


State 9

   12 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   11 prerequisites: prerequisites require .

    $default  reduce using rule 11 (prerequisites)


State 11

    3 file_structure: $@1 namespace prerequisites global_declarations . $@2 header_delimiter macro_definitions
   14 global_declarations: global_declarations . constants ';'
   15                    | global_declarations . global_var ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14

    T_STATIC           [reduce using rule 2 ($@2)]
    T_TYPE_IDENTIFIER  reduce using rule 2 ($@2)
    T_TYPE_IDENTIFIER  [reduce using rule 16 (scope)]
    $default           reduce using rule 2 ($@2)

    $@2         go to state 15
    scope       go to state 16
    constants   go to state 17
    global_var  go to state 18


State 12

   12 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 19


State 13

   17 scope: T_STATIC .

    $default  reduce using rule 17 (scope)


State 14

   18 constants: T_CONST . constant_list

    $default  reduce using rule 21 ($@3)

    constant_list  go to state 20
    constdef       go to state 21
    $@3            go to state 22


State 15

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 . header_delimiter macro_definitions

    '!'  shift, and go to state 23

    $default  reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 24


State 16

   36 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    var_decl   go to state 26
    type_name  go to state 27


State 17

   14 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 28


State 18

   15 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 29


State 19

   12 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 12 (require)


State 20

   18 constants: T_CONST constant_list .
   20 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 30

    $default  reduce using rule 18 (constants)


State 21

   19 constant_list: constdef .

    $default  reduce using rule 19 (constant_list)


State 22

   23 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 34


State 23

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 24

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 46 ($@5)

    macro_definitions  go to state 35
    macro_definition   go to state 36
    $@5                go to state 37


State 25

  211 type_name: T_TYPE_IDENTIFIER .
  212          | T_TYPE_IDENTIFIER . array_dimension

    '['  shift, and go to state 38

    $default  reduce using rule 211 (type_name)

    array_dimension  go to state 39


State 26

   36 global_var: scope var_decl .

    $default  reduce using rule 36 (global_var)


State 27

   37 var_decl: type_name . variable_identifier assignment_expression
   38         | type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 40


State 28

   14 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 14 (global_declarations)


State 29

   15 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 15 (global_declarations)


State 30

   20 constant_list: constant_list ',' . constdef

    $default  reduce using rule 21 ($@3)

    constdef  go to state 41
    $@3       go to state 22


State 31

   26 variable_identifier: T_IDENT .

    $default  reduce using rule 26 (variable_identifier)


State 32

   27 variable_identifier: T_NUM .

    $default  reduce using rule 27 (variable_identifier)


State 33

   28 variable_identifier: T_STRING .

    $default  reduce using rule 28 (variable_identifier)


State 34

   23 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 42


State 35

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 36

    7 macro_definitions: macro_definition . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 46 ($@5)

    macro_definitions  go to state 43
    macro_definition   go to state 36
    $@5                go to state 37


State 37

   47 macro_definition: $@5 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 16 (scope)

    scope       go to state 44
    macro_type  go to state 45
    macrostart  go to state 46


State 38

  213 array_dimension: '[' . ']'
  214                | '[' . T_NUM ']'

    T_NUM  shift, and go to state 47
    ']'    shift, and go to state 48


State 39

  212 type_name: T_TYPE_IDENTIFIER array_dimension .

    $default  reduce using rule 212 (type_name)


State 40

   37 var_decl: type_name variable_identifier . assignment_expression
   38         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 49

    $default  reduce using rule 38 (var_decl)

    assignment_expression  go to state 50


State 41

   20 constant_list: constant_list ',' constdef .

    $default  reduce using rule 20 (constant_list)


State 42

   23 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 53
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56

    constant_literal   go to state 57
    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 62


State 43

    7 macro_definitions: macro_definition macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 44

   33 macro_type: scope . T_VOID
   34           | scope . type_name

    T_VOID             shift, and go to state 63
    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 64


State 45

   35 macrostart: macro_type . macro_declaration '(' parameter_list ')' optional_description

    T_IDENT  shift, and go to state 65
    T_FUNC   shift, and go to state 66

    macro_declaration  go to state 67


State 46

   47 macro_definition: $@5 macrostart . block

    '{'  shift, and go to state 68

    block  go to state 69


State 47

  214 array_dimension: '[' T_NUM . ']'

    ']'  shift, and go to state 70


State 48

  213 array_dimension: '[' ']' .

    $default  reduce using rule 213 (array_dimension)


State 49

   78 assignment_expression: T_ASSIGN . simple_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    error              [reduce using rule 83 (range_expression)]
    T_FOR              reduce using rule 83 (range_expression)
    T_TYPE_IDENTIFIER  reduce using rule 83 (range_expression)
    T_IDENT            [reduce using rule 83 (range_expression)]
    T_FUNC             [reduce using rule 83 (range_expression)]
    T_DOTDOT           reduce using rule 83 (range_expression)
    T_IF               reduce using rule 83 (range_expression)
    T_ELSE             reduce using rule 83 (range_expression)
    T_WHILE            reduce using rule 83 (range_expression)
    T_GOTO             reduce using rule 83 (range_expression)
    T_SWITCH           reduce using rule 83 (range_expression)
    T_CASE             reduce using rule 83 (range_expression)
    T_DEFAULT          reduce using rule 83 (range_expression)
    T_BREAK            reduce using rule 83 (range_expression)
    T_CONTINUE         reduce using rule 83 (range_expression)
    T_RETURN           reduce using rule 83 (range_expression)
    T_VARIABLE         [reduce using rule 83 (range_expression)]
    T_NMATCH           reduce using rule 83 (range_expression)
    T_NE               reduce using rule 83 (range_expression)
    T_EQ               reduce using rule 83 (range_expression)
    T_SHIFT_LEFT       reduce using rule 83 (range_expression)
    T_SHIFT_RIGHT      reduce using rule 83 (range_expression)
    T_OR               reduce using rule 83 (range_expression)
    T_AND              reduce using rule 83 (range_expression)
    T_LE               reduce using rule 83 (range_expression)
    T_GE               reduce using rule 83 (range_expression)
    T_POWER_TO         reduce using rule 83 (range_expression)
    '&'                reduce using rule 83 (range_expression)
    '|'                reduce using rule 83 (range_expression)
    '^'                reduce using rule 83 (range_expression)
    '~'                [reduce using rule 83 (range_expression)]
    '<'                reduce using rule 83 (range_expression)
    '>'                reduce using rule 83 (range_expression)
    '+'                [reduce using rule 83 (range_expression)]
    '-'                [reduce using rule 83 (range_expression)]
    '*'                [reduce using rule 83 (range_expression)]
    '/'                reduce using rule 83 (range_expression)
    '%'                reduce using rule 83 (range_expression)
    '['                [reduce using rule 83 (range_expression)]
    ';'                reduce using rule 83 (range_expression)
    ','                reduce using rule 83 (range_expression)
    ')'                reduce using rule 83 (range_expression)
    '{'                [reduce using rule 83 (range_expression)]
    ']'                reduce using rule 83 (range_expression)
    '}'                reduce using rule 83 (range_expression)

    variable_reference      go to state 85
    simple_expression       go to state 86
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 50

   37 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 37 (var_decl)


State 51

  218 integer_literal: T_NUM .

    $default  reduce using rule 218 (integer_literal)


State 52

  217 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 217 (float_literal)


State 53

   25 constant_literal: T_STRING .

    $default  reduce using rule 25 (constant_literal)


State 54

  219 character_literal: T_CHARACTER .

    $default  reduce using rule 219 (character_literal)


State 55

  215 boolean_literal: T_TRUE .

    $default  reduce using rule 215 (boolean_literal)


State 56

  216 boolean_literal: T_FALSE .

    $default  reduce using rule 216 (boolean_literal)


State 57

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 22 ($@4)

    $@4  go to state 100


State 58

  223 simple_literal: boolean_literal .

    $default  reduce using rule 223 (simple_literal)


State 59

  221 simple_literal: float_literal .

    $default  reduce using rule 221 (simple_literal)


State 60

  220 simple_literal: integer_literal .

    $default  reduce using rule 220 (simple_literal)


State 61

  222 simple_literal: character_literal .

    $default  reduce using rule 222 (simple_literal)


State 62

   24 constant_literal: simple_literal .

    $default  reduce using rule 24 (constant_literal)


State 63

   33 macro_type: scope T_VOID .

    $default  reduce using rule 33 (macro_type)


State 64

   34 macro_type: scope type_name .

    $default  reduce using rule 34 (macro_type)


State 65

   31 macro_declaration: T_IDENT .

    $default  reduce using rule 31 (macro_declaration)


State 66

   32 macro_declaration: T_FUNC .

    $default  reduce using rule 32 (macro_declaration)


State 67

   35 macrostart: macro_type macro_declaration . '(' parameter_list ')' optional_description

    '('  shift, and go to state 101


State 68

   48 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 49 (var_decls)

    var_decls  go to state 102


State 69

   47 macro_definition: $@5 macrostart block .

    $default  reduce using rule 47 (macro_definition)


State 70

  214 array_dimension: '[' T_NUM ']' .

    $default  reduce using rule 214 (array_dimension)


State 71

  204 function_id_or_pointer: error .

    $default  reduce using rule 204 (function_id_or_pointer)


State 72

   93 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 103


State 73

   30 variable_reference: T_IDENT .
  133 value: T_IDENT .
  203 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 30 (variable_reference)
    '('       reduce using rule 203 (function_id_or_pointer)
    $default  reduce using rule 133 (value)


State 74

  156 string: T_STRING .

    $default  reduce using rule 156 (string)


State 75

  199 call_expression: T_FUNC . '(' @22 parameter_list closing_paren

    '('  shift, and go to state 104


State 76

   29 variable_reference: T_VARIABLE .
  127 value: T_VARIABLE .
  134 struct_reference: T_VARIABLE . '.' T_IDENT

    '.'  shift, and go to state 105

    T_ASSIGN  reduce using rule 29 (variable_reference)
    $default  reduce using rule 127 (value)


State 77

   99 binary_expression: '~' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 106
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 78

  100 binary_expression: '+' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 107
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 79

   96 binary_expression: '-' . T_NUM
  101                  | '-' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 108
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 109
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 80

  202 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 110
    T_VARIABLE  shift, and go to state 111

    variable_reference  go to state 112


State 81

  145 array_literal: '[' . $@10 ']'
  147              | '[' . $@11 array_elements ']'

    ']'       reduce using rule 144 ($@10)
    $default  reduce using rule 146 ($@11)

    $@10  go to state 113
    $@11  go to state 114


State 82

   98 binary_expression: '!' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 115
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 83

  123 binary_expression: '(' . binary_expression ')'
  210 type_cast: '(' . type_name ')'

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 116
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    type_name               go to state 117
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 84

  137 map_literal: '{' . $@9 optional_map_associates closing_brace

    $default  reduce using rule 136 ($@9)

    $@9  go to state 118


State 85

  124 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 119


State 86

   78 assignment_expression: T_ASSIGN simple_expression .

    $default  reduce using rule 78 (assignment_expression)


State 87

   80 simple_expression: range_expression .

    $default  reduce using rule 80 (simple_expression)


State 88

   94 binary_expression: s_bterm .

    $default  reduce using rule 94 (binary_expression)


State 89

   92 s_bterm: constructor_expression .

    $default  reduce using rule 92 (s_bterm)


State 90

   79 simple_expression: binary_expression .
   85 range_expression: binary_expression . T_DOTDOT binary_expression $@8 range_increment
   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 120
    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_DOTDOT       [reduce using rule 79 (simple_expression)]
    T_NMATCH       [reduce using rule 79 (simple_expression)]
    T_NE           [reduce using rule 79 (simple_expression)]
    T_EQ           [reduce using rule 79 (simple_expression)]
    T_SHIFT_LEFT   [reduce using rule 79 (simple_expression)]
    T_SHIFT_RIGHT  [reduce using rule 79 (simple_expression)]
    T_OR           [reduce using rule 79 (simple_expression)]
    T_AND          [reduce using rule 79 (simple_expression)]
    T_LE           [reduce using rule 79 (simple_expression)]
    T_GE           [reduce using rule 79 (simple_expression)]
    T_POWER_TO     [reduce using rule 79 (simple_expression)]
    '&'            [reduce using rule 79 (simple_expression)]
    '|'            [reduce using rule 79 (simple_expression)]
    '^'            [reduce using rule 79 (simple_expression)]
    '~'            [reduce using rule 79 (simple_expression)]
    '<'            [reduce using rule 79 (simple_expression)]
    '>'            [reduce using rule 79 (simple_expression)]
    '+'            [reduce using rule 79 (simple_expression)]
    '-'            [reduce using rule 79 (simple_expression)]
    '*'            [reduce using rule 79 (simple_expression)]
    '/'            [reduce using rule 79 (simple_expression)]
    '%'            [reduce using rule 79 (simple_expression)]
    '['            [reduce using rule 79 (simple_expression)]
    $default       reduce using rule 79 (simple_expression)


State 91

   90 s_bterm: value .

    $default  reduce using rule 90 (s_bterm)


State 92

  128 value: struct_reference .
  135 struct_reference: struct_reference . '.' T_IDENT

    '.'  shift, and go to state 143

    $default  reduce using rule 128 (value)


State 93

  131 value: map_literal .

    $default  reduce using rule 131 (value)


State 94

  132 value: array_literal .

    $default  reduce using rule 132 (value)


State 95

  129 value: string .
  157 string: string . T_STRING

    T_STRING  shift, and go to state 144

    $default  reduce using rule 129 (value)


State 96

   91 s_bterm: call_expression .

    $default  reduce using rule 91 (s_bterm)


State 97

  201 call_expression: function_id_or_pointer . '(' @23 parameter_list closing_paren

    '('  shift, and go to state 145


State 98

   95 binary_expression: type_cast . s_bterm

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 146
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 147
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '{'                      shift, and go to state 84

    s_bterm                 go to state 148
    constructor_expression  go to state 89
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 99

  130 value: simple_literal .

    $default  reduce using rule 130 (value)


State 100

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 23 (constdef)


State 101

   35 macrostart: macro_type macro_declaration '(' . parameter_list ')' optional_description

    error                    shift, and go to state 149
    T_NEW                    shift, and go to state 72
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ','  reduce using rule 83 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 83 (range_expression)]

    variable_reference      go to state 85
    parameter_list          go to state 150
    non_empty_pardecl       go to state 151
    par_decl                go to state 152
    simple_expression       go to state 153
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 154
    parameter               go to state 155
    type_cast               go to state 98
    type_name               go to state 156
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 102

   48 block: '{' var_decls . stmntlist closing_brace
   50 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 68

    '}'  reduce using rule 194 (stmntlist)

    variable_reference      go to state 168
    var_decl                go to state 169
    block                   go to state 170
    statement               go to state 171
    assignment              go to state 172
    increment_expression    go to state 173
    break                   go to state 174
    continue                go to state 175
    return_expression       go to state 176
    label                   go to state 177
    goto                    go to state 178
    switch_expression       go to state 179
    foreach                 go to state 180
    while                   go to state 181
    if_expression           go to state 182
    stmntlist               go to state 183
    call_expression         go to state 184
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 103

   93 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 185


State 104

  199 call_expression: T_FUNC '(' . @22 parameter_list closing_paren

    $default  reduce using rule 198 (@22)

    @22  go to state 186


State 105

  134 struct_reference: T_VARIABLE '.' . T_IDENT

    T_IDENT  shift, and go to state 187


State 106

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   99                  | '~' binary_expression .
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 99 (binary_expression)


State 107

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  100                  | '+' binary_expression .
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 100 (binary_expression)


State 108

   96 binary_expression: '-' T_NUM .
  218 integer_literal: T_NUM .

    error              reduce using rule 96 (binary_expression)
    error              [reduce using rule 218 (integer_literal)]
    T_FOR              reduce using rule 96 (binary_expression)
    T_FOR              [reduce using rule 218 (integer_literal)]
    T_TYPE_IDENTIFIER  reduce using rule 96 (binary_expression)
    T_TYPE_IDENTIFIER  [reduce using rule 218 (integer_literal)]
    T_IDENT            reduce using rule 96 (binary_expression)
    T_IDENT            [reduce using rule 218 (integer_literal)]
    T_FUNC             reduce using rule 96 (binary_expression)
    T_FUNC             [reduce using rule 218 (integer_literal)]
    T_DOTDOT           reduce using rule 96 (binary_expression)
    T_DOTDOT           [reduce using rule 218 (integer_literal)]
    T_IF               reduce using rule 96 (binary_expression)
    T_IF               [reduce using rule 218 (integer_literal)]
    T_ELSE             reduce using rule 96 (binary_expression)
    T_ELSE             [reduce using rule 218 (integer_literal)]
    T_WHILE            reduce using rule 96 (binary_expression)
    T_WHILE            [reduce using rule 218 (integer_literal)]
    T_GOTO             reduce using rule 96 (binary_expression)
    T_GOTO             [reduce using rule 218 (integer_literal)]
    T_SWITCH           reduce using rule 96 (binary_expression)
    T_SWITCH           [reduce using rule 218 (integer_literal)]
    T_CASE             reduce using rule 96 (binary_expression)
    T_CASE             [reduce using rule 218 (integer_literal)]
    T_DEFAULT          reduce using rule 96 (binary_expression)
    T_DEFAULT          [reduce using rule 218 (integer_literal)]
    T_BREAK            reduce using rule 96 (binary_expression)
    T_BREAK            [reduce using rule 218 (integer_literal)]
    T_CONTINUE         reduce using rule 96 (binary_expression)
    T_CONTINUE         [reduce using rule 218 (integer_literal)]
    T_RETURN           reduce using rule 96 (binary_expression)
    T_RETURN           [reduce using rule 218 (integer_literal)]
    T_VARIABLE         reduce using rule 96 (binary_expression)
    T_VARIABLE         [reduce using rule 218 (integer_literal)]
    T_NMATCH           reduce using rule 96 (binary_expression)
    T_NMATCH           [reduce using rule 218 (integer_literal)]
    T_NE               reduce using rule 96 (binary_expression)
    T_NE               [reduce using rule 218 (integer_literal)]
    T_EQ               reduce using rule 96 (binary_expression)
    T_EQ               [reduce using rule 218 (integer_literal)]
    T_SHIFT_LEFT       reduce using rule 96 (binary_expression)
    T_SHIFT_LEFT       [reduce using rule 218 (integer_literal)]
    T_SHIFT_RIGHT      reduce using rule 96 (binary_expression)
    T_SHIFT_RIGHT      [reduce using rule 218 (integer_literal)]
    T_OR               reduce using rule 96 (binary_expression)
    T_OR               [reduce using rule 218 (integer_literal)]
    T_AND              reduce using rule 96 (binary_expression)
    T_AND              [reduce using rule 218 (integer_literal)]
    T_LE               reduce using rule 96 (binary_expression)
    T_LE               [reduce using rule 218 (integer_literal)]
    T_GE               reduce using rule 96 (binary_expression)
    T_GE               [reduce using rule 218 (integer_literal)]
    T_POWER_TO         reduce using rule 96 (binary_expression)
    T_POWER_TO         [reduce using rule 218 (integer_literal)]
    '&'                reduce using rule 96 (binary_expression)
    '&'                [reduce using rule 218 (integer_literal)]
    '|'                reduce using rule 96 (binary_expression)
    '|'                [reduce using rule 218 (integer_literal)]
    '^'                reduce using rule 96 (binary_expression)
    '^'                [reduce using rule 218 (integer_literal)]
    '~'                reduce using rule 96 (binary_expression)
    '~'                [reduce using rule 218 (integer_literal)]
    '<'                reduce using rule 96 (binary_expression)
    '<'                [reduce using rule 218 (integer_literal)]
    '>'                reduce using rule 96 (binary_expression)
    '>'                [reduce using rule 218 (integer_literal)]
    '+'                reduce using rule 96 (binary_expression)
    '+'                [reduce using rule 218 (integer_literal)]
    '-'                reduce using rule 96 (binary_expression)
    '-'                [reduce using rule 218 (integer_literal)]
    '*'                reduce using rule 96 (binary_expression)
    '*'                [reduce using rule 218 (integer_literal)]
    '/'                reduce using rule 96 (binary_expression)
    '/'                [reduce using rule 218 (integer_literal)]
    '%'                reduce using rule 96 (binary_expression)
    '%'                [reduce using rule 218 (integer_literal)]
    '['                reduce using rule 96 (binary_expression)
    '['                [reduce using rule 218 (integer_literal)]
    ';'                reduce using rule 96 (binary_expression)
    ';'                [reduce using rule 218 (integer_literal)]
    ','                reduce using rule 96 (binary_expression)
    ','                [reduce using rule 218 (integer_literal)]
    ')'                reduce using rule 96 (binary_expression)
    ')'                [reduce using rule 218 (integer_literal)]
    '{'                reduce using rule 96 (binary_expression)
    '{'                [reduce using rule 218 (integer_literal)]
    ']'                reduce using rule 96 (binary_expression)
    ']'                [reduce using rule 218 (integer_literal)]
    '}'                reduce using rule 96 (binary_expression)
    '}'                [reduce using rule 218 (integer_literal)]
    $default           reduce using rule 96 (binary_expression)


State 109

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  101                  | '-' binary_expression .
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 101 (binary_expression)


State 110

   30 variable_reference: T_IDENT .

    $default  reduce using rule 30 (variable_reference)


State 111

   29 variable_reference: T_VARIABLE .

    $default  reduce using rule 29 (variable_reference)


State 112

  202 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 202 (function_id_or_pointer)


State 113

  145 array_literal: '[' $@10 . ']'

    ']'  shift, and go to state 188


State 114

  147 array_literal: '[' $@11 . array_elements ']'

    T_NUM        shift, and go to state 189
    T_STRING     shift, and go to state 190
    T_CHARACTER  shift, and go to state 191
    T_TRUE       shift, and go to state 192
    T_FALSE      shift, and go to state 193

    array_elements        go to state 194
    array_element         go to state 195
    simple_array_element  go to state 196


State 115

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | '!' binary_expression .
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_NMATCH       [reduce using rule 98 (binary_expression)]
    T_NE           [reduce using rule 98 (binary_expression)]
    T_EQ           [reduce using rule 98 (binary_expression)]
    T_SHIFT_LEFT   [reduce using rule 98 (binary_expression)]
    T_SHIFT_RIGHT  [reduce using rule 98 (binary_expression)]
    T_OR           [reduce using rule 98 (binary_expression)]
    T_AND          [reduce using rule 98 (binary_expression)]
    T_LE           [reduce using rule 98 (binary_expression)]
    T_GE           [reduce using rule 98 (binary_expression)]
    T_POWER_TO     [reduce using rule 98 (binary_expression)]
    '&'            [reduce using rule 98 (binary_expression)]
    '|'            [reduce using rule 98 (binary_expression)]
    '^'            [reduce using rule 98 (binary_expression)]
    '~'            [reduce using rule 98 (binary_expression)]
    '<'            [reduce using rule 98 (binary_expression)]
    '>'            [reduce using rule 98 (binary_expression)]
    '+'            [reduce using rule 98 (binary_expression)]
    '-'            [reduce using rule 98 (binary_expression)]
    '*'            [reduce using rule 98 (binary_expression)]
    '/'            [reduce using rule 98 (binary_expression)]
    '%'            [reduce using rule 98 (binary_expression)]
    '['            [reduce using rule 98 (binary_expression)]
    $default       reduce using rule 98 (binary_expression)


State 116

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression
  123                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142
    ')'            shift, and go to state 197


State 117

  210 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 198


State 118

  137 map_literal: '{' $@9 . optional_map_associates closing_brace

    T_STRING  shift, and go to state 199

    $default  reduce using rule 138 (optional_map_associates)

    optional_map_associates  go to state 200
    map_associates           go to state 201
    map_associate            go to state 202


State 119

  124 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 124 (binary_expression)


State 120

   85 range_expression: binary_expression T_DOTDOT . binary_expression $@8 range_increment

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 203
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 121

  103 binary_expression: binary_expression T_NMATCH . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 204
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 122

  122 binary_expression: binary_expression T_NE . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 205
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 123

  121 binary_expression: binary_expression T_EQ . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 206
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 124

  112 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 207
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 125

  113 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 208
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 126

  116 binary_expression: binary_expression T_OR . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 209
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 127

  115 binary_expression: binary_expression T_AND . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 210
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 128

  119 binary_expression: binary_expression T_LE . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 211
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 129

  120 binary_expression: binary_expression T_GE . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 212
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 130

  114 binary_expression: binary_expression T_POWER_TO . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 213
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 131

  104 binary_expression: binary_expression '&' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 214
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 132

  105 binary_expression: binary_expression '|' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 215
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 133

  107 binary_expression: binary_expression '^' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 216
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 134

  102 binary_expression: binary_expression '~' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 217
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 135

  117 binary_expression: binary_expression '<' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 218
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 136

  118 binary_expression: binary_expression '>' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 219
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 137

  106 binary_expression: binary_expression '+' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 220
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 138

  108 binary_expression: binary_expression '-' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 221
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 139

  109 binary_expression: binary_expression '*' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 222
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 140

  110 binary_expression: binary_expression '/' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 223
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 141

  111 binary_expression: binary_expression '%' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 224
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 142

   97 binary_expression: binary_expression '[' . binary_expression_or_range ']'

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ']'  reduce using rule 83 (range_expression)

    variable_reference          go to state 85
    binary_expression_or_range  go to state 225
    range_expression            go to state 226
    s_bterm                     go to state 88
    constructor_expression      go to state 89
    binary_expression           go to state 227
    value                       go to state 91
    struct_reference            go to state 92
    map_literal                 go to state 93
    array_literal               go to state 94
    string                      go to state 95
    call_expression             go to state 96
    function_id_or_pointer      go to state 97
    type_cast                   go to state 98
    boolean_literal             go to state 58
    float_literal               go to state 59
    integer_literal             go to state 60
    character_literal           go to state 61
    simple_literal              go to state 99


State 143

  135 struct_reference: struct_reference '.' . T_IDENT

    T_IDENT  shift, and go to state 228


State 144

  157 string: string T_STRING .

    $default  reduce using rule 157 (string)


State 145

  201 call_expression: function_id_or_pointer '(' . @23 parameter_list closing_paren

    $default  reduce using rule 200 (@23)

    @23  go to state 229


State 146

  133 value: T_IDENT .
  203 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 203 (function_id_or_pointer)
    $default  reduce using rule 133 (value)


State 147

  127 value: T_VARIABLE .
  134 struct_reference: T_VARIABLE . '.' T_IDENT

    '.'  shift, and go to state 105

    $default  reduce using rule 127 (value)


State 148

   95 binary_expression: type_cast s_bterm .

    $default  reduce using rule 95 (binary_expression)


State 149

  204 function_id_or_pointer: error .
  208 nonempty_parameters: error .

    '('       reduce using rule 204 (function_id_or_pointer)
    $default  reduce using rule 208 (nonempty_parameters)


State 150

   35 macrostart: macro_type macro_declaration '(' parameter_list . ')' optional_description

    ')'  shift, and go to state 230


State 151

   42 parameter_list: non_empty_pardecl .
   44 non_empty_pardecl: non_empty_pardecl . ',' par_decl

    ','  shift, and go to state 231

    $default  reduce using rule 42 (parameter_list)


State 152

   43 non_empty_pardecl: par_decl .

    $default  reduce using rule 43 (non_empty_pardecl)


State 153

  209 parameter: simple_expression .

    $default  reduce using rule 209 (parameter)


State 154

  205 parameter_list: nonempty_parameters .
  207 nonempty_parameters: nonempty_parameters . ',' parameter

    ','  shift, and go to state 232

    $default  reduce using rule 205 (parameter_list)


State 155

  206 nonempty_parameters: parameter .

    $default  reduce using rule 206 (nonempty_parameters)


State 156

   45 par_decl: type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 233


State 157

   66 statement: error . ';'
  204 function_id_or_pointer: error .

    ';'  shift, and go to state 234

    $default  reduce using rule 204 (function_id_or_pointer)


State 158

  181 foreach: T_FOR . $@14 in_clause $@15 local_block

    $default  reduce using rule 179 ($@14)

    $@14  go to state 235


State 159

   30 variable_reference: T_IDENT .
  173 label: T_IDENT . ':'
  203 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 236

    '('       reduce using rule 203 (function_id_or_pointer)
    $default  reduce using rule 30 (variable_reference)


State 160

  190 if_expression: T_IF . condition $@18 local_block $@19 else_clause

    '('  shift, and go to state 237

    condition  go to state 238


State 161

  184 while: T_WHILE . $@16 condition $@17 local_block

    $default  reduce using rule 182 ($@16)

    $@16  go to state 239


State 162

  174 goto: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 240


State 163

  178 switch_expression: T_SWITCH . '(' value ')' $@13 '{' case_clauses '}'

    '('  shift, and go to state 241


State 164

  158 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 242

    $default  reduce using rule 163 (opt_num)

    opt_num  go to state 243


State 165

  159 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 242

    $default  reduce using rule 163 (opt_num)

    opt_num  go to state 244


State 166

  160 return_expression: T_RETURN . optional_bterm

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    error              [reduce using rule 161 (optional_bterm)]
    T_FOR              reduce using rule 161 (optional_bterm)
    T_TYPE_IDENTIFIER  reduce using rule 161 (optional_bterm)
    T_IDENT            [reduce using rule 161 (optional_bterm)]
    T_FUNC             [reduce using rule 161 (optional_bterm)]
    T_IF               reduce using rule 161 (optional_bterm)
    T_ELSE             reduce using rule 161 (optional_bterm)
    T_WHILE            reduce using rule 161 (optional_bterm)
    T_GOTO             reduce using rule 161 (optional_bterm)
    T_SWITCH           reduce using rule 161 (optional_bterm)
    T_CASE             reduce using rule 161 (optional_bterm)
    T_DEFAULT          reduce using rule 161 (optional_bterm)
    T_BREAK            reduce using rule 161 (optional_bterm)
    T_CONTINUE         reduce using rule 161 (optional_bterm)
    T_RETURN           reduce using rule 161 (optional_bterm)
    T_VARIABLE         [reduce using rule 161 (optional_bterm)]
    '*'                [reduce using rule 161 (optional_bterm)]
    ';'                reduce using rule 161 (optional_bterm)
    '{'                [reduce using rule 161 (optional_bterm)]
    '}'                reduce using rule 161 (optional_bterm)

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 245
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    optional_bterm          go to state 246
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 167

   51 statement: ';' .

    $default  reduce using rule 51 (statement)


State 168

   67 assignment: variable_reference . assignment_expression
   69           | variable_reference . '.' T_IDENT $@6 assignment_expression
   70           | variable_reference . '[' binary_expression ']' assignment_expression
   72           | variable_reference . $@7 shorthand_assignment_operator simple_expression
   88 increment_expression: variable_reference . T_MINUSMINUS
   89                     | variable_reference . T_PLUSPLUS

    T_PLUSPLUS    shift, and go to state 247
    T_MINUSMINUS  shift, and go to state 248
    T_ASSIGN      shift, and go to state 49
    '['           shift, and go to state 249
    '.'           shift, and go to state 250

    $default  reduce using rule 71 ($@7)

    $@7                    go to state 251
    assignment_expression  go to state 252


State 169

   50 var_decls: var_decls var_decl . ';'
   65 statement: var_decl .

    ';'  shift, and go to state 253

    ';'       [reduce using rule 65 (statement)]
    $default  reduce using rule 65 (statement)


State 170

   62 statement: block .

    $default  reduce using rule 62 (statement)


State 171

  196 stmntlist: statement . $@21 stmntlist

    $default  reduce using rule 195 ($@21)

    $@21  go to state 254


State 172

   53 statement: assignment . ';'

    ';'  shift, and go to state 255


State 173

   63 statement: increment_expression .

    $default  reduce using rule 63 (statement)


State 174

   58 statement: break .

    $default  reduce using rule 58 (statement)


State 175

   59 statement: continue .

    $default  reduce using rule 59 (statement)


State 176

   60 statement: return_expression .

    $default  reduce using rule 60 (statement)


State 177

   64 statement: label .

    $default  reduce using rule 64 (statement)


State 178

   61 statement: goto .

    $default  reduce using rule 61 (statement)


State 179

   57 statement: switch_expression .

    $default  reduce using rule 57 (statement)


State 180

   56 statement: foreach .

    $default  reduce using rule 56 (statement)


State 181

   55 statement: while .

    $default  reduce using rule 55 (statement)


State 182

   54 statement: if_expression .

    $default  reduce using rule 54 (statement)


State 183

   48 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 256

    closing_brace  go to state 257


State 184

   52 statement: call_expression . ';'

    ';'  shift, and go to state 258


State 185

   93 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 259


State 186

  199 call_expression: T_FUNC '(' @22 . parameter_list closing_paren

    error                    shift, and go to state 149
    T_NEW                    shift, and go to state 72
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ','  reduce using rule 83 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 83 (range_expression)]

    variable_reference      go to state 85
    parameter_list          go to state 260
    non_empty_pardecl       go to state 151
    par_decl                go to state 152
    simple_expression       go to state 153
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 154
    parameter               go to state 155
    type_cast               go to state 98
    type_name               go to state 156
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 187

  134 struct_reference: T_VARIABLE '.' T_IDENT .

    $default  reduce using rule 134 (struct_reference)


State 188

  145 array_literal: '[' $@10 ']' .

    $default  reduce using rule 145 (array_literal)


State 189

  152 simple_array_element: T_NUM .

    $default  reduce using rule 152 (simple_array_element)


State 190

  151 array_element: T_STRING .

    $default  reduce using rule 151 (array_element)


State 191

  153 simple_array_element: T_CHARACTER .

    $default  reduce using rule 153 (simple_array_element)


State 192

  154 simple_array_element: T_TRUE .

    $default  reduce using rule 154 (simple_array_element)


State 193

  155 simple_array_element: T_FALSE .

    $default  reduce using rule 155 (simple_array_element)


State 194

  147 array_literal: '[' $@11 array_elements . ']'
  148 array_elements: array_elements . ',' array_element

    ','  shift, and go to state 261
    ']'  shift, and go to state 262


State 195

  149 array_elements: array_element .

    $default  reduce using rule 149 (array_elements)


State 196

  150 array_element: simple_array_element .

    $default  reduce using rule 150 (array_element)


State 197

  123 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 123 (binary_expression)


State 198

  210 type_cast: '(' type_name ')' .

    $default  reduce using rule 210 (type_cast)


State 199

  142 map_associate: T_STRING . T_ASSOC_ARROW simple_literal
  143              | T_STRING . T_ASSOC_ARROW T_STRING

    T_ASSOC_ARROW  shift, and go to state 263


State 200

  137 map_literal: '{' $@9 optional_map_associates . closing_brace

    '}'  shift, and go to state 256

    closing_brace  go to state 264


State 201

  139 optional_map_associates: map_associates .
  141 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 265

    $default  reduce using rule 139 (optional_map_associates)


State 202

  140 map_associates: map_associate .

    $default  reduce using rule 140 (map_associates)


State 203

   85 range_expression: binary_expression T_DOTDOT binary_expression . $@8 range_increment
   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_NMATCH       [reduce using rule 84 ($@8)]
    T_NE           [reduce using rule 84 ($@8)]
    T_EQ           [reduce using rule 84 ($@8)]
    T_SHIFT_LEFT   [reduce using rule 84 ($@8)]
    T_SHIFT_RIGHT  [reduce using rule 84 ($@8)]
    T_OR           [reduce using rule 84 ($@8)]
    T_AND          [reduce using rule 84 ($@8)]
    T_LE           [reduce using rule 84 ($@8)]
    T_GE           [reduce using rule 84 ($@8)]
    T_POWER_TO     [reduce using rule 84 ($@8)]
    '&'            [reduce using rule 84 ($@8)]
    '|'            [reduce using rule 84 ($@8)]
    '^'            [reduce using rule 84 ($@8)]
    '~'            [reduce using rule 84 ($@8)]
    '<'            [reduce using rule 84 ($@8)]
    '>'            [reduce using rule 84 ($@8)]
    '+'            [reduce using rule 84 ($@8)]
    '-'            [reduce using rule 84 ($@8)]
    '*'            [reduce using rule 84 ($@8)]
    '/'            [reduce using rule 84 ($@8)]
    '%'            [reduce using rule 84 ($@8)]
    '['            [reduce using rule 84 ($@8)]
    $default       reduce using rule 84 ($@8)

    $@8  go to state 266


State 204

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  103                  | binary_expression T_NMATCH binary_expression .
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 103 (binary_expression)


State 205

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression
  122                  | binary_expression T_NE binary_expression .

    T_NMATCH       shift, and go to state 121
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    $default  reduce using rule 122 (binary_expression)


State 206

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  121                  | binary_expression T_EQ binary_expression .
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    $default  reduce using rule 121 (binary_expression)


State 207

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  112                  | binary_expression T_SHIFT_LEFT binary_expression .
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '+'         shift, and go to state 137
    '-'         shift, and go to state 138
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 112 (binary_expression)


State 208

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  113                  | binary_expression T_SHIFT_RIGHT binary_expression .
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '+'         shift, and go to state 137
    '-'         shift, and go to state 138
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 113 (binary_expression)


State 209

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  116                  | binary_expression T_OR binary_expression .
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 116 (binary_expression)


State 210

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  115                  | binary_expression T_AND binary_expression .
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 115 (binary_expression)


State 211

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  119                  | binary_expression T_LE binary_expression .
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_POWER_TO     shift, and go to state 130
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 119 (binary_expression)


State 212

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  120                  | binary_expression T_GE binary_expression .
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_POWER_TO     shift, and go to state 130
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 120 (binary_expression)


State 213

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  114                  | binary_expression T_POWER_TO binary_expression .
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 142

    $default  reduce using rule 114 (binary_expression)


State 214

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  104                  | binary_expression '&' binary_expression .
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 104 (binary_expression)


State 215

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  105                  | binary_expression '|' binary_expression .
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 105 (binary_expression)


State 216

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  107                  | binary_expression '^' binary_expression .
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 107 (binary_expression)


State 217

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  102                  | binary_expression '~' binary_expression .
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 102 (binary_expression)


State 218

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  117                  | binary_expression '<' binary_expression .
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_POWER_TO     shift, and go to state 130
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 117 (binary_expression)


State 219

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  118                  | binary_expression '>' binary_expression .
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_POWER_TO     shift, and go to state 130
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 118 (binary_expression)


State 220

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  106                  | binary_expression '+' binary_expression .
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 106 (binary_expression)


State 221

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  108                  | binary_expression '-' binary_expression .
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 130
    '*'         shift, and go to state 139
    '/'         shift, and go to state 140
    '%'         shift, and go to state 141
    '['         shift, and go to state 142

    $default  reduce using rule 108 (binary_expression)


State 222

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  109                  | binary_expression '*' binary_expression .
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 142

    $default  reduce using rule 109 (binary_expression)


State 223

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  110                  | binary_expression '/' binary_expression .
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 142

    $default  reduce using rule 110 (binary_expression)


State 224

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  111                  | binary_expression '%' binary_expression .
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 142

    $default  reduce using rule 111 (binary_expression)


State 225

   97 binary_expression: binary_expression '[' binary_expression_or_range . ']'

    ']'  shift, and go to state 267


State 226

   82 binary_expression_or_range: range_expression .

    $default  reduce using rule 82 (binary_expression_or_range)


State 227

   81 binary_expression_or_range: binary_expression .
   85 range_expression: binary_expression . T_DOTDOT binary_expression $@8 range_increment
   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 120
    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    $default  reduce using rule 81 (binary_expression_or_range)


State 228

  135 struct_reference: struct_reference '.' T_IDENT .

    $default  reduce using rule 135 (struct_reference)


State 229

  201 call_expression: function_id_or_pointer '(' @23 . parameter_list closing_paren

    error                    shift, and go to state 149
    T_NEW                    shift, and go to state 72
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ','  reduce using rule 83 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 83 (range_expression)]

    variable_reference      go to state 85
    parameter_list          go to state 268
    non_empty_pardecl       go to state 151
    par_decl                go to state 152
    simple_expression       go to state 153
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 154
    parameter               go to state 155
    type_cast               go to state 98
    type_name               go to state 156
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 230

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' . optional_description

    T_STRING  shift, and go to state 269

    $default  reduce using rule 39 (optional_description)

    optional_description  go to state 270


State 231

   44 non_empty_pardecl: non_empty_pardecl ',' . par_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    par_decl   go to state 271
    type_name  go to state 156


State 232

  207 nonempty_parameters: nonempty_parameters ',' . parameter

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ','  reduce using rule 83 (range_expression)
    ')'  reduce using rule 83 (range_expression)

    variable_reference      go to state 85
    simple_expression       go to state 153
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    parameter               go to state 272
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 233

   45 par_decl: type_name variable_identifier .

    $default  reduce using rule 45 (par_decl)


State 234

   66 statement: error ';' .

    $default  reduce using rule 66 (statement)


State 235

  181 foreach: T_FOR $@14 . in_clause $@15 local_block

    '('  shift, and go to state 273

    in_clause  go to state 274


State 236

  173 label: T_IDENT ':' .

    $default  reduce using rule 173 (label)


State 237

  125 condition: '(' . binary_expression ')'
  126          | '(' . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 275
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 238

  190 if_expression: T_IF condition . $@18 local_block $@19 else_clause

    $default  reduce using rule 188 ($@18)

    $@18  go to state 276


State 239

  184 while: T_WHILE $@16 . condition $@17 local_block

    '('  shift, and go to state 237

    condition  go to state 277


State 240

  174 goto: T_GOTO T_IDENT .

    $default  reduce using rule 174 (goto)


State 241

  178 switch_expression: T_SWITCH '(' . value ')' $@13 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 278
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_VARIABLE               shift, and go to state 147
    '['                      shift, and go to state 81
    '{'                      shift, and go to state 84

    value              go to state 279
    struct_reference   go to state 92
    map_literal        go to state 93
    array_literal      go to state 94
    string             go to state 95
    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 99


State 242

  164 opt_num: T_NUM .

    $default  reduce using rule 164 (opt_num)


State 243

  158 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 280


State 244

  159 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 281


State 245

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression
  162 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142

    '*'       [reduce using rule 162 (optional_bterm)]
    $default  reduce using rule 162 (optional_bterm)


State 246

  160 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 160 (return_expression)


State 247

   89 increment_expression: variable_reference T_PLUSPLUS .

    $default  reduce using rule 89 (increment_expression)


State 248

   88 increment_expression: variable_reference T_MINUSMINUS .

    $default  reduce using rule 88 (increment_expression)


State 249

   70 assignment: variable_reference '[' . binary_expression ']' assignment_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 282
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 250

   69 assignment: variable_reference '.' . T_IDENT $@6 assignment_expression

    T_IDENT  shift, and go to state 283


State 251

   72 assignment: variable_reference $@7 . shorthand_assignment_operator simple_expression

    T_SH_ASSIGN_PLUS   shift, and go to state 284
    T_SH_ASSIGN_MINUS  shift, and go to state 285
    T_SH_ASSIGN_MULT   shift, and go to state 286
    T_SH_ASSIGN_DIV    shift, and go to state 287
    T_SH_ASSIGN_MOD    shift, and go to state 288

    shorthand_assignment_operator  go to state 289


State 252

   67 assignment: variable_reference assignment_expression .

    $default  reduce using rule 67 (assignment)


State 253

   50 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 50 (var_decls)


State 254

  196 stmntlist: statement $@21 . stmntlist

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 68

    T_CASE     reduce using rule 194 (stmntlist)
    T_DEFAULT  reduce using rule 194 (stmntlist)
    '}'        reduce using rule 194 (stmntlist)

    variable_reference      go to state 168
    var_decl                go to state 290
    block                   go to state 170
    statement               go to state 171
    assignment              go to state 172
    increment_expression    go to state 173
    break                   go to state 174
    continue                go to state 175
    return_expression       go to state 176
    label                   go to state 177
    goto                    go to state 178
    switch_expression       go to state 179
    foreach                 go to state 180
    while                   go to state 181
    if_expression           go to state 182
    stmntlist               go to state 291
    call_expression         go to state 184
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 255

   53 statement: assignment ';' .

    $default  reduce using rule 53 (statement)


State 256

  187 closing_brace: '}' .

    $default  reduce using rule 187 (closing_brace)


State 257

   48 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 48 (block)


State 258

   52 statement: call_expression ';' .

    $default  reduce using rule 52 (statement)


State 259

   93 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 93 (constructor_expression)


State 260

  199 call_expression: T_FUNC '(' @22 parameter_list . closing_paren

    ')'  shift, and go to state 292

    closing_paren  go to state 293


State 261

  148 array_elements: array_elements ',' . array_element

    T_NUM        shift, and go to state 189
    T_STRING     shift, and go to state 190
    T_CHARACTER  shift, and go to state 191
    T_TRUE       shift, and go to state 192
    T_FALSE      shift, and go to state 193

    array_element         go to state 294
    simple_array_element  go to state 196


State 262

  147 array_literal: '[' $@11 array_elements ']' .

    $default  reduce using rule 147 (array_literal)


State 263

  142 map_associate: T_STRING T_ASSOC_ARROW . simple_literal
  143              | T_STRING T_ASSOC_ARROW . T_STRING

    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 295
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56

    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 296


State 264

  137 map_literal: '{' $@9 optional_map_associates closing_brace .

    $default  reduce using rule 137 (map_literal)


State 265

  141 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 199

    map_associate  go to state 297


State 266

   85 range_expression: binary_expression T_DOTDOT binary_expression $@8 . range_increment

    T_DOTDOT  shift, and go to state 298

    T_DOTDOT  [reduce using rule 86 (range_increment)]
    $default  reduce using rule 86 (range_increment)

    range_increment  go to state 299


State 267

   97 binary_expression: binary_expression '[' binary_expression_or_range ']' .

    $default  reduce using rule 97 (binary_expression)


State 268

  201 call_expression: function_id_or_pointer '(' @23 parameter_list . closing_paren

    ')'  shift, and go to state 292

    closing_paren  go to state 300


State 269

   40 optional_description: T_STRING .

    $default  reduce using rule 40 (optional_description)


State 270

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description .

    $default  reduce using rule 35 (macrostart)


State 271

   44 non_empty_pardecl: non_empty_pardecl ',' par_decl .

    $default  reduce using rule 44 (non_empty_pardecl)


State 272

  207 nonempty_parameters: nonempty_parameters ',' parameter .

    $default  reduce using rule 207 (nonempty_parameters)


State 273

  176 in_clause: '(' . type_name variable_identifier $@12 ':' simple_expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 301


State 274

  181 foreach: T_FOR $@14 in_clause . $@15 local_block

    $default  reduce using rule 180 ($@15)

    $@15  go to state 302


State 275

   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression
  125 condition: '(' binary_expression . ')'
  126          | '(' binary_expression .

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142
    ')'            shift, and go to state 303

    '*'       [reduce using rule 126 (condition)]
    $default  reduce using rule 126 (condition)


State 276

  190 if_expression: T_IF condition $@18 . local_block $@19 else_clause

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 304

    variable_reference      go to state 168
    var_decl                go to state 290
    block                   go to state 170
    statement               go to state 305
    assignment              go to state 172
    increment_expression    go to state 173
    break                   go to state 174
    continue                go to state 175
    return_expression       go to state 176
    label                   go to state 177
    goto                    go to state 178
    switch_expression       go to state 179
    foreach                 go to state 180
    while                   go to state 181
    local_block             go to state 306
    if_expression           go to state 182
    call_expression         go to state 184
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 277

  184 while: T_WHILE $@16 condition . $@17 local_block

    $default  reduce using rule 183 ($@17)

    $@17  go to state 307


State 278

  133 value: T_IDENT .

    $default  reduce using rule 133 (value)


State 279

  178 switch_expression: T_SWITCH '(' value . ')' $@13 '{' case_clauses '}'

    ')'  shift, and go to state 308


State 280

  158 break: T_BREAK opt_num ';' .

    $default  reduce using rule 158 (break)


State 281

  159 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 159 (continue)


State 282

   70 assignment: variable_reference '[' binary_expression . ']' assignment_expression
   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 121
    T_NE           shift, and go to state 122
    T_EQ           shift, and go to state 123
    T_SHIFT_LEFT   shift, and go to state 124
    T_SHIFT_RIGHT  shift, and go to state 125
    T_OR           shift, and go to state 126
    T_AND          shift, and go to state 127
    T_LE           shift, and go to state 128
    T_GE           shift, and go to state 129
    T_POWER_TO     shift, and go to state 130
    '&'            shift, and go to state 131
    '|'            shift, and go to state 132
    '^'            shift, and go to state 133
    '~'            shift, and go to state 134
    '<'            shift, and go to state 135
    '>'            shift, and go to state 136
    '+'            shift, and go to state 137
    '-'            shift, and go to state 138
    '*'            shift, and go to state 139
    '/'            shift, and go to state 140
    '%'            shift, and go to state 141
    '['            shift, and go to state 142
    ']'            shift, and go to state 309


State 283

   69 assignment: variable_reference '.' T_IDENT . $@6 assignment_expression

    $default  reduce using rule 68 ($@6)

    $@6  go to state 310


State 284

   76 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 76 (shorthand_assignment_operator)


State 285

   77 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 77 (shorthand_assignment_operator)


State 286

   73 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 73 (shorthand_assignment_operator)


State 287

   74 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 74 (shorthand_assignment_operator)


State 288

   75 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 75 (shorthand_assignment_operator)


State 289

   72 assignment: variable_reference $@7 shorthand_assignment_operator . simple_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ';'  reduce using rule 83 (range_expression)

    variable_reference      go to state 85
    simple_expression       go to state 311
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 290

   65 statement: var_decl .

    $default  reduce using rule 65 (statement)


State 291

  196 stmntlist: statement $@21 stmntlist .

    $default  reduce using rule 196 (stmntlist)


State 292

  197 closing_paren: ')' .

    $default  reduce using rule 197 (closing_paren)


State 293

  199 call_expression: T_FUNC '(' @22 parameter_list closing_paren .

    $default  reduce using rule 199 (call_expression)


State 294

  148 array_elements: array_elements ',' array_element .

    $default  reduce using rule 148 (array_elements)


State 295

  143 map_associate: T_STRING T_ASSOC_ARROW T_STRING .

    $default  reduce using rule 143 (map_associate)


State 296

  142 map_associate: T_STRING T_ASSOC_ARROW simple_literal .

    $default  reduce using rule 142 (map_associate)


State 297

  141 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 141 (map_associates)


State 298

   87 range_increment: T_DOTDOT . binary_expression

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    variable_reference      go to state 85
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 312
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 299

   85 range_expression: binary_expression T_DOTDOT binary_expression $@8 range_increment .

    $default  reduce using rule 85 (range_expression)


State 300

  201 call_expression: function_id_or_pointer '(' @23 parameter_list closing_paren .

    $default  reduce using rule 201 (call_expression)


State 301

  176 in_clause: '(' type_name . variable_identifier $@12 ':' simple_expression ')'

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 313


State 302

  181 foreach: T_FOR $@14 in_clause $@15 . local_block

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 304

    variable_reference      go to state 168
    var_decl                go to state 290
    block                   go to state 170
    statement               go to state 305
    assignment              go to state 172
    increment_expression    go to state 173
    break                   go to state 174
    continue                go to state 175
    return_expression       go to state 176
    label                   go to state 177
    goto                    go to state 178
    switch_expression       go to state 179
    foreach                 go to state 180
    while                   go to state 181
    local_block             go to state 314
    if_expression           go to state 182
    call_expression         go to state 184
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 303

  125 condition: '(' binary_expression ')' .

    $default  reduce using rule 125 (condition)


State 304

   48 block: '{' . var_decls stmntlist closing_brace
  186 local_block: '{' . stmntlist closing_brace

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 68

    error              [reduce using rule 49 (var_decls)]
    T_FOR              [reduce using rule 49 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 49 (var_decls)]
    T_IDENT            [reduce using rule 49 (var_decls)]
    T_FUNC             [reduce using rule 49 (var_decls)]
    T_IF               [reduce using rule 49 (var_decls)]
    T_WHILE            [reduce using rule 49 (var_decls)]
    T_GOTO             [reduce using rule 49 (var_decls)]
    T_SWITCH           [reduce using rule 49 (var_decls)]
    T_BREAK            [reduce using rule 49 (var_decls)]
    T_CONTINUE         [reduce using rule 49 (var_decls)]
    T_RETURN           [reduce using rule 49 (var_decls)]
    T_VARIABLE         [reduce using rule 49 (var_decls)]
    '*'                [reduce using rule 49 (var_decls)]
    ';'                [reduce using rule 49 (var_decls)]
    '{'                [reduce using rule 49 (var_decls)]
    '}'                reduce using rule 49 (var_decls)
    '}'                [reduce using rule 194 (stmntlist)]

    variable_reference      go to state 168
    var_decl                go to state 290
    block                   go to state 170
    var_decls               go to state 102
    statement               go to state 171
    assignment              go to state 172
    increment_expression    go to state 173
    break                   go to state 174
    continue                go to state 175
    return_expression       go to state 176
    label                   go to state 177
    goto                    go to state 178
    switch_expression       go to state 179
    foreach                 go to state 180
    while                   go to state 181
    if_expression           go to state 182
    stmntlist               go to state 315
    call_expression         go to state 184
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 305

  185 local_block: statement .

    $default  reduce using rule 185 (local_block)


State 306

  190 if_expression: T_IF condition $@18 local_block . $@19 else_clause

    $default  reduce using rule 189 ($@19)

    $@19  go to state 316


State 307

  184 while: T_WHILE $@16 condition $@17 . local_block

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 304

    variable_reference      go to state 168
    var_decl                go to state 290
    block                   go to state 170
    statement               go to state 305
    assignment              go to state 172
    increment_expression    go to state 173
    break                   go to state 174
    continue                go to state 175
    return_expression       go to state 176
    label                   go to state 177
    goto                    go to state 178
    switch_expression       go to state 179
    foreach                 go to state 180
    while                   go to state 181
    local_block             go to state 317
    if_expression           go to state 182
    call_expression         go to state 184
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 308

  178 switch_expression: T_SWITCH '(' value ')' . $@13 '{' case_clauses '}'

    $default  reduce using rule 177 ($@13)

    $@13  go to state 318


State 309

   70 assignment: variable_reference '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 319


State 310

   69 assignment: variable_reference '.' T_IDENT $@6 . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 320


State 311

   72 assignment: variable_reference $@7 shorthand_assignment_operator simple_expression .

    $default  reduce using rule 72 (assignment)


State 312

   87 range_increment: T_DOTDOT binary_expression .
   97 binary_expression: binary_expression . '[' binary_expression_or_range ']'
  102                  | binary_expression . '~' binary_expression
  103                  | binary_expression . T_NMATCH binary_expression
  104                  | binary_expression . '&' binary_expression
  105                  | binary_expression . '|' binary_expression
  106                  | binary_expression . '+' binary_expression
  107                  | binary_expression . '^' binary_expression
  108                  | binary_expression . '-' binary_expression
  109                  | binary_expression . '*' binary_expression
  110                  | binary_expression . '/' binary_expression
  111                  | binary_expression . '%' binary_expression
  112                  | binary_expression . T_SHIFT_LEFT binary_expression
  113                  | binary_expression . T_SHIFT_RIGHT binary_expression
  114                  | binary_expression . T_POWER_TO binary_expression
  115                  | binary_expression . T_AND binary_expression
  116                  | binary_expression . T_OR binary_expression
  117                  | binary_expression . '<' binary_expression
  118                  | binary_expression . '>' binary_expression
  119                  | binary_expression . T_LE binary_expression
  120                  | binary_expression . T_GE binary_expression
  121                  | binary_expression . T_EQ binary_expression
  122                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 87 (range_increment)


State 313

  176 in_clause: '(' type_name variable_identifier . $@12 ':' simple_expression ')'

    $default  reduce using rule 175 ($@12)

    $@12  go to state 321


State 314

  181 foreach: T_FOR $@14 in_clause $@15 local_block .

    $default  reduce using rule 181 (foreach)


State 315

  186 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 256

    closing_brace  go to state 322


State 316

  190 if_expression: T_IF condition $@18 local_block $@19 . else_clause

    T_ELSE  shift, and go to state 323

    T_ELSE    [reduce using rule 191 (else_clause)]
    $default  reduce using rule 191 (else_clause)

    else_clause  go to state 324


State 317

  184 while: T_WHILE $@16 condition $@17 local_block .

    $default  reduce using rule 184 (while)


State 318

  178 switch_expression: T_SWITCH '(' value ')' $@13 . '{' case_clauses '}'

    '{'  shift, and go to state 325


State 319

   70 assignment: variable_reference '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 70 (assignment)


State 320

   69 assignment: variable_reference '.' T_IDENT $@6 assignment_expression .

    $default  reduce using rule 69 (assignment)


State 321

  176 in_clause: '(' type_name variable_identifier $@12 . ':' simple_expression ')'

    ':'  shift, and go to state 326


State 322

  186 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 186 (local_block)


State 323

  193 else_clause: T_ELSE . $@20 local_block

    $default  reduce using rule 192 ($@20)

    $@20  go to state 327


State 324

  190 if_expression: T_IF condition $@18 local_block $@19 else_clause .

    $default  reduce using rule 190 (if_expression)


State 325

  178 switch_expression: T_SWITCH '(' value ')' $@13 '{' . case_clauses '}'

    T_CASE     shift, and go to state 328
    T_DEFAULT  shift, and go to state 329

    $default  reduce using rule 165 (case_clauses)

    case_clauses   go to state 330
    case_clause    go to state 331
    case_selector  go to state 332


State 326

  176 in_clause: '(' type_name variable_identifier $@12 ':' . simple_expression ')'

    error                    shift, and go to state 71
    T_NEW                    shift, and go to state 72
    T_IDENT                  shift, and go to state 73
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 74
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 75
    T_VARIABLE               shift, and go to state 76
    '~'                      shift, and go to state 77
    '+'                      shift, and go to state 78
    '-'                      shift, and go to state 79
    '*'                      shift, and go to state 80
    '['                      shift, and go to state 81
    '!'                      shift, and go to state 82
    '('                      shift, and go to state 83
    '{'                      shift, and go to state 84

    ')'  reduce using rule 83 (range_expression)

    variable_reference      go to state 85
    simple_expression       go to state 333
    range_expression        go to state 87
    s_bterm                 go to state 88
    constructor_expression  go to state 89
    binary_expression       go to state 90
    value                   go to state 91
    struct_reference        go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 99


State 327

  193 else_clause: T_ELSE $@20 . local_block

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 304

    variable_reference      go to state 168
    var_decl                go to state 290
    block                   go to state 170
    statement               go to state 305
    assignment              go to state 172
    increment_expression    go to state 173
    break                   go to state 174
    continue                go to state 175
    return_expression       go to state 176
    label                   go to state 177
    goto                    go to state 178
    switch_expression       go to state 179
    foreach                 go to state 180
    while                   go to state 181
    local_block             go to state 334
    if_expression           go to state 182
    call_expression         go to state 184
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 328

  168 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 335
    T_STRING  shift, and go to state 336

    case_condition  go to state 337


State 329

  169 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 338


State 330

  178 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses . '}'

    '}'  shift, and go to state 339


State 331

  166 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 328
    T_DEFAULT  shift, and go to state 329

    $default  reduce using rule 165 (case_clauses)

    case_clauses   go to state 340
    case_clause    go to state 331
    case_selector  go to state 332


State 332

  167 case_clause: case_selector . stmntlist

    error              shift, and go to state 157
    T_FOR              shift, and go to state 158
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 159
    T_FUNC             shift, and go to state 75
    T_IF               shift, and go to state 160
    T_WHILE            shift, and go to state 161
    T_GOTO             shift, and go to state 162
    T_SWITCH           shift, and go to state 163
    T_BREAK            shift, and go to state 164
    T_CONTINUE         shift, and go to state 165
    T_RETURN           shift, and go to state 166
    T_VARIABLE         shift, and go to state 111
    '*'                shift, and go to state 80
    ';'                shift, and go to state 167
    '{'                shift, and go to state 68

    T_CASE     reduce using rule 194 (stmntlist)
    T_DEFAULT  reduce using rule 194 (stmntlist)
    '}'        reduce using rule 194 (stmntlist)

    variable_reference      go to state 168
    var_decl                go to state 290
    block                   go to state 170
    statement               go to state 171
    assignment              go to state 172
    increment_expression    go to state 173
    break                   go to state 174
    continue                go to state 175
    return_expression       go to state 176
    label                   go to state 177
    goto                    go to state 178
    switch_expression       go to state 179
    foreach                 go to state 180
    while                   go to state 181
    if_expression           go to state 182
    stmntlist               go to state 341
    call_expression         go to state 184
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 333

  176 in_clause: '(' type_name variable_identifier $@12 ':' simple_expression . ')'

    ')'  shift, and go to state 342


State 334

  193 else_clause: T_ELSE $@20 local_block .

    $default  reduce using rule 193 (else_clause)


State 335

  170 case_condition: T_NUM .
  172               | T_NUM . T_DOTDOT T_NUM

    T_DOTDOT  shift, and go to state 343

    $default  reduce using rule 170 (case_condition)


State 336

  171 case_condition: T_STRING .

    $default  reduce using rule 171 (case_condition)


State 337

  168 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 344


State 338

  169 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 169 (case_selector)


State 339

  178 switch_expression: T_SWITCH '(' value ')' $@13 '{' case_clauses '}' .

    $default  reduce using rule 178 (switch_expression)


State 340

  166 case_clauses: case_clause case_clauses .

    $default  reduce using rule 166 (case_clauses)


State 341

  167 case_clause: case_selector stmntlist .

    $default  reduce using rule 167 (case_clause)


State 342

  176 in_clause: '(' type_name variable_identifier $@12 ':' simple_expression ')' .

    $default  reduce using rule 176 (in_clause)


State 343

  172 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 345


State 344

  168 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 168 (case_selector)


State 345

  172 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 172 (case_condition)
