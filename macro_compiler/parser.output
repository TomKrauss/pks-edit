State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 73 conflicts: 9 shift/reduce
State 127 conflicts: 24 shift/reduce
State 158 conflicts: 1 reduce/reduce
State 214 conflicts: 1 reduce/reduce
State 216 conflicts: 1 shift/reduce
State 235 conflicts: 1 reduce/reduce
State 248 conflicts: 23 shift/reduce
State 272 conflicts: 1 reduce/reduce
State 319 conflicts: 1 shift/reduce
State 328 conflicts: 2 shift/reduce
State 353 conflicts: 17 shift/reduce, 2 reduce/reduce
State 369 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter macro_definitions

    3 header_delimiter: %empty
    4                 | '!'

    5 macro_definitions: %empty
    6                  | element_with_annotations macro_definitions

    7 element_with_annotations: annotations macro_or_native_function

    8 macro_or_native_function: native_function_definition ';'
    9                         | macro_definition

   10 namespace: %empty
   11          | T_NAMESPACE T_IDENT ';'

   12 prerequisites: %empty
   13              | prerequisites require

   14 require: T_REQUIRE T_STRING ';'

   15 global_declarations: %empty
   16                    | global_declarations constants ';'
   17                    | global_declarations global_var ';'
   18                    | global_declarations T_TYPEDEF typedef ';'

   19 typedef: enum_definition
   20        | struct_definition

   21 struct_definition: T_STRUCT '{' struct_element_definitions '}' T_IDENT

   22 $@2: %empty

   23 enum_definition: T_ENUM $@2 '{' enum_value_definitions '}' T_IDENT

   24 struct_element_definitions: struct_element
   25                           | struct_element struct_element_definitions

   26 struct_element: type_name variable_identifier ';'

   27 enum_value_definitions: %empty
   28                       | enum_values

   29 enum_values: enum_value
   30            | enum_value ',' enum_values

   31 enum_value: T_IDENT opt_enum_assignment

   32 opt_enum_assignment: %empty
   33                    | T_ASSIGN T_NUM
   34                    | T_ASSIGN '-' T_NUM

   35 scope: %empty
   36      | T_STATIC

   37 constants: T_CONST constant_list

   38 constant_list: constdef
   39              | constant_list ',' constdef

   40 $@3: %empty

   41 $@4: %empty

   42 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   43 constant_literal: simple_literal
   44                 | T_STRING

   45 variable_identifier: T_IDENT
   46                    | T_NUM
   47                    | T_STRING

   48 variable_reference: T_VARIABLE
   49                   | T_IDENT

   50 macro_declaration: T_IDENT
   51                  | T_FUNC

   52 macro_type: scope T_VOID
   53           | scope type_name

   54 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description

   55 global_var: scope var_decl

   56 var_decl: type_name variable_identifier assignment_expression
   57         | type_name variable_identifier

   58 optional_description: %empty
   59                     | T_STRING

   60 argument_list: %empty
   61              | non_empty_arguments

   62 non_empty_arguments: argument_declaration
   63                    | non_empty_arguments ',' argument_declaration

   64 parameter_list: %empty
   65               | non_empty_parameters

   66 non_empty_parameters: parameter
   67                     | non_empty_parameters ',' parameter
   68                     | error

   69 argument_declaration: type_name variable_identifier
   70                     | T_ELLIPSIS

   71 annotations: %empty
   72            | annotation annotations

   73 $@5: %empty

   74 annotation: T_ANNOTATION $@5 '(' annotation_values ')'

   75 annotation_value: T_IDENT T_ASSIGN T_STRING
   76                 | T_IDENT
   77                 | T_STRING

   78 annotation_values: %empty
   79                  | annotation_value
   80                  | annotation_value ',' annotation_values

   81 $@6: %empty

   82 native_function_definition: T_NATIVE $@6 macrostart

   83 $@7: %empty

   84 macro_definition: $@7 macrostart block

   85 block: '{' var_decls stmntlist closing_brace

   86 var_decls: %empty
   87          | var_decls var_decl ';'

   88 statement: ';'
   89          | call_expression ';'
   90          | assignment ';'
   91          | if_expression
   92          | while
   93          | for_loop_expression
   94          | switch_expression
   95          | break
   96          | continue
   97          | return_expression ';'
   98          | goto_expression ';'
   99          | block
  100          | increment_expression ';'
  101          | label
  102          | var_decl
  103          | error ';'

  104 assignment: variable_reference assignment_expression

  105 $@8: %empty

  106 assignment: assignment_target '.' T_IDENT $@8 assignment_expression
  107           | assignment_target '[' binary_expression ']' assignment_expression
  108           | shorthand_assignment

  109 $@9: %empty

  110 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator expression

  111 assignment_target: variable_reference

  112 shorthand_assignment_operator: T_SH_ASSIGN_MULT
  113                              | T_SH_ASSIGN_DIV
  114                              | T_SH_ASSIGN_MOD
  115                              | T_SH_ASSIGN_PLUS
  116                              | T_SH_ASSIGN_MINUS

  117 assignment_expression: T_ASSIGN expression

  118 expression: binary_expression
  119           | range_expression

  120 range_expression: %empty

  121 $@10: %empty

  122 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment

  123 range_increment: %empty
  124                | T_DOTDOT binary_expression

  125 minusminus_plusplus: T_MINUSMINUS
  126                    | T_PLUSPLUS

  127 increment_expression: variable_reference minusminus_plusplus

  128 simple_term: value
  129            | call_expression
  130            | constructor_expression

  131 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  132 unary_expression: '!' binary_expression
  133                 | '~' binary_expression
  134                 | '+' binary_expression
  135                 | '-' variable_reference

  136 binary_expression: simple_term
  137                  | type_cast simple_term
  138                  | binary_expression '.' T_IDENT
  139                  | unary_expression
  140                  | binary_expression '[' expression ']'
  141                  | binary_expression '~' binary_expression
  142                  | binary_expression T_NMATCH binary_expression
  143                  | binary_expression '&' binary_expression
  144                  | binary_expression '|' binary_expression
  145                  | binary_expression '+' binary_expression
  146                  | binary_expression '^' binary_expression
  147                  | binary_expression '-' binary_expression
  148                  | binary_expression '*' binary_expression
  149                  | binary_expression '/' binary_expression
  150                  | binary_expression '%' binary_expression
  151                  | binary_expression T_SHIFT_LEFT binary_expression
  152                  | binary_expression T_SHIFT_RIGHT binary_expression
  153                  | binary_expression T_POWER_TO binary_expression
  154                  | binary_expression T_AND binary_expression
  155                  | binary_expression T_OR binary_expression
  156                  | binary_expression '<' binary_expression
  157                  | binary_expression '>' binary_expression
  158                  | binary_expression T_LE binary_expression
  159                  | binary_expression T_GE binary_expression
  160                  | binary_expression T_EQ binary_expression
  161                  | binary_expression T_NE binary_expression
  162                  | '(' binary_expression ')'
  163                  | variable_reference assignment_expression

  164 condition: '(' binary_expression ')'
  165          | '(' binary_expression

  166 value: T_VARIABLE
  167      | string
  168      | simple_literal
  169      | T_IDENT

  170 string: T_STRING
  171       | string T_STRING

  172 break: T_BREAK opt_num ';'

  173 continue: T_CONTINUE opt_num ';'

  174 return_expression: T_RETURN optional_bterm

  175 optional_bterm: %empty
  176               | binary_expression

  177 opt_num: %empty
  178        | T_NUM

  179 case_clauses: %empty
  180             | case_clause case_clauses

  181 case_clause: case_selector stmntlist

  182 case_selector: T_CASE case_condition ':'
  183              | T_DEFAULT ':'

  184 case_condition: integer_literal
  185               | T_STRING
  186               | T_NUM T_DOTDOT T_NUM

  187 label: T_IDENT ':'

  188 goto_expression: T_GOTO T_IDENT

  189 $@11: %empty

  190 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses '}'

  191 $@12: %empty

  192 for_loop_expression: T_FOR for_clause $@12 local_block

  193 for_increment: increment_expression
  194              | shorthand_assignment

  195 $@13: %empty

  196 $@14: %empty

  197 $@15: %empty

  198 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'

  199 opt_for_initializer: %empty

  200 $@16: %empty

  201 opt_for_initializer: type_name variable_identifier $@16 assignment_expression

  202 for_clause: for_to_clause
  203           | in_clause
  204           | error

  205 $@17: %empty

  206 in_clause: '(' type_name variable_identifier $@17 ':' expression ')'

  207 $@18: %empty

  208 $@19: %empty

  209 while: T_WHILE $@18 condition $@19 local_block

  210 local_block: statement
  211            | '{' stmntlist closing_brace

  212 closing_brace: '}'

  213 $@20: %empty

  214 $@21: %empty

  215 if_expression: T_IF condition $@20 local_block $@21 else_clause

  216 else_clause: %empty

  217 $@22: %empty

  218 else_clause: T_ELSE $@22 local_block

  219 stmntlist: %empty
  220          | statement stmntlist

  221 closing_paren: ')'

  222 @23: %empty

  223 call_expression: T_FUNC '(' @23 parameter_list closing_paren

  224 @24: %empty

  225 call_expression: function_id_or_pointer '(' @24 parameter_list closing_paren
  226                | array_constructor
  227                | map_constructor

  228 @25: %empty

  229 array_constructor: '[' @25 parameter_list ']'

  230 @26: %empty

  231 map_constructor: '{' @26 optional_map_associates '}'

  232 optional_map_associates: %empty
  233                        | map_associates

  234 map_associates: map_associate
  235               | map_associates ',' map_associate

  236 @27: %empty

  237 map_associate: T_STRING ':' @27 value

  238 function_id_or_pointer: '*' variable_reference
  239                       | T_IDENT

  240 parameter: expression
  241          | T_ELLIPSIS expression

  242 type_cast: '(' type_name ')'

  243 type_name: T_TYPE_IDENTIFIER
  244          | T_TYPE_IDENTIFIER array_size

  245 array_size: '[' ']'
  246           | '[' T_NUM ']'

  247 boolean_literal: T_TRUE
  248                | T_FALSE

  249 float_literal: T_FLOATING_POINT_NUMBER

  250 integer_literal: T_NUM
  251                | '-' T_NUM

  252 character_literal: T_CHARACTER

  253 simple_literal: integer_literal
  254               | float_literal
  255               | character_literal
  256               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 4 132
    '%' (37) 150
    '&' (38) 143
    '(' (40) 54 74 131 162 164 165 190 198 206 223 225 242
    ')' (41) 54 74 131 162 164 190 198 206 221 242
    '*' (42) 148 238
    '+' (43) 134 145
    ',' (44) 30 39 63 67 80 235
    '-' (45) 34 135 147 251
    '.' (46) 106 138
    '/' (47) 149
    ':' (58) 182 183 187 206 237
    ';' (59) 8 11 14 16 17 18 26 87 88 89 90 97 98 100 103 172 173 198
    '<' (60) 156
    '>' (62) 157
    '[' (91) 107 140 229 245 246
    ']' (93) 107 140 229 245 246
    '^' (94) 146
    '{' (123) 21 23 85 190 211 231
    '|' (124) 144
    '}' (125) 21 23 190 212 231
    '~' (126) 133 141
    error (256) 68 103 204
    T_NAMESPACE (258) 11
    T_TYPEDEF (259) 18
    T_ENUM (260) 23
    T_STRUCT (261) 21
    T_REQUIRE (262) 14
    T_FOR (263) 192
    T_ANNOTATION (264) 74
    T_NATIVE (265) 82
    T_NEW (266) 131
    T_STATIC (267) 36
    T_VOID (268) 52
    T_TYPE_IDENTIFIER (269) 131 243 244
    T_ELLIPSIS (270) 70 241
    T_IDENT (271) 11 21 23 31 45 49 50 75 76 106 138 169 187 188 239
    T_NUM (272) 33 34 46 178 186 246 250 251
    T_FLOATING_POINT_NUMBER (273) 249
    T_STRING (274) 14 44 47 59 75 77 170 171 185 237
    T_CHARACTER (275) 252
    T_CONST (276) 37
    T_TRUE (277) 247
    T_FALSE (278) 248
    T_FUNC (279) 51 223
    T_DOTDOT (280) 122 124 186
    T_PLUSPLUS (281) 126
    T_MINUSMINUS (282) 125
    T_IF (283) 215
    T_ELSE (284) 218
    T_WHILE (285) 209
    T_GOTO (286) 188
    T_SH_ASSIGN_PLUS (287) 115
    T_SH_ASSIGN_MINUS (288) 116
    T_SH_ASSIGN_MULT (289) 112
    T_SH_ASSIGN_DIV (290) 113
    T_SH_ASSIGN_MOD (291) 114
    T_SWITCH (292) 190
    T_CASE (293) 182
    T_DEFAULT (294) 183
    T_BREAK (295) 172
    T_CONTINUE (296) 173
    T_RETURN (297) 174
    T_VARIABLE (298) 48 166
    T_NMATCH (299) 142
    T_ASSIGN (300) 33 34 42 75 117
    T_NE (301) 161
    T_EQ (302) 160
    T_SHIFT_LEFT (303) 151
    T_SHIFT_RIGHT (304) 152
    T_OR (305) 155
    T_AND (306) 154
    T_LE (307) 158
    T_GE (308) 159
    T_POWER_TO (309) 153


Nonterminals, with rules where they appear

    $accept (77)
        on left: 0
    file_structure (78)
        on left: 2
        on right: 0
    $@1 (79)
        on left: 1
        on right: 2
    header_delimiter (80)
        on left: 3 4
        on right: 2
    macro_definitions (81)
        on left: 5 6
        on right: 2 6
    element_with_annotations (82)
        on left: 7
        on right: 6
    macro_or_native_function (83)
        on left: 8 9
        on right: 7
    namespace (84)
        on left: 10 11
        on right: 2
    prerequisites (85)
        on left: 12 13
        on right: 2 13
    require (86)
        on left: 14
        on right: 13
    global_declarations (87)
        on left: 15 16 17 18
        on right: 2 16 17 18
    typedef (88)
        on left: 19 20
        on right: 18
    struct_definition (89)
        on left: 21
        on right: 20
    enum_definition (90)
        on left: 23
        on right: 19
    $@2 (91)
        on left: 22
        on right: 23
    struct_element_definitions (92)
        on left: 24 25
        on right: 21 25
    struct_element (93)
        on left: 26
        on right: 24 25
    enum_value_definitions (94)
        on left: 27 28
        on right: 23
    enum_values (95)
        on left: 29 30
        on right: 28 30
    enum_value (96)
        on left: 31
        on right: 29 30
    opt_enum_assignment (97)
        on left: 32 33 34
        on right: 31
    scope (98)
        on left: 35 36
        on right: 52 53 55
    constants (99)
        on left: 37
        on right: 16
    constant_list (100)
        on left: 38 39
        on right: 37 39
    constdef (101)
        on left: 42
        on right: 38 39
    $@3 (102)
        on left: 40
        on right: 42
    $@4 (103)
        on left: 41
        on right: 42
    constant_literal (104)
        on left: 43 44
        on right: 42
    variable_identifier (105)
        on left: 45 46 47
        on right: 26 42 56 57 69 201 206
    variable_reference (106)
        on left: 48 49
        on right: 104 110 111 127 135 163 238
    macro_declaration (107)
        on left: 50 51
        on right: 54
    macro_type (108)
        on left: 52 53
        on right: 54
    macrostart (109)
        on left: 54
        on right: 82 84
    global_var (110)
        on left: 55
        on right: 17
    var_decl (111)
        on left: 56 57
        on right: 55 87 102
    optional_description (112)
        on left: 58 59
        on right: 54
    argument_list (113)
        on left: 60 61
        on right: 54
    non_empty_arguments (114)
        on left: 62 63
        on right: 61 63
    parameter_list (115)
        on left: 64 65
        on right: 223 225 229
    non_empty_parameters (116)
        on left: 66 67 68
        on right: 65 67
    argument_declaration (117)
        on left: 69 70
        on right: 62 63
    annotations (118)
        on left: 71 72
        on right: 7 72
    annotation (119)
        on left: 74
        on right: 72
    $@5 (120)
        on left: 73
        on right: 74
    annotation_value (121)
        on left: 75 76 77
        on right: 79 80
    annotation_values (122)
        on left: 78 79 80
        on right: 74 80
    native_function_definition (123)
        on left: 82
        on right: 8
    $@6 (124)
        on left: 81
        on right: 82
    macro_definition (125)
        on left: 84
        on right: 9
    $@7 (126)
        on left: 83
        on right: 84
    block (127)
        on left: 85
        on right: 84 99
    var_decls (128)
        on left: 86 87
        on right: 85 87
    statement (129)
        on left: 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
        on right: 210 220
    assignment (130)
        on left: 104 106 107 108
        on right: 90
    $@8 (131)
        on left: 105
        on right: 106
    shorthand_assignment (132)
        on left: 110
        on right: 108 194
    $@9 (133)
        on left: 109
        on right: 110
    assignment_target (134)
        on left: 111
        on right: 106 107
    shorthand_assignment_operator (135)
        on left: 112 113 114 115 116
        on right: 110
    assignment_expression (136)
        on left: 117
        on right: 56 104 106 107 163 201
    expression (137)
        on left: 118 119
        on right: 110 117 140 206 240 241
    range_expression (138)
        on left: 120 122
        on right: 119
    $@10 (139)
        on left: 121
        on right: 122
    range_increment (140)
        on left: 123 124
        on right: 122
    minusminus_plusplus (141)
        on left: 125 126
        on right: 127
    increment_expression (142)
        on left: 127
        on right: 100 193
    simple_term (143)
        on left: 128 129 130
        on right: 136 137
    constructor_expression (144)
        on left: 131
        on right: 130
    unary_expression (145)
        on left: 132 133 134 135
        on right: 139
    binary_expression (146)
        on left: 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
        on right: 107 118 122 124 132 133 134 138 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 164 165 176 198
    condition (147)
        on left: 164 165
        on right: 209 215
    value (148)
        on left: 166 167 168 169
        on right: 128 190 237
    string (149)
        on left: 170 171
        on right: 167 171
    break (150)
        on left: 172
        on right: 95
    continue (151)
        on left: 173
        on right: 96
    return_expression (152)
        on left: 174
        on right: 97
    optional_bterm (153)
        on left: 175 176
        on right: 174
    opt_num (154)
        on left: 177 178
        on right: 172 173
    case_clauses (155)
        on left: 179 180
        on right: 180 190
    case_clause (156)
        on left: 181
        on right: 180
    case_selector (157)
        on left: 182 183
        on right: 181
    case_condition (158)
        on left: 184 185 186
        on right: 182
    label (159)
        on left: 187
        on right: 101
    goto_expression (160)
        on left: 188
        on right: 98
    switch_expression (161)
        on left: 190
        on right: 94
    $@11 (162)
        on left: 189
        on right: 190
    for_loop_expression (163)
        on left: 192
        on right: 93
    $@12 (164)
        on left: 191
        on right: 192
    for_increment (165)
        on left: 193 194
        on right: 198
    for_to_clause (166)
        on left: 198
        on right: 202
    $@13 (167)
        on left: 195
        on right: 198
    $@14 (168)
        on left: 196
        on right: 198
    $@15 (169)
        on left: 197
        on right: 198
    opt_for_initializer (170)
        on left: 199 201
        on right: 198
    $@16 (171)
        on left: 200
        on right: 201
    for_clause (172)
        on left: 202 203 204
        on right: 192
    in_clause (173)
        on left: 206
        on right: 203
    $@17 (174)
        on left: 205
        on right: 206
    while (175)
        on left: 209
        on right: 92
    $@18 (176)
        on left: 207
        on right: 209
    $@19 (177)
        on left: 208
        on right: 209
    local_block (178)
        on left: 210 211
        on right: 192 209 215 218
    closing_brace (179)
        on left: 212
        on right: 85 211
    if_expression (180)
        on left: 215
        on right: 91
    $@20 (181)
        on left: 213
        on right: 215
    $@21 (182)
        on left: 214
        on right: 215
    else_clause (183)
        on left: 216 218
        on right: 215
    $@22 (184)
        on left: 217
        on right: 218
    stmntlist (185)
        on left: 219 220
        on right: 85 181 211 220
    closing_paren (186)
        on left: 221
        on right: 223 225
    call_expression (187)
        on left: 223 225 226 227
        on right: 89 129
    @23 (188)
        on left: 222
        on right: 223
    @24 (189)
        on left: 224
        on right: 225
    array_constructor (190)
        on left: 229
        on right: 226
    @25 (191)
        on left: 228
        on right: 229
    map_constructor (192)
        on left: 231
        on right: 227
    @26 (193)
        on left: 230
        on right: 231
    optional_map_associates (194)
        on left: 232 233
        on right: 231
    map_associates (195)
        on left: 234 235
        on right: 233 235
    map_associate (196)
        on left: 237
        on right: 234 235
    @27 (197)
        on left: 236
        on right: 237
    function_id_or_pointer (198)
        on left: 238 239
        on right: 225
    parameter (199)
        on left: 240 241
        on right: 66 67
    type_cast (200)
        on left: 242
        on right: 137
    type_name (201)
        on left: 243 244
        on right: 26 53 56 57 69 201 206 242
    array_size (202)
        on left: 245 246
        on right: 244
    boolean_literal (203)
        on left: 247 248
        on right: 256
    float_literal (204)
        on left: 249
        on right: 254
    integer_literal (205)
        on left: 250 251
        on right: 184 253
    character_literal (206)
        on left: 252
        on right: 255
    simple_literal (207)
        on left: 253 254 255 256
        on right: 43 168


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    2 file_structure: $@1 . namespace prerequisites global_declarations header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 10 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

   11 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    2 file_structure: $@1 namespace . prerequisites global_declarations header_delimiter macro_definitions

    $default  reduce using rule 12 (prerequisites)

    prerequisites  go to state 7


State 6

   11 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    2 file_structure: $@1 namespace prerequisites . global_declarations header_delimiter macro_definitions
   13 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 15 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

   11 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 11 (namespace)


State 9

   14 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   13 prerequisites: prerequisites require .

    $default  reduce using rule 13 (prerequisites)


State 11

    2 file_structure: $@1 namespace prerequisites global_declarations . header_delimiter macro_definitions
   16 global_declarations: global_declarations . constants ';'
   17                    | global_declarations . global_var ';'
   18                    | global_declarations . T_TYPEDEF typedef ';'

    T_TYPEDEF  shift, and go to state 13
    T_STATIC   shift, and go to state 14
    T_CONST    shift, and go to state 15
    '!'        shift, and go to state 16

    T_STATIC           [reduce using rule 3 (header_delimiter)]
    T_TYPE_IDENTIFIER  reduce using rule 3 (header_delimiter)
    T_TYPE_IDENTIFIER  [reduce using rule 35 (scope)]
    $default           reduce using rule 3 (header_delimiter)

    header_delimiter  go to state 17
    scope             go to state 18
    constants         go to state 19
    global_var        go to state 20


State 12

   14 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 21


State 13

   18 global_declarations: global_declarations T_TYPEDEF . typedef ';'

    T_ENUM    shift, and go to state 22
    T_STRUCT  shift, and go to state 23

    typedef            go to state 24
    struct_definition  go to state 25
    enum_definition    go to state 26


State 14

   36 scope: T_STATIC .

    $default  reduce using rule 36 (scope)


State 15

   37 constants: T_CONST . constant_list

    $default  reduce using rule 40 ($@3)

    constant_list  go to state 27
    constdef       go to state 28
    $@3            go to state 29


State 16

    4 header_delimiter: '!' .

    $default  reduce using rule 4 (header_delimiter)


State 17

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter . macro_definitions

    T_ANNOTATION  shift, and go to state 30

    $end      reduce using rule 5 (macro_definitions)
    $default  reduce using rule 71 (annotations)

    macro_definitions         go to state 31
    element_with_annotations  go to state 32
    annotations               go to state 33
    annotation                go to state 34


State 18

   55 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 35

    var_decl   go to state 36
    type_name  go to state 37


State 19

   16 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 38


State 20

   17 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 39


State 21

   14 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 14 (require)


State 22

   23 enum_definition: T_ENUM . $@2 '{' enum_value_definitions '}' T_IDENT

    $default  reduce using rule 22 ($@2)

    $@2  go to state 40


State 23

   21 struct_definition: T_STRUCT . '{' struct_element_definitions '}' T_IDENT

    '{'  shift, and go to state 41


State 24

   18 global_declarations: global_declarations T_TYPEDEF typedef . ';'

    ';'  shift, and go to state 42


State 25

   20 typedef: struct_definition .

    $default  reduce using rule 20 (typedef)


State 26

   19 typedef: enum_definition .

    $default  reduce using rule 19 (typedef)


State 27

   37 constants: T_CONST constant_list .
   39 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 43

    $default  reduce using rule 37 (constants)


State 28

   38 constant_list: constdef .

    $default  reduce using rule 38 (constant_list)


State 29

   42 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 44
    T_NUM     shift, and go to state 45
    T_STRING  shift, and go to state 46

    variable_identifier  go to state 47


State 30

   74 annotation: T_ANNOTATION . $@5 '(' annotation_values ')'

    $default  reduce using rule 73 ($@5)

    $@5  go to state 48


State 31

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter macro_definitions .

    $default  reduce using rule 2 (file_structure)


State 32

    6 macro_definitions: element_with_annotations . macro_definitions

    T_ANNOTATION  shift, and go to state 30

    $end      reduce using rule 5 (macro_definitions)
    $default  reduce using rule 71 (annotations)

    macro_definitions         go to state 49
    element_with_annotations  go to state 32
    annotations               go to state 33
    annotation                go to state 34


State 33

    7 element_with_annotations: annotations . macro_or_native_function

    T_NATIVE  shift, and go to state 50

    $default  reduce using rule 83 ($@7)

    macro_or_native_function    go to state 51
    native_function_definition  go to state 52
    macro_definition            go to state 53
    $@7                         go to state 54


State 34

   72 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 30

    $default  reduce using rule 71 (annotations)

    annotations  go to state 55
    annotation   go to state 34


State 35

  243 type_name: T_TYPE_IDENTIFIER .
  244          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 56

    $default  reduce using rule 243 (type_name)

    array_size  go to state 57


State 36

   55 global_var: scope var_decl .

    $default  reduce using rule 55 (global_var)


State 37

   56 var_decl: type_name . variable_identifier assignment_expression
   57         | type_name . variable_identifier

    T_IDENT   shift, and go to state 44
    T_NUM     shift, and go to state 45
    T_STRING  shift, and go to state 46

    variable_identifier  go to state 58


State 38

   16 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 16 (global_declarations)


State 39

   17 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 17 (global_declarations)


State 40

   23 enum_definition: T_ENUM $@2 . '{' enum_value_definitions '}' T_IDENT

    '{'  shift, and go to state 59


State 41

   21 struct_definition: T_STRUCT '{' . struct_element_definitions '}' T_IDENT

    T_TYPE_IDENTIFIER  shift, and go to state 35

    struct_element_definitions  go to state 60
    struct_element              go to state 61
    type_name                   go to state 62


State 42

   18 global_declarations: global_declarations T_TYPEDEF typedef ';' .

    $default  reduce using rule 18 (global_declarations)


State 43

   39 constant_list: constant_list ',' . constdef

    $default  reduce using rule 40 ($@3)

    constdef  go to state 63
    $@3       go to state 29


State 44

   45 variable_identifier: T_IDENT .

    $default  reduce using rule 45 (variable_identifier)


State 45

   46 variable_identifier: T_NUM .

    $default  reduce using rule 46 (variable_identifier)


State 46

   47 variable_identifier: T_STRING .

    $default  reduce using rule 47 (variable_identifier)


State 47

   42 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 64


State 48

   74 annotation: T_ANNOTATION $@5 . '(' annotation_values ')'

    '('  shift, and go to state 65


State 49

    6 macro_definitions: element_with_annotations macro_definitions .

    $default  reduce using rule 6 (macro_definitions)


State 50

   82 native_function_definition: T_NATIVE . $@6 macrostart

    $default  reduce using rule 81 ($@6)

    $@6  go to state 66


State 51

    7 element_with_annotations: annotations macro_or_native_function .

    $default  reduce using rule 7 (element_with_annotations)


State 52

    8 macro_or_native_function: native_function_definition . ';'

    ';'  shift, and go to state 67


State 53

    9 macro_or_native_function: macro_definition .

    $default  reduce using rule 9 (macro_or_native_function)


State 54

   84 macro_definition: $@7 . macrostart block

    T_STATIC  shift, and go to state 14

    $default  reduce using rule 35 (scope)

    scope       go to state 68
    macro_type  go to state 69
    macrostart  go to state 70


State 55

   72 annotations: annotation annotations .

    $default  reduce using rule 72 (annotations)


State 56

  245 array_size: '[' . ']'
  246           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 71
    ']'    shift, and go to state 72


State 57

  244 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 244 (type_name)


State 58

   56 var_decl: type_name variable_identifier . assignment_expression
   57         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 73

    $default  reduce using rule 57 (var_decl)

    assignment_expression  go to state 74


State 59

   23 enum_definition: T_ENUM $@2 '{' . enum_value_definitions '}' T_IDENT

    T_IDENT  shift, and go to state 75

    $default  reduce using rule 27 (enum_value_definitions)

    enum_value_definitions  go to state 76
    enum_values             go to state 77
    enum_value              go to state 78


State 60

   21 struct_definition: T_STRUCT '{' struct_element_definitions . '}' T_IDENT

    '}'  shift, and go to state 79


State 61

   24 struct_element_definitions: struct_element .
   25                           | struct_element . struct_element_definitions

    T_TYPE_IDENTIFIER  shift, and go to state 35

    $default  reduce using rule 24 (struct_element_definitions)

    struct_element_definitions  go to state 80
    struct_element              go to state 61
    type_name                   go to state 62


State 62

   26 struct_element: type_name . variable_identifier ';'

    T_IDENT   shift, and go to state 44
    T_NUM     shift, and go to state 45
    T_STRING  shift, and go to state 46

    variable_identifier  go to state 81


State 63

   39 constant_list: constant_list ',' constdef .

    $default  reduce using rule 39 (constant_list)


State 64

   42 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 84
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    '-'                      shift, and go to state 88

    constant_literal   go to state 89
    boolean_literal    go to state 90
    float_literal      go to state 91
    integer_literal    go to state 92
    character_literal  go to state 93
    simple_literal     go to state 94


State 65

   74 annotation: T_ANNOTATION $@5 '(' . annotation_values ')'

    T_IDENT   shift, and go to state 95
    T_STRING  shift, and go to state 96

    $default  reduce using rule 78 (annotation_values)

    annotation_value   go to state 97
    annotation_values  go to state 98


State 66

   82 native_function_definition: T_NATIVE $@6 . macrostart

    T_STATIC  shift, and go to state 14

    $default  reduce using rule 35 (scope)

    scope       go to state 68
    macro_type  go to state 69
    macrostart  go to state 99


State 67

    8 macro_or_native_function: native_function_definition ';' .

    $default  reduce using rule 8 (macro_or_native_function)


State 68

   52 macro_type: scope . T_VOID
   53           | scope . type_name

    T_VOID             shift, and go to state 100
    T_TYPE_IDENTIFIER  shift, and go to state 35

    type_name  go to state 101


State 69

   54 macrostart: macro_type . macro_declaration '(' argument_list ')' optional_description

    T_IDENT  shift, and go to state 102
    T_FUNC   shift, and go to state 103

    macro_declaration  go to state 104


State 70

   84 macro_definition: $@7 macrostart . block

    '{'  shift, and go to state 105

    block  go to state 106


State 71

  246 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 107


State 72

  245 array_size: '[' ']' .

    $default  reduce using rule 245 (array_size)


State 73

  117 assignment_expression: T_ASSIGN . expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    T_IDENT     [reduce using rule 120 (range_expression)]
    T_FUNC      [reduce using rule 120 (range_expression)]
    T_VARIABLE  [reduce using rule 120 (range_expression)]
    '~'         [reduce using rule 120 (range_expression)]
    '+'         [reduce using rule 120 (range_expression)]
    '-'         [reduce using rule 120 (range_expression)]
    '*'         [reduce using rule 120 (range_expression)]
    '['         [reduce using rule 120 (range_expression)]
    '{'         [reduce using rule 120 (range_expression)]
    $default    reduce using rule 120 (range_expression)

    variable_reference      go to state 121
    expression              go to state 122
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 74

   56 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 56 (var_decl)


State 75

   31 enum_value: T_IDENT . opt_enum_assignment

    T_ASSIGN  shift, and go to state 136

    $default  reduce using rule 32 (opt_enum_assignment)

    opt_enum_assignment  go to state 137


State 76

   23 enum_definition: T_ENUM $@2 '{' enum_value_definitions . '}' T_IDENT

    '}'  shift, and go to state 138


State 77

   28 enum_value_definitions: enum_values .

    $default  reduce using rule 28 (enum_value_definitions)


State 78

   29 enum_values: enum_value .
   30            | enum_value . ',' enum_values

    ','  shift, and go to state 139

    $default  reduce using rule 29 (enum_values)


State 79

   21 struct_definition: T_STRUCT '{' struct_element_definitions '}' . T_IDENT

    T_IDENT  shift, and go to state 140


State 80

   25 struct_element_definitions: struct_element struct_element_definitions .

    $default  reduce using rule 25 (struct_element_definitions)


State 81

   26 struct_element: type_name variable_identifier . ';'

    ';'  shift, and go to state 141


State 82

  250 integer_literal: T_NUM .

    $default  reduce using rule 250 (integer_literal)


State 83

  249 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 249 (float_literal)


State 84

   44 constant_literal: T_STRING .

    $default  reduce using rule 44 (constant_literal)


State 85

  252 character_literal: T_CHARACTER .

    $default  reduce using rule 252 (character_literal)


State 86

  247 boolean_literal: T_TRUE .

    $default  reduce using rule 247 (boolean_literal)


State 87

  248 boolean_literal: T_FALSE .

    $default  reduce using rule 248 (boolean_literal)


State 88

  251 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 142


State 89

   42 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 41 ($@4)

    $@4  go to state 143


State 90

  256 simple_literal: boolean_literal .

    $default  reduce using rule 256 (simple_literal)


State 91

  254 simple_literal: float_literal .

    $default  reduce using rule 254 (simple_literal)


State 92

  253 simple_literal: integer_literal .

    $default  reduce using rule 253 (simple_literal)


State 93

  255 simple_literal: character_literal .

    $default  reduce using rule 255 (simple_literal)


State 94

   43 constant_literal: simple_literal .

    $default  reduce using rule 43 (constant_literal)


State 95

   75 annotation_value: T_IDENT . T_ASSIGN T_STRING
   76                 | T_IDENT .

    T_ASSIGN  shift, and go to state 144

    $default  reduce using rule 76 (annotation_value)


State 96

   77 annotation_value: T_STRING .

    $default  reduce using rule 77 (annotation_value)


State 97

   79 annotation_values: annotation_value .
   80                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 145

    $default  reduce using rule 79 (annotation_values)


State 98

   74 annotation: T_ANNOTATION $@5 '(' annotation_values . ')'

    ')'  shift, and go to state 146


State 99

   82 native_function_definition: T_NATIVE $@6 macrostart .

    $default  reduce using rule 82 (native_function_definition)


State 100

   52 macro_type: scope T_VOID .

    $default  reduce using rule 52 (macro_type)


State 101

   53 macro_type: scope type_name .

    $default  reduce using rule 53 (macro_type)


State 102

   50 macro_declaration: T_IDENT .

    $default  reduce using rule 50 (macro_declaration)


State 103

   51 macro_declaration: T_FUNC .

    $default  reduce using rule 51 (macro_declaration)


State 104

   54 macrostart: macro_type macro_declaration . '(' argument_list ')' optional_description

    '('  shift, and go to state 147


State 105

   85 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 86 (var_decls)

    var_decls  go to state 148


State 106

   84 macro_definition: $@7 macrostart block .

    $default  reduce using rule 84 (macro_definition)


State 107

  246 array_size: '[' T_NUM ']' .

    $default  reduce using rule 246 (array_size)


State 108

  131 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 149


State 109

   49 variable_reference: T_IDENT .
  169 value: T_IDENT .
  239 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 49 (variable_reference)
    '('       reduce using rule 239 (function_id_or_pointer)
    $default  reduce using rule 169 (value)


State 110

  170 string: T_STRING .

    $default  reduce using rule 170 (string)


State 111

  223 call_expression: T_FUNC . '(' @23 parameter_list closing_paren

    '('  shift, and go to state 150


State 112

   48 variable_reference: T_VARIABLE .
  166 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 48 (variable_reference)
    $default  reduce using rule 166 (value)


State 113

  132 unary_expression: '!' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 151
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 114

  133 unary_expression: '~' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 152
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 115

  134 unary_expression: '+' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 153
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 116

  135 unary_expression: '-' . variable_reference
  251 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 154
    T_NUM       shift, and go to state 142
    T_VARIABLE  shift, and go to state 155

    variable_reference  go to state 156


State 117

  238 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 154
    T_VARIABLE  shift, and go to state 155

    variable_reference  go to state 157


State 118

  229 array_constructor: '[' . @25 parameter_list ']'

    $default  reduce using rule 228 (@25)

    @25  go to state 158


State 119

  231 map_constructor: '{' . @26 optional_map_associates '}'

    $default  reduce using rule 230 (@26)

    @26  go to state 159


State 120

  162 binary_expression: '(' . binary_expression ')'
  242 type_cast: '(' . type_name ')'

    T_NEW                    shift, and go to state 108
    T_TYPE_IDENTIFIER        shift, and go to state 35
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 160
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    type_name               go to state 161
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 121

  163 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 73

    assignment_expression  go to state 162


State 122

  117 assignment_expression: T_ASSIGN expression .

    $default  reduce using rule 117 (assignment_expression)


State 123

  119 expression: range_expression .

    $default  reduce using rule 119 (expression)


State 124

  136 binary_expression: simple_term .

    $default  reduce using rule 136 (binary_expression)


State 125

  130 simple_term: constructor_expression .

    $default  reduce using rule 130 (simple_term)


State 126

  139 binary_expression: unary_expression .

    $default  reduce using rule 139 (binary_expression)


State 127

  118 expression: binary_expression .
  122 range_expression: binary_expression . T_DOTDOT binary_expression $@10 range_increment
  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 163
    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_OR           shift, and go to state 169
    T_AND          shift, and go to state 170
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    T_DOTDOT       [reduce using rule 118 (expression)]
    T_NMATCH       [reduce using rule 118 (expression)]
    T_NE           [reduce using rule 118 (expression)]
    T_EQ           [reduce using rule 118 (expression)]
    T_SHIFT_LEFT   [reduce using rule 118 (expression)]
    T_SHIFT_RIGHT  [reduce using rule 118 (expression)]
    T_OR           [reduce using rule 118 (expression)]
    T_AND          [reduce using rule 118 (expression)]
    T_LE           [reduce using rule 118 (expression)]
    T_GE           [reduce using rule 118 (expression)]
    T_POWER_TO     [reduce using rule 118 (expression)]
    '&'            [reduce using rule 118 (expression)]
    '|'            [reduce using rule 118 (expression)]
    '^'            [reduce using rule 118 (expression)]
    '~'            [reduce using rule 118 (expression)]
    '<'            [reduce using rule 118 (expression)]
    '>'            [reduce using rule 118 (expression)]
    '+'            [reduce using rule 118 (expression)]
    '-'            [reduce using rule 118 (expression)]
    '*'            [reduce using rule 118 (expression)]
    '/'            [reduce using rule 118 (expression)]
    '%'            [reduce using rule 118 (expression)]
    '['            [reduce using rule 118 (expression)]
    '.'            [reduce using rule 118 (expression)]
    $default       reduce using rule 118 (expression)


State 128

  128 simple_term: value .

    $default  reduce using rule 128 (simple_term)


State 129

  167 value: string .
  171 string: string . T_STRING

    T_STRING  shift, and go to state 187

    $default  reduce using rule 167 (value)


State 130

  129 simple_term: call_expression .

    $default  reduce using rule 129 (simple_term)


State 131

  226 call_expression: array_constructor .

    $default  reduce using rule 226 (call_expression)


State 132

  227 call_expression: map_constructor .

    $default  reduce using rule 227 (call_expression)


State 133

  225 call_expression: function_id_or_pointer . '(' @24 parameter_list closing_paren

    '('  shift, and go to state 188


State 134

  137 binary_expression: type_cast . simple_term

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 189
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 190
    '-'                      shift, and go to state 88
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119

    simple_term             go to state 191
    constructor_expression  go to state 125
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 135

  168 value: simple_literal .

    $default  reduce using rule 168 (value)


State 136

   33 opt_enum_assignment: T_ASSIGN . T_NUM
   34                    | T_ASSIGN . '-' T_NUM

    T_NUM  shift, and go to state 192
    '-'    shift, and go to state 193


State 137

   31 enum_value: T_IDENT opt_enum_assignment .

    $default  reduce using rule 31 (enum_value)


State 138

   23 enum_definition: T_ENUM $@2 '{' enum_value_definitions '}' . T_IDENT

    T_IDENT  shift, and go to state 194


State 139

   30 enum_values: enum_value ',' . enum_values

    T_IDENT  shift, and go to state 75

    enum_values  go to state 195
    enum_value   go to state 78


State 140

   21 struct_definition: T_STRUCT '{' struct_element_definitions '}' T_IDENT .

    $default  reduce using rule 21 (struct_definition)


State 141

   26 struct_element: type_name variable_identifier ';' .

    $default  reduce using rule 26 (struct_element)


State 142

  251 integer_literal: '-' T_NUM .

    $default  reduce using rule 251 (integer_literal)


State 143

   42 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 42 (constdef)


State 144

   75 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 196


State 145

   80 annotation_values: annotation_value ',' . annotation_values

    T_IDENT   shift, and go to state 95
    T_STRING  shift, and go to state 96

    $default  reduce using rule 78 (annotation_values)

    annotation_value   go to state 97
    annotation_values  go to state 197


State 146

   74 annotation: T_ANNOTATION $@5 '(' annotation_values ')' .

    $default  reduce using rule 74 (annotation)


State 147

   54 macrostart: macro_type macro_declaration '(' . argument_list ')' optional_description

    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_ELLIPSIS         shift, and go to state 198

    $default  reduce using rule 60 (argument_list)

    argument_list         go to state 199
    non_empty_arguments   go to state 200
    argument_declaration  go to state 201
    type_name             go to state 202


State 148

   85 block: '{' var_decls . stmntlist closing_brace
   87 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 203
    T_FOR              shift, and go to state 204
    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_IDENT            shift, and go to state 205
    T_FUNC             shift, and go to state 111
    T_IF               shift, and go to state 206
    T_WHILE            shift, and go to state 207
    T_GOTO             shift, and go to state 208
    T_SWITCH           shift, and go to state 209
    T_BREAK            shift, and go to state 210
    T_CONTINUE         shift, and go to state 211
    T_RETURN           shift, and go to state 212
    T_VARIABLE         shift, and go to state 155
    '*'                shift, and go to state 117
    '['                shift, and go to state 118
    ';'                shift, and go to state 213
    '{'                shift, and go to state 214

    '}'  reduce using rule 219 (stmntlist)

    variable_reference      go to state 215
    var_decl                go to state 216
    block                   go to state 217
    statement               go to state 218
    assignment              go to state 219
    shorthand_assignment    go to state 220
    assignment_target       go to state 221
    increment_expression    go to state 222
    break                   go to state 223
    continue                go to state 224
    return_expression       go to state 225
    label                   go to state 226
    goto_expression         go to state 227
    switch_expression       go to state 228
    for_loop_expression     go to state 229
    while                   go to state 230
    if_expression           go to state 231
    stmntlist               go to state 232
    call_expression         go to state 233
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_name               go to state 37


State 149

  131 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 234


State 150

  223 call_expression: T_FUNC '(' . @23 parameter_list closing_paren

    $default  reduce using rule 222 (@23)

    @23  go to state 235


State 151

  132 unary_expression: '!' binary_expression .
  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 132 (unary_expression)


State 152

  133 unary_expression: '~' binary_expression .
  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 133 (unary_expression)


State 153

  134 unary_expression: '+' binary_expression .
  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 173
    '*'         shift, and go to state 182
    '/'         shift, and go to state 183
    '%'         shift, and go to state 184
    '['         shift, and go to state 185
    '.'         shift, and go to state 186

    $default  reduce using rule 134 (unary_expression)


State 154

   49 variable_reference: T_IDENT .

    $default  reduce using rule 49 (variable_reference)


State 155

   48 variable_reference: T_VARIABLE .

    $default  reduce using rule 48 (variable_reference)


State 156

  135 unary_expression: '-' variable_reference .

    $default  reduce using rule 135 (unary_expression)


State 157

  238 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 238 (function_id_or_pointer)


State 158

  229 array_constructor: '[' @25 . parameter_list ']'

    error                    shift, and go to state 236
    T_NEW                    shift, and go to state 108
    T_ELLIPSIS               shift, and go to state 237
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    ','  reduce using rule 120 (range_expression)
    ']'  reduce using rule 64 (parameter_list)
    ']'  [reduce using rule 120 (range_expression)]

    variable_reference      go to state 121
    parameter_list          go to state 238
    non_empty_parameters    go to state 239
    expression              go to state 240
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    parameter               go to state 241
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 159

  231 map_constructor: '{' @26 . optional_map_associates '}'

    T_STRING  shift, and go to state 242

    $default  reduce using rule 232 (optional_map_associates)

    optional_map_associates  go to state 243
    map_associates           go to state 244
    map_associate            go to state 245


State 160

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression
  162                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_OR           shift, and go to state 169
    T_AND          shift, and go to state 170
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186
    ')'            shift, and go to state 246


State 161

  242 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 247


State 162

  163 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 163 (binary_expression)


State 163

  122 range_expression: binary_expression T_DOTDOT . binary_expression $@10 range_increment

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 248
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 164

  142 binary_expression: binary_expression T_NMATCH . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 249
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 165

  161 binary_expression: binary_expression T_NE . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 250
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 166

  160 binary_expression: binary_expression T_EQ . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 251
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 167

  151 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 252
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 168

  152 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 253
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 169

  155 binary_expression: binary_expression T_OR . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 254
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 170

  154 binary_expression: binary_expression T_AND . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 255
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 171

  158 binary_expression: binary_expression T_LE . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 256
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 172

  159 binary_expression: binary_expression T_GE . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 257
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 173

  153 binary_expression: binary_expression T_POWER_TO . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 258
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 174

  143 binary_expression: binary_expression '&' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 259
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 175

  144 binary_expression: binary_expression '|' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 260
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 176

  146 binary_expression: binary_expression '^' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 261
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 177

  141 binary_expression: binary_expression '~' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 262
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 178

  156 binary_expression: binary_expression '<' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 263
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 179

  157 binary_expression: binary_expression '>' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 264
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 180

  145 binary_expression: binary_expression '+' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 265
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 181

  147 binary_expression: binary_expression '-' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 266
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 182

  148 binary_expression: binary_expression '*' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 267
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 183

  149 binary_expression: binary_expression '/' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 268
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 184

  150 binary_expression: binary_expression '%' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 269
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 185

  140 binary_expression: binary_expression '[' . expression ']'

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    $default  reduce using rule 120 (range_expression)

    variable_reference      go to state 121
    expression              go to state 270
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 186

  138 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 271


State 187

  171 string: string T_STRING .

    $default  reduce using rule 171 (string)


State 188

  225 call_expression: function_id_or_pointer '(' . @24 parameter_list closing_paren

    $default  reduce using rule 224 (@24)

    @24  go to state 272


State 189

  169 value: T_IDENT .
  239 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 239 (function_id_or_pointer)
    $default  reduce using rule 169 (value)


State 190

  166 value: T_VARIABLE .

    $default  reduce using rule 166 (value)


State 191

  137 binary_expression: type_cast simple_term .

    $default  reduce using rule 137 (binary_expression)


State 192

   33 opt_enum_assignment: T_ASSIGN T_NUM .

    $default  reduce using rule 33 (opt_enum_assignment)


State 193

   34 opt_enum_assignment: T_ASSIGN '-' . T_NUM

    T_NUM  shift, and go to state 273


State 194

   23 enum_definition: T_ENUM $@2 '{' enum_value_definitions '}' T_IDENT .

    $default  reduce using rule 23 (enum_definition)


State 195

   30 enum_values: enum_value ',' enum_values .

    $default  reduce using rule 30 (enum_values)


State 196

   75 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 75 (annotation_value)


State 197

   80 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 80 (annotation_values)


State 198

   70 argument_declaration: T_ELLIPSIS .

    $default  reduce using rule 70 (argument_declaration)


State 199

   54 macrostart: macro_type macro_declaration '(' argument_list . ')' optional_description

    ')'  shift, and go to state 274


State 200

   61 argument_list: non_empty_arguments .
   63 non_empty_arguments: non_empty_arguments . ',' argument_declaration

    ','  shift, and go to state 275

    $default  reduce using rule 61 (argument_list)


State 201

   62 non_empty_arguments: argument_declaration .

    $default  reduce using rule 62 (non_empty_arguments)


State 202

   69 argument_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 44
    T_NUM     shift, and go to state 45
    T_STRING  shift, and go to state 46

    variable_identifier  go to state 276


State 203

  103 statement: error . ';'

    ';'  shift, and go to state 277


State 204

  192 for_loop_expression: T_FOR . for_clause $@12 local_block

    error  shift, and go to state 278
    '('    shift, and go to state 279

    for_to_clause  go to state 280
    for_clause     go to state 281
    in_clause      go to state 282


State 205

   49 variable_reference: T_IDENT .
  187 label: T_IDENT . ':'
  239 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 283

    '('       reduce using rule 239 (function_id_or_pointer)
    $default  reduce using rule 49 (variable_reference)


State 206

  215 if_expression: T_IF . condition $@20 local_block $@21 else_clause

    '('  shift, and go to state 284

    condition  go to state 285


State 207

  209 while: T_WHILE . $@18 condition $@19 local_block

    $default  reduce using rule 207 ($@18)

    $@18  go to state 286


State 208

  188 goto_expression: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 287


State 209

  190 switch_expression: T_SWITCH . '(' value ')' $@11 '{' case_clauses '}'

    '('  shift, and go to state 288


State 210

  172 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 289

    $default  reduce using rule 177 (opt_num)

    opt_num  go to state 290


State 211

  173 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 289

    $default  reduce using rule 177 (opt_num)

    opt_num  go to state 291


State 212

  174 return_expression: T_RETURN . optional_bterm

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    $default  reduce using rule 175 (optional_bterm)

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 292
    value                   go to state 128
    string                  go to state 129
    optional_bterm          go to state 293
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 213

   88 statement: ';' .

    $default  reduce using rule 88 (statement)


State 214

   85 block: '{' . var_decls stmntlist closing_brace
  231 map_constructor: '{' . @26 optional_map_associates '}'

    T_STRING  reduce using rule 230 (@26)
    '}'       reduce using rule 86 (var_decls)
    '}'       [reduce using rule 230 (@26)]
    $default  reduce using rule 86 (var_decls)

    var_decls  go to state 148
    @26        go to state 159


State 215

  104 assignment: variable_reference . assignment_expression
  110 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator expression
  111 assignment_target: variable_reference .
  127 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 294
    T_MINUSMINUS  shift, and go to state 295
    T_ASSIGN      shift, and go to state 73

    '['       reduce using rule 111 (assignment_target)
    '.'       reduce using rule 111 (assignment_target)
    $default  reduce using rule 109 ($@9)

    $@9                    go to state 296
    assignment_expression  go to state 297
    minusminus_plusplus    go to state 298


State 216

   87 var_decls: var_decls var_decl . ';'
  102 statement: var_decl .

    ';'  shift, and go to state 299

    ';'       [reduce using rule 102 (statement)]
    $default  reduce using rule 102 (statement)


State 217

   99 statement: block .

    $default  reduce using rule 99 (statement)


State 218

  220 stmntlist: statement . stmntlist

    error              shift, and go to state 203
    T_FOR              shift, and go to state 204
    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_IDENT            shift, and go to state 205
    T_FUNC             shift, and go to state 111
    T_IF               shift, and go to state 206
    T_WHILE            shift, and go to state 207
    T_GOTO             shift, and go to state 208
    T_SWITCH           shift, and go to state 209
    T_BREAK            shift, and go to state 210
    T_CONTINUE         shift, and go to state 211
    T_RETURN           shift, and go to state 212
    T_VARIABLE         shift, and go to state 155
    '*'                shift, and go to state 117
    '['                shift, and go to state 118
    ';'                shift, and go to state 213
    '{'                shift, and go to state 214

    T_CASE     reduce using rule 219 (stmntlist)
    T_DEFAULT  reduce using rule 219 (stmntlist)
    '}'        reduce using rule 219 (stmntlist)

    variable_reference      go to state 215
    var_decl                go to state 300
    block                   go to state 217
    statement               go to state 218
    assignment              go to state 219
    shorthand_assignment    go to state 220
    assignment_target       go to state 221
    increment_expression    go to state 222
    break                   go to state 223
    continue                go to state 224
    return_expression       go to state 225
    label                   go to state 226
    goto_expression         go to state 227
    switch_expression       go to state 228
    for_loop_expression     go to state 229
    while                   go to state 230
    if_expression           go to state 231
    stmntlist               go to state 301
    call_expression         go to state 233
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_name               go to state 37


State 219

   90 statement: assignment . ';'

    ';'  shift, and go to state 302


State 220

  108 assignment: shorthand_assignment .

    $default  reduce using rule 108 (assignment)


State 221

  106 assignment: assignment_target . '.' T_IDENT $@8 assignment_expression
  107           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 303
    '.'  shift, and go to state 304


State 222

  100 statement: increment_expression . ';'

    ';'  shift, and go to state 305


State 223

   95 statement: break .

    $default  reduce using rule 95 (statement)


State 224

   96 statement: continue .

    $default  reduce using rule 96 (statement)


State 225

   97 statement: return_expression . ';'

    ';'  shift, and go to state 306


State 226

  101 statement: label .

    $default  reduce using rule 101 (statement)


State 227

   98 statement: goto_expression . ';'

    ';'  shift, and go to state 307


State 228

   94 statement: switch_expression .

    $default  reduce using rule 94 (statement)


State 229

   93 statement: for_loop_expression .

    $default  reduce using rule 93 (statement)


State 230

   92 statement: while .

    $default  reduce using rule 92 (statement)


State 231

   91 statement: if_expression .

    $default  reduce using rule 91 (statement)


State 232

   85 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 308

    closing_brace  go to state 309


State 233

   89 statement: call_expression . ';'

    ';'  shift, and go to state 310


State 234

  131 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 311


State 235

  223 call_expression: T_FUNC '(' @23 . parameter_list closing_paren

    error                    shift, and go to state 236
    T_NEW                    shift, and go to state 108
    T_ELLIPSIS               shift, and go to state 237
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    ','  reduce using rule 120 (range_expression)
    ')'  reduce using rule 64 (parameter_list)
    ')'  [reduce using rule 120 (range_expression)]

    variable_reference      go to state 121
    parameter_list          go to state 312
    non_empty_parameters    go to state 239
    expression              go to state 240
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    parameter               go to state 241
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 236

   68 non_empty_parameters: error .

    $default  reduce using rule 68 (non_empty_parameters)


State 237

  241 parameter: T_ELLIPSIS . expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    $default  reduce using rule 120 (range_expression)

    variable_reference      go to state 121
    expression              go to state 313
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 238

  229 array_constructor: '[' @25 parameter_list . ']'

    ']'  shift, and go to state 314


State 239

   65 parameter_list: non_empty_parameters .
   67 non_empty_parameters: non_empty_parameters . ',' parameter

    ','  shift, and go to state 315

    $default  reduce using rule 65 (parameter_list)


State 240

  240 parameter: expression .

    $default  reduce using rule 240 (parameter)


State 241

   66 non_empty_parameters: parameter .

    $default  reduce using rule 66 (non_empty_parameters)


State 242

  237 map_associate: T_STRING . ':' @27 value

    ':'  shift, and go to state 316


State 243

  231 map_constructor: '{' @26 optional_map_associates . '}'

    '}'  shift, and go to state 317


State 244

  233 optional_map_associates: map_associates .
  235 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 318

    $default  reduce using rule 233 (optional_map_associates)


State 245

  234 map_associates: map_associate .

    $default  reduce using rule 234 (map_associates)


State 246

  162 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 162 (binary_expression)


State 247

  242 type_cast: '(' type_name ')' .

    $default  reduce using rule 242 (type_cast)


State 248

  122 range_expression: binary_expression T_DOTDOT binary_expression . $@10 range_increment
  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_OR           shift, and go to state 169
    T_AND          shift, and go to state 170
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    T_NMATCH       [reduce using rule 121 ($@10)]
    T_NE           [reduce using rule 121 ($@10)]
    T_EQ           [reduce using rule 121 ($@10)]
    T_SHIFT_LEFT   [reduce using rule 121 ($@10)]
    T_SHIFT_RIGHT  [reduce using rule 121 ($@10)]
    T_OR           [reduce using rule 121 ($@10)]
    T_AND          [reduce using rule 121 ($@10)]
    T_LE           [reduce using rule 121 ($@10)]
    T_GE           [reduce using rule 121 ($@10)]
    T_POWER_TO     [reduce using rule 121 ($@10)]
    '&'            [reduce using rule 121 ($@10)]
    '|'            [reduce using rule 121 ($@10)]
    '^'            [reduce using rule 121 ($@10)]
    '~'            [reduce using rule 121 ($@10)]
    '<'            [reduce using rule 121 ($@10)]
    '>'            [reduce using rule 121 ($@10)]
    '+'            [reduce using rule 121 ($@10)]
    '-'            [reduce using rule 121 ($@10)]
    '*'            [reduce using rule 121 ($@10)]
    '/'            [reduce using rule 121 ($@10)]
    '%'            [reduce using rule 121 ($@10)]
    '['            [reduce using rule 121 ($@10)]
    '.'            [reduce using rule 121 ($@10)]
    $default       reduce using rule 121 ($@10)

    $@10  go to state 319


State 249

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  142                  | binary_expression T_NMATCH binary_expression .
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 142 (binary_expression)


State 250

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression
  161                  | binary_expression T_NE binary_expression .

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 161 (binary_expression)


State 251

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  160                  | binary_expression T_EQ binary_expression .
  161                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 160 (binary_expression)


State 252

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  151                  | binary_expression T_SHIFT_LEFT binary_expression .
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 173
    '+'         shift, and go to state 180
    '-'         shift, and go to state 181
    '*'         shift, and go to state 182
    '/'         shift, and go to state 183
    '%'         shift, and go to state 184
    '['         shift, and go to state 185
    '.'         shift, and go to state 186

    $default  reduce using rule 151 (binary_expression)


State 253

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  152                  | binary_expression T_SHIFT_RIGHT binary_expression .
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 173
    '+'         shift, and go to state 180
    '-'         shift, and go to state 181
    '*'         shift, and go to state 182
    '/'         shift, and go to state 183
    '%'         shift, and go to state 184
    '['         shift, and go to state 185
    '.'         shift, and go to state 186

    $default  reduce using rule 152 (binary_expression)


State 254

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  155                  | binary_expression T_OR binary_expression .
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 155 (binary_expression)


State 255

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  154                  | binary_expression T_AND binary_expression .
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 154 (binary_expression)


State 256

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  158                  | binary_expression T_LE binary_expression .
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_POWER_TO     shift, and go to state 173
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 158 (binary_expression)


State 257

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  159                  | binary_expression T_GE binary_expression .
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_POWER_TO     shift, and go to state 173
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 159 (binary_expression)


State 258

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  153                  | binary_expression T_POWER_TO binary_expression .
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 185
    '.'  shift, and go to state 186

    $default  reduce using rule 153 (binary_expression)


State 259

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  143                  | binary_expression '&' binary_expression .
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 143 (binary_expression)


State 260

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  144                  | binary_expression '|' binary_expression .
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 144 (binary_expression)


State 261

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  146                  | binary_expression '^' binary_expression .
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 146 (binary_expression)


State 262

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  141                  | binary_expression '~' binary_expression .
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 141 (binary_expression)


State 263

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  156                  | binary_expression '<' binary_expression .
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_POWER_TO     shift, and go to state 173
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 156 (binary_expression)


State 264

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  157                  | binary_expression '>' binary_expression .
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_POWER_TO     shift, and go to state 173
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 157 (binary_expression)


State 265

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  145                  | binary_expression '+' binary_expression .
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 173
    '*'         shift, and go to state 182
    '/'         shift, and go to state 183
    '%'         shift, and go to state 184
    '['         shift, and go to state 185
    '.'         shift, and go to state 186

    $default  reduce using rule 145 (binary_expression)


State 266

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  147                  | binary_expression '-' binary_expression .
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 173
    '*'         shift, and go to state 182
    '/'         shift, and go to state 183
    '%'         shift, and go to state 184
    '['         shift, and go to state 185
    '.'         shift, and go to state 186

    $default  reduce using rule 147 (binary_expression)


State 267

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  148                  | binary_expression '*' binary_expression .
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 185
    '.'  shift, and go to state 186

    $default  reduce using rule 148 (binary_expression)


State 268

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  149                  | binary_expression '/' binary_expression .
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 185
    '.'  shift, and go to state 186

    $default  reduce using rule 149 (binary_expression)


State 269

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  150                  | binary_expression '%' binary_expression .
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 185
    '.'  shift, and go to state 186

    $default  reduce using rule 150 (binary_expression)


State 270

  140 binary_expression: binary_expression '[' expression . ']'

    ']'  shift, and go to state 320


State 271

  138 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 138 (binary_expression)


State 272

  225 call_expression: function_id_or_pointer '(' @24 . parameter_list closing_paren

    error                    shift, and go to state 236
    T_NEW                    shift, and go to state 108
    T_ELLIPSIS               shift, and go to state 237
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    ','  reduce using rule 120 (range_expression)
    ')'  reduce using rule 64 (parameter_list)
    ')'  [reduce using rule 120 (range_expression)]

    variable_reference      go to state 121
    parameter_list          go to state 321
    non_empty_parameters    go to state 239
    expression              go to state 240
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    parameter               go to state 241
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 273

   34 opt_enum_assignment: T_ASSIGN '-' T_NUM .

    $default  reduce using rule 34 (opt_enum_assignment)


State 274

   54 macrostart: macro_type macro_declaration '(' argument_list ')' . optional_description

    T_STRING  shift, and go to state 322

    $default  reduce using rule 58 (optional_description)

    optional_description  go to state 323


State 275

   63 non_empty_arguments: non_empty_arguments ',' . argument_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_ELLIPSIS         shift, and go to state 198

    argument_declaration  go to state 324
    type_name             go to state 202


State 276

   69 argument_declaration: type_name variable_identifier .

    $default  reduce using rule 69 (argument_declaration)


State 277

  103 statement: error ';' .

    $default  reduce using rule 103 (statement)


State 278

  204 for_clause: error .

    $default  reduce using rule 204 (for_clause)


State 279

  198 for_to_clause: '(' . opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'
  206 in_clause: '(' . type_name variable_identifier $@17 ':' expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 35

    $default  reduce using rule 199 (opt_for_initializer)

    opt_for_initializer  go to state 325
    type_name            go to state 326


State 280

  202 for_clause: for_to_clause .

    $default  reduce using rule 202 (for_clause)


State 281

  192 for_loop_expression: T_FOR for_clause . $@12 local_block

    $default  reduce using rule 191 ($@12)

    $@12  go to state 327


State 282

  203 for_clause: in_clause .

    $default  reduce using rule 203 (for_clause)


State 283

  187 label: T_IDENT ':' .

    $default  reduce using rule 187 (label)


State 284

  164 condition: '(' . binary_expression ')'
  165          | '(' . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 328
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 285

  215 if_expression: T_IF condition . $@20 local_block $@21 else_clause

    $default  reduce using rule 213 ($@20)

    $@20  go to state 329


State 286

  209 while: T_WHILE $@18 . condition $@19 local_block

    '('  shift, and go to state 284

    condition  go to state 330


State 287

  188 goto_expression: T_GOTO T_IDENT .

    $default  reduce using rule 188 (goto_expression)


State 288

  190 switch_expression: T_SWITCH '(' . value ')' $@11 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 331
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_VARIABLE               shift, and go to state 190
    '-'                      shift, and go to state 88

    value              go to state 332
    string             go to state 129
    boolean_literal    go to state 90
    float_literal      go to state 91
    integer_literal    go to state 92
    character_literal  go to state 93
    simple_literal     go to state 135


State 289

  178 opt_num: T_NUM .

    $default  reduce using rule 178 (opt_num)


State 290

  172 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 333


State 291

  173 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 334


State 292

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression
  176 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_OR           shift, and go to state 169
    T_AND          shift, and go to state 170
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186

    $default  reduce using rule 176 (optional_bterm)


State 293

  174 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 174 (return_expression)


State 294

  126 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 126 (minusminus_plusplus)


State 295

  125 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 125 (minusminus_plusplus)


State 296

  110 shorthand_assignment: variable_reference $@9 . shorthand_assignment_operator expression

    T_SH_ASSIGN_PLUS   shift, and go to state 335
    T_SH_ASSIGN_MINUS  shift, and go to state 336
    T_SH_ASSIGN_MULT   shift, and go to state 337
    T_SH_ASSIGN_DIV    shift, and go to state 338
    T_SH_ASSIGN_MOD    shift, and go to state 339

    shorthand_assignment_operator  go to state 340


State 297

  104 assignment: variable_reference assignment_expression .

    $default  reduce using rule 104 (assignment)


State 298

  127 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 127 (increment_expression)


State 299

   87 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 87 (var_decls)


State 300

  102 statement: var_decl .

    $default  reduce using rule 102 (statement)


State 301

  220 stmntlist: statement stmntlist .

    $default  reduce using rule 220 (stmntlist)


State 302

   90 statement: assignment ';' .

    $default  reduce using rule 90 (statement)


State 303

  107 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 341
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 304

  106 assignment: assignment_target '.' . T_IDENT $@8 assignment_expression

    T_IDENT  shift, and go to state 342


State 305

  100 statement: increment_expression ';' .

    $default  reduce using rule 100 (statement)


State 306

   97 statement: return_expression ';' .

    $default  reduce using rule 97 (statement)


State 307

   98 statement: goto_expression ';' .

    $default  reduce using rule 98 (statement)


State 308

  212 closing_brace: '}' .

    $default  reduce using rule 212 (closing_brace)


State 309

   85 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 85 (block)


State 310

   89 statement: call_expression ';' .

    $default  reduce using rule 89 (statement)


State 311

  131 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 131 (constructor_expression)


State 312

  223 call_expression: T_FUNC '(' @23 parameter_list . closing_paren

    ')'  shift, and go to state 343

    closing_paren  go to state 344


State 313

  241 parameter: T_ELLIPSIS expression .

    $default  reduce using rule 241 (parameter)


State 314

  229 array_constructor: '[' @25 parameter_list ']' .

    $default  reduce using rule 229 (array_constructor)


State 315

   67 non_empty_parameters: non_empty_parameters ',' . parameter

    T_NEW                    shift, and go to state 108
    T_ELLIPSIS               shift, and go to state 237
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    $default  reduce using rule 120 (range_expression)

    variable_reference      go to state 121
    expression              go to state 240
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    parameter               go to state 345
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 316

  237 map_associate: T_STRING ':' . @27 value

    $default  reduce using rule 236 (@27)

    @27  go to state 346


State 317

  231 map_constructor: '{' @26 optional_map_associates '}' .

    $default  reduce using rule 231 (map_constructor)


State 318

  235 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 242

    map_associate  go to state 347


State 319

  122 range_expression: binary_expression T_DOTDOT binary_expression $@10 . range_increment

    T_DOTDOT  shift, and go to state 348

    T_DOTDOT  [reduce using rule 123 (range_increment)]
    $default  reduce using rule 123 (range_increment)

    range_increment  go to state 349


State 320

  140 binary_expression: binary_expression '[' expression ']' .

    $default  reduce using rule 140 (binary_expression)


State 321

  225 call_expression: function_id_or_pointer '(' @24 parameter_list . closing_paren

    ')'  shift, and go to state 343

    closing_paren  go to state 350


State 322

   59 optional_description: T_STRING .

    $default  reduce using rule 59 (optional_description)


State 323

   54 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description .

    $default  reduce using rule 54 (macrostart)


State 324

   63 non_empty_arguments: non_empty_arguments ',' argument_declaration .

    $default  reduce using rule 63 (non_empty_arguments)


State 325

  198 for_to_clause: '(' opt_for_initializer . $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'

    $default  reduce using rule 195 ($@13)

    $@13  go to state 351


State 326

  201 opt_for_initializer: type_name . variable_identifier $@16 assignment_expression
  206 in_clause: '(' type_name . variable_identifier $@17 ':' expression ')'

    T_IDENT   shift, and go to state 44
    T_NUM     shift, and go to state 45
    T_STRING  shift, and go to state 46

    variable_identifier  go to state 352


State 327

  192 for_loop_expression: T_FOR for_clause $@12 . local_block

    error              shift, and go to state 203
    T_FOR              shift, and go to state 204
    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_IDENT            shift, and go to state 205
    T_FUNC             shift, and go to state 111
    T_IF               shift, and go to state 206
    T_WHILE            shift, and go to state 207
    T_GOTO             shift, and go to state 208
    T_SWITCH           shift, and go to state 209
    T_BREAK            shift, and go to state 210
    T_CONTINUE         shift, and go to state 211
    T_RETURN           shift, and go to state 212
    T_VARIABLE         shift, and go to state 155
    '*'                shift, and go to state 117
    '['                shift, and go to state 118
    ';'                shift, and go to state 213
    '{'                shift, and go to state 353

    variable_reference      go to state 215
    var_decl                go to state 300
    block                   go to state 217
    statement               go to state 354
    assignment              go to state 219
    shorthand_assignment    go to state 220
    assignment_target       go to state 221
    increment_expression    go to state 222
    break                   go to state 223
    continue                go to state 224
    return_expression       go to state 225
    label                   go to state 226
    goto_expression         go to state 227
    switch_expression       go to state 228
    for_loop_expression     go to state 229
    while                   go to state 230
    local_block             go to state 355
    if_expression           go to state 231
    call_expression         go to state 233
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_name               go to state 37


State 328

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression
  164 condition: '(' binary_expression . ')'
  165          | '(' binary_expression .

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_OR           shift, and go to state 169
    T_AND          shift, and go to state 170
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186
    ')'            shift, and go to state 356

    '*'       [reduce using rule 165 (condition)]
    '['       [reduce using rule 165 (condition)]
    $default  reduce using rule 165 (condition)


State 329

  215 if_expression: T_IF condition $@20 . local_block $@21 else_clause

    error              shift, and go to state 203
    T_FOR              shift, and go to state 204
    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_IDENT            shift, and go to state 205
    T_FUNC             shift, and go to state 111
    T_IF               shift, and go to state 206
    T_WHILE            shift, and go to state 207
    T_GOTO             shift, and go to state 208
    T_SWITCH           shift, and go to state 209
    T_BREAK            shift, and go to state 210
    T_CONTINUE         shift, and go to state 211
    T_RETURN           shift, and go to state 212
    T_VARIABLE         shift, and go to state 155
    '*'                shift, and go to state 117
    '['                shift, and go to state 118
    ';'                shift, and go to state 213
    '{'                shift, and go to state 353

    variable_reference      go to state 215
    var_decl                go to state 300
    block                   go to state 217
    statement               go to state 354
    assignment              go to state 219
    shorthand_assignment    go to state 220
    assignment_target       go to state 221
    increment_expression    go to state 222
    break                   go to state 223
    continue                go to state 224
    return_expression       go to state 225
    label                   go to state 226
    goto_expression         go to state 227
    switch_expression       go to state 228
    for_loop_expression     go to state 229
    while                   go to state 230
    local_block             go to state 357
    if_expression           go to state 231
    call_expression         go to state 233
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_name               go to state 37


State 330

  209 while: T_WHILE $@18 condition . $@19 local_block

    $default  reduce using rule 208 ($@19)

    $@19  go to state 358


State 331

  169 value: T_IDENT .

    $default  reduce using rule 169 (value)


State 332

  190 switch_expression: T_SWITCH '(' value . ')' $@11 '{' case_clauses '}'

    ')'  shift, and go to state 359


State 333

  172 break: T_BREAK opt_num ';' .

    $default  reduce using rule 172 (break)


State 334

  173 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 173 (continue)


State 335

  115 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 115 (shorthand_assignment_operator)


State 336

  116 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 116 (shorthand_assignment_operator)


State 337

  112 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 112 (shorthand_assignment_operator)


State 338

  113 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 113 (shorthand_assignment_operator)


State 339

  114 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 114 (shorthand_assignment_operator)


State 340

  110 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator . expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    $default  reduce using rule 120 (range_expression)

    variable_reference      go to state 121
    expression              go to state 360
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 341

  107 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_OR           shift, and go to state 169
    T_AND          shift, and go to state 170
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186
    ']'            shift, and go to state 361


State 342

  106 assignment: assignment_target '.' T_IDENT . $@8 assignment_expression

    $default  reduce using rule 105 ($@8)

    $@8  go to state 362


State 343

  221 closing_paren: ')' .

    $default  reduce using rule 221 (closing_paren)


State 344

  223 call_expression: T_FUNC '(' @23 parameter_list closing_paren .

    $default  reduce using rule 223 (call_expression)


State 345

   67 non_empty_parameters: non_empty_parameters ',' parameter .

    $default  reduce using rule 67 (non_empty_parameters)


State 346

  237 map_associate: T_STRING ':' @27 . value

    T_IDENT                  shift, and go to state 331
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_VARIABLE               shift, and go to state 190
    '-'                      shift, and go to state 88

    value              go to state 363
    string             go to state 129
    boolean_literal    go to state 90
    float_literal      go to state 91
    integer_literal    go to state 92
    character_literal  go to state 93
    simple_literal     go to state 135


State 347

  235 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 235 (map_associates)


State 348

  124 range_increment: T_DOTDOT . binary_expression

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 364
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 349

  122 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment .

    $default  reduce using rule 122 (range_expression)


State 350

  225 call_expression: function_id_or_pointer '(' @24 parameter_list closing_paren .

    $default  reduce using rule 225 (call_expression)


State 351

  198 for_to_clause: '(' opt_for_initializer $@13 . ';' binary_expression ';' $@14 for_increment $@15 ')'

    ';'  shift, and go to state 365


State 352

  201 opt_for_initializer: type_name variable_identifier . $@16 assignment_expression
  206 in_clause: '(' type_name variable_identifier . $@17 ':' expression ')'

    ':'       reduce using rule 205 ($@17)
    $default  reduce using rule 200 ($@16)

    $@16  go to state 366
    $@17  go to state 367


State 353

   85 block: '{' . var_decls stmntlist closing_brace
  211 local_block: '{' . stmntlist closing_brace
  231 map_constructor: '{' . @26 optional_map_associates '}'

    error              shift, and go to state 203
    T_FOR              shift, and go to state 204
    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_IDENT            shift, and go to state 205
    T_FUNC             shift, and go to state 111
    T_IF               shift, and go to state 206
    T_WHILE            shift, and go to state 207
    T_GOTO             shift, and go to state 208
    T_SWITCH           shift, and go to state 209
    T_BREAK            shift, and go to state 210
    T_CONTINUE         shift, and go to state 211
    T_RETURN           shift, and go to state 212
    T_VARIABLE         shift, and go to state 155
    '*'                shift, and go to state 117
    '['                shift, and go to state 118
    ';'                shift, and go to state 213
    '{'                shift, and go to state 214

    error              [reduce using rule 86 (var_decls)]
    T_FOR              [reduce using rule 86 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 86 (var_decls)]
    T_IDENT            [reduce using rule 86 (var_decls)]
    T_STRING           reduce using rule 230 (@26)
    T_FUNC             [reduce using rule 86 (var_decls)]
    T_IF               [reduce using rule 86 (var_decls)]
    T_WHILE            [reduce using rule 86 (var_decls)]
    T_GOTO             [reduce using rule 86 (var_decls)]
    T_SWITCH           [reduce using rule 86 (var_decls)]
    T_BREAK            [reduce using rule 86 (var_decls)]
    T_CONTINUE         [reduce using rule 86 (var_decls)]
    T_RETURN           [reduce using rule 86 (var_decls)]
    T_VARIABLE         [reduce using rule 86 (var_decls)]
    '*'                [reduce using rule 86 (var_decls)]
    '['                [reduce using rule 86 (var_decls)]
    ';'                [reduce using rule 86 (var_decls)]
    '{'                [reduce using rule 86 (var_decls)]
    '}'                reduce using rule 86 (var_decls)
    '}'                [reduce using rule 219 (stmntlist)]
    '}'                [reduce using rule 230 (@26)]

    variable_reference      go to state 215
    var_decl                go to state 300
    block                   go to state 217
    var_decls               go to state 148
    statement               go to state 218
    assignment              go to state 219
    shorthand_assignment    go to state 220
    assignment_target       go to state 221
    increment_expression    go to state 222
    break                   go to state 223
    continue                go to state 224
    return_expression       go to state 225
    label                   go to state 226
    goto_expression         go to state 227
    switch_expression       go to state 228
    for_loop_expression     go to state 229
    while                   go to state 230
    if_expression           go to state 231
    stmntlist               go to state 368
    call_expression         go to state 233
    array_constructor       go to state 131
    map_constructor         go to state 132
    @26                     go to state 159
    function_id_or_pointer  go to state 133
    type_name               go to state 37


State 354

  210 local_block: statement .

    $default  reduce using rule 210 (local_block)


State 355

  192 for_loop_expression: T_FOR for_clause $@12 local_block .

    $default  reduce using rule 192 (for_loop_expression)


State 356

  164 condition: '(' binary_expression ')' .

    $default  reduce using rule 164 (condition)


State 357

  215 if_expression: T_IF condition $@20 local_block . $@21 else_clause

    $default  reduce using rule 214 ($@21)

    $@21  go to state 369


State 358

  209 while: T_WHILE $@18 condition $@19 . local_block

    error              shift, and go to state 203
    T_FOR              shift, and go to state 204
    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_IDENT            shift, and go to state 205
    T_FUNC             shift, and go to state 111
    T_IF               shift, and go to state 206
    T_WHILE            shift, and go to state 207
    T_GOTO             shift, and go to state 208
    T_SWITCH           shift, and go to state 209
    T_BREAK            shift, and go to state 210
    T_CONTINUE         shift, and go to state 211
    T_RETURN           shift, and go to state 212
    T_VARIABLE         shift, and go to state 155
    '*'                shift, and go to state 117
    '['                shift, and go to state 118
    ';'                shift, and go to state 213
    '{'                shift, and go to state 353

    variable_reference      go to state 215
    var_decl                go to state 300
    block                   go to state 217
    statement               go to state 354
    assignment              go to state 219
    shorthand_assignment    go to state 220
    assignment_target       go to state 221
    increment_expression    go to state 222
    break                   go to state 223
    continue                go to state 224
    return_expression       go to state 225
    label                   go to state 226
    goto_expression         go to state 227
    switch_expression       go to state 228
    for_loop_expression     go to state 229
    while                   go to state 230
    local_block             go to state 370
    if_expression           go to state 231
    call_expression         go to state 233
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_name               go to state 37


State 359

  190 switch_expression: T_SWITCH '(' value ')' . $@11 '{' case_clauses '}'

    $default  reduce using rule 189 ($@11)

    $@11  go to state 371


State 360

  110 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator expression .

    $default  reduce using rule 110 (shorthand_assignment)


State 361

  107 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 73

    assignment_expression  go to state 372


State 362

  106 assignment: assignment_target '.' T_IDENT $@8 . assignment_expression

    T_ASSIGN  shift, and go to state 73

    assignment_expression  go to state 373


State 363

  237 map_associate: T_STRING ':' @27 value .

    $default  reduce using rule 237 (map_associate)


State 364

  124 range_increment: T_DOTDOT binary_expression .
  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 124 (range_increment)


State 365

  198 for_to_clause: '(' opt_for_initializer $@13 ';' . binary_expression ';' $@14 for_increment $@15 ')'

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    variable_reference      go to state 121
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 374
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 366

  201 opt_for_initializer: type_name variable_identifier $@16 . assignment_expression

    T_ASSIGN  shift, and go to state 73

    assignment_expression  go to state 375


State 367

  206 in_clause: '(' type_name variable_identifier $@17 . ':' expression ')'

    ':'  shift, and go to state 376


State 368

  211 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 308

    closing_brace  go to state 377


State 369

  215 if_expression: T_IF condition $@20 local_block $@21 . else_clause

    T_ELSE  shift, and go to state 378

    T_ELSE    [reduce using rule 216 (else_clause)]
    $default  reduce using rule 216 (else_clause)

    else_clause  go to state 379


State 370

  209 while: T_WHILE $@18 condition $@19 local_block .

    $default  reduce using rule 209 (while)


State 371

  190 switch_expression: T_SWITCH '(' value ')' $@11 . '{' case_clauses '}'

    '{'  shift, and go to state 380


State 372

  107 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 107 (assignment)


State 373

  106 assignment: assignment_target '.' T_IDENT $@8 assignment_expression .

    $default  reduce using rule 106 (assignment)


State 374

  138 binary_expression: binary_expression . '.' T_IDENT
  140                  | binary_expression . '[' expression ']'
  141                  | binary_expression . '~' binary_expression
  142                  | binary_expression . T_NMATCH binary_expression
  143                  | binary_expression . '&' binary_expression
  144                  | binary_expression . '|' binary_expression
  145                  | binary_expression . '+' binary_expression
  146                  | binary_expression . '^' binary_expression
  147                  | binary_expression . '-' binary_expression
  148                  | binary_expression . '*' binary_expression
  149                  | binary_expression . '/' binary_expression
  150                  | binary_expression . '%' binary_expression
  151                  | binary_expression . T_SHIFT_LEFT binary_expression
  152                  | binary_expression . T_SHIFT_RIGHT binary_expression
  153                  | binary_expression . T_POWER_TO binary_expression
  154                  | binary_expression . T_AND binary_expression
  155                  | binary_expression . T_OR binary_expression
  156                  | binary_expression . '<' binary_expression
  157                  | binary_expression . '>' binary_expression
  158                  | binary_expression . T_LE binary_expression
  159                  | binary_expression . T_GE binary_expression
  160                  | binary_expression . T_EQ binary_expression
  161                  | binary_expression . T_NE binary_expression
  198 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression . ';' $@14 for_increment $@15 ')'

    T_NMATCH       shift, and go to state 164
    T_NE           shift, and go to state 165
    T_EQ           shift, and go to state 166
    T_SHIFT_LEFT   shift, and go to state 167
    T_SHIFT_RIGHT  shift, and go to state 168
    T_OR           shift, and go to state 169
    T_AND          shift, and go to state 170
    T_LE           shift, and go to state 171
    T_GE           shift, and go to state 172
    T_POWER_TO     shift, and go to state 173
    '&'            shift, and go to state 174
    '|'            shift, and go to state 175
    '^'            shift, and go to state 176
    '~'            shift, and go to state 177
    '<'            shift, and go to state 178
    '>'            shift, and go to state 179
    '+'            shift, and go to state 180
    '-'            shift, and go to state 181
    '*'            shift, and go to state 182
    '/'            shift, and go to state 183
    '%'            shift, and go to state 184
    '['            shift, and go to state 185
    '.'            shift, and go to state 186
    ';'            shift, and go to state 381


State 375

  201 opt_for_initializer: type_name variable_identifier $@16 assignment_expression .

    $default  reduce using rule 201 (opt_for_initializer)


State 376

  206 in_clause: '(' type_name variable_identifier $@17 ':' . expression ')'

    T_NEW                    shift, and go to state 108
    T_IDENT                  shift, and go to state 109
    T_NUM                    shift, and go to state 82
    T_FLOATING_POINT_NUMBER  shift, and go to state 83
    T_STRING                 shift, and go to state 110
    T_CHARACTER              shift, and go to state 85
    T_TRUE                   shift, and go to state 86
    T_FALSE                  shift, and go to state 87
    T_FUNC                   shift, and go to state 111
    T_VARIABLE               shift, and go to state 112
    '!'                      shift, and go to state 113
    '~'                      shift, and go to state 114
    '+'                      shift, and go to state 115
    '-'                      shift, and go to state 116
    '*'                      shift, and go to state 117
    '['                      shift, and go to state 118
    '{'                      shift, and go to state 119
    '('                      shift, and go to state 120

    $default  reduce using rule 120 (range_expression)

    variable_reference      go to state 121
    expression              go to state 382
    range_expression        go to state 123
    simple_term             go to state 124
    constructor_expression  go to state 125
    unary_expression        go to state 126
    binary_expression       go to state 127
    value                   go to state 128
    string                  go to state 129
    call_expression         go to state 130
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_cast               go to state 134
    boolean_literal         go to state 90
    float_literal           go to state 91
    integer_literal         go to state 92
    character_literal       go to state 93
    simple_literal          go to state 135


State 377

  211 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 211 (local_block)


State 378

  218 else_clause: T_ELSE . $@22 local_block

    $default  reduce using rule 217 ($@22)

    $@22  go to state 383


State 379

  215 if_expression: T_IF condition $@20 local_block $@21 else_clause .

    $default  reduce using rule 215 (if_expression)


State 380

  190 switch_expression: T_SWITCH '(' value ')' $@11 '{' . case_clauses '}'

    T_CASE     shift, and go to state 384
    T_DEFAULT  shift, and go to state 385

    $default  reduce using rule 179 (case_clauses)

    case_clauses   go to state 386
    case_clause    go to state 387
    case_selector  go to state 388


State 381

  198 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' . $@14 for_increment $@15 ')'

    $default  reduce using rule 196 ($@14)

    $@14  go to state 389


State 382

  206 in_clause: '(' type_name variable_identifier $@17 ':' expression . ')'

    ')'  shift, and go to state 390


State 383

  218 else_clause: T_ELSE $@22 . local_block

    error              shift, and go to state 203
    T_FOR              shift, and go to state 204
    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_IDENT            shift, and go to state 205
    T_FUNC             shift, and go to state 111
    T_IF               shift, and go to state 206
    T_WHILE            shift, and go to state 207
    T_GOTO             shift, and go to state 208
    T_SWITCH           shift, and go to state 209
    T_BREAK            shift, and go to state 210
    T_CONTINUE         shift, and go to state 211
    T_RETURN           shift, and go to state 212
    T_VARIABLE         shift, and go to state 155
    '*'                shift, and go to state 117
    '['                shift, and go to state 118
    ';'                shift, and go to state 213
    '{'                shift, and go to state 353

    variable_reference      go to state 215
    var_decl                go to state 300
    block                   go to state 217
    statement               go to state 354
    assignment              go to state 219
    shorthand_assignment    go to state 220
    assignment_target       go to state 221
    increment_expression    go to state 222
    break                   go to state 223
    continue                go to state 224
    return_expression       go to state 225
    label                   go to state 226
    goto_expression         go to state 227
    switch_expression       go to state 228
    for_loop_expression     go to state 229
    while                   go to state 230
    local_block             go to state 391
    if_expression           go to state 231
    call_expression         go to state 233
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_name               go to state 37


State 384

  182 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 392
    T_STRING  shift, and go to state 393
    '-'       shift, and go to state 88

    case_condition   go to state 394
    integer_literal  go to state 395


State 385

  183 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 396


State 386

  190 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses . '}'

    '}'  shift, and go to state 397


State 387

  180 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 384
    T_DEFAULT  shift, and go to state 385

    $default  reduce using rule 179 (case_clauses)

    case_clauses   go to state 398
    case_clause    go to state 387
    case_selector  go to state 388


State 388

  181 case_clause: case_selector . stmntlist

    error              shift, and go to state 203
    T_FOR              shift, and go to state 204
    T_TYPE_IDENTIFIER  shift, and go to state 35
    T_IDENT            shift, and go to state 205
    T_FUNC             shift, and go to state 111
    T_IF               shift, and go to state 206
    T_WHILE            shift, and go to state 207
    T_GOTO             shift, and go to state 208
    T_SWITCH           shift, and go to state 209
    T_BREAK            shift, and go to state 210
    T_CONTINUE         shift, and go to state 211
    T_RETURN           shift, and go to state 212
    T_VARIABLE         shift, and go to state 155
    '*'                shift, and go to state 117
    '['                shift, and go to state 118
    ';'                shift, and go to state 213
    '{'                shift, and go to state 214

    T_CASE     reduce using rule 219 (stmntlist)
    T_DEFAULT  reduce using rule 219 (stmntlist)
    '}'        reduce using rule 219 (stmntlist)

    variable_reference      go to state 215
    var_decl                go to state 300
    block                   go to state 217
    statement               go to state 218
    assignment              go to state 219
    shorthand_assignment    go to state 220
    assignment_target       go to state 221
    increment_expression    go to state 222
    break                   go to state 223
    continue                go to state 224
    return_expression       go to state 225
    label                   go to state 226
    goto_expression         go to state 227
    switch_expression       go to state 228
    for_loop_expression     go to state 229
    while                   go to state 230
    if_expression           go to state 231
    stmntlist               go to state 399
    call_expression         go to state 233
    array_constructor       go to state 131
    map_constructor         go to state 132
    function_id_or_pointer  go to state 133
    type_name               go to state 37


State 389

  198 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 . for_increment $@15 ')'

    T_IDENT     shift, and go to state 154
    T_VARIABLE  shift, and go to state 155

    variable_reference    go to state 400
    shorthand_assignment  go to state 401
    increment_expression  go to state 402
    for_increment         go to state 403


State 390

  206 in_clause: '(' type_name variable_identifier $@17 ':' expression ')' .

    $default  reduce using rule 206 (in_clause)


State 391

  218 else_clause: T_ELSE $@22 local_block .

    $default  reduce using rule 218 (else_clause)


State 392

  186 case_condition: T_NUM . T_DOTDOT T_NUM
  250 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 404

    $default  reduce using rule 250 (integer_literal)


State 393

  185 case_condition: T_STRING .

    $default  reduce using rule 185 (case_condition)


State 394

  182 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 405


State 395

  184 case_condition: integer_literal .

    $default  reduce using rule 184 (case_condition)


State 396

  183 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 183 (case_selector)


State 397

  190 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses '}' .

    $default  reduce using rule 190 (switch_expression)


State 398

  180 case_clauses: case_clause case_clauses .

    $default  reduce using rule 180 (case_clauses)


State 399

  181 case_clause: case_selector stmntlist .

    $default  reduce using rule 181 (case_clause)


State 400

  110 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator expression
  127 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 294
    T_MINUSMINUS  shift, and go to state 295

    $default  reduce using rule 109 ($@9)

    $@9                  go to state 296
    minusminus_plusplus  go to state 298


State 401

  194 for_increment: shorthand_assignment .

    $default  reduce using rule 194 (for_increment)


State 402

  193 for_increment: increment_expression .

    $default  reduce using rule 193 (for_increment)


State 403

  198 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment . $@15 ')'

    $default  reduce using rule 197 ($@15)

    $@15  go to state 406


State 404

  186 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 407


State 405

  182 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 182 (case_selector)


State 406

  198 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 . ')'

    ')'  shift, and go to state 408


State 407

  186 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 186 (case_condition)


State 408

  198 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')' .

    $default  reduce using rule 198 (for_to_clause)
