State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 58 conflicts: 9 shift/reduce
State 102 conflicts: 24 shift/reduce
State 127 conflicts: 1 reduce/reduce
State 180 conflicts: 1 reduce/reduce
State 182 conflicts: 1 shift/reduce
State 201 conflicts: 1 reduce/reduce
State 214 conflicts: 23 shift/reduce
State 238 conflicts: 1 reduce/reduce
State 286 conflicts: 1 shift/reduce
State 295 conflicts: 2 shift/reduce
State 320 conflicts: 17 shift/reduce, 2 reduce/reduce
State 336 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | macro_definition macro_definitions

    8 namespace: %empty
    9          | T_NAMESPACE T_IDENT ';'

   10 prerequisites: %empty
   11              | prerequisites require

   12 require: T_REQUIRE T_STRING ';'

   13 global_declarations: %empty
   14                    | global_declarations constants ';'
   15                    | global_declarations global_var ';'
   16                    | global_declarations native_macro_definition ';'

   17 scope: %empty
   18      | T_STATIC

   19 constants: T_CONST constant_list

   20 constant_list: constdef
   21              | constant_list ',' constdef

   22 $@3: %empty

   23 $@4: %empty

   24 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   25 constant_literal: simple_literal
   26                 | T_STRING

   27 variable_identifier: T_IDENT
   28                    | T_NUM
   29                    | T_STRING

   30 variable_reference: T_VARIABLE
   31                   | T_IDENT

   32 macro_declaration: T_IDENT
   33                  | T_FUNC

   34 macro_type: scope T_VOID
   35           | scope type_name

   36 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description

   37 global_var: scope var_decl

   38 var_decl: type_name variable_identifier assignment_expression
   39         | type_name variable_identifier

   40 optional_description: %empty
   41                     | T_STRING

   42 argument_list: %empty
   43              | non_empty_arguments

   44 non_empty_arguments: argument_declaration
   45                    | non_empty_arguments ',' argument_declaration

   46 parameter_list: %empty
   47               | non_empty_parameters

   48 non_empty_parameters: parameter
   49                     | non_empty_parameters ',' parameter
   50                     | error

   51 argument_declaration: type_name variable_identifier
   52                     | T_ELLIPSIS

   53 annotations: %empty
   54            | annotation annotations

   55 $@5: %empty

   56 annotation: T_ANNOTATION $@5 '(' annotation_values ')'

   57 annotation_value: T_IDENT T_ASSIGN T_STRING

   58 annotation_values: %empty
   59                  | annotation_value
   60                  | annotation_value ',' annotation_values

   61 $@6: %empty

   62 native_macro_definition: $@6 annotations T_NATIVE macrostart

   63 $@7: %empty

   64 macro_definition: $@7 macrostart block

   65 block: '{' var_decls stmntlist closing_brace

   66 var_decls: %empty
   67          | var_decls var_decl ';'

   68 statement: ';'
   69          | call_expression ';'
   70          | assignment ';'
   71          | if_expression
   72          | while
   73          | for_loop_expression
   74          | switch_expression
   75          | break
   76          | continue
   77          | return_expression ';'
   78          | goto_expression ';'
   79          | block
   80          | increment_expression ';'
   81          | label
   82          | var_decl
   83          | error ';'

   84 assignment: variable_reference assignment_expression

   85 $@8: %empty

   86 assignment: assignment_target '.' T_IDENT $@8 assignment_expression
   87           | assignment_target '[' binary_expression ']' assignment_expression
   88           | shorthand_assignment

   89 $@9: %empty

   90 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator expression

   91 assignment_target: variable_reference

   92 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   93                              | T_SH_ASSIGN_DIV
   94                              | T_SH_ASSIGN_MOD
   95                              | T_SH_ASSIGN_PLUS
   96                              | T_SH_ASSIGN_MINUS

   97 assignment_expression: T_ASSIGN expression

   98 expression: binary_expression
   99           | range_expression

  100 range_expression: %empty

  101 $@10: %empty

  102 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment

  103 range_increment: %empty
  104                | T_DOTDOT binary_expression

  105 minusminus_plusplus: T_MINUSMINUS
  106                    | T_PLUSPLUS

  107 increment_expression: variable_reference minusminus_plusplus

  108 simple_term: value
  109            | call_expression
  110            | constructor_expression

  111 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  112 unary_expression: '!' binary_expression
  113                 | '~' binary_expression
  114                 | '+' binary_expression
  115                 | '-' variable_reference

  116 binary_expression: simple_term
  117                  | type_cast simple_term
  118                  | binary_expression '.' T_IDENT
  119                  | unary_expression
  120                  | binary_expression '[' expression ']'
  121                  | binary_expression '~' binary_expression
  122                  | binary_expression T_NMATCH binary_expression
  123                  | binary_expression '&' binary_expression
  124                  | binary_expression '|' binary_expression
  125                  | binary_expression '+' binary_expression
  126                  | binary_expression '^' binary_expression
  127                  | binary_expression '-' binary_expression
  128                  | binary_expression '*' binary_expression
  129                  | binary_expression '/' binary_expression
  130                  | binary_expression '%' binary_expression
  131                  | binary_expression T_SHIFT_LEFT binary_expression
  132                  | binary_expression T_SHIFT_RIGHT binary_expression
  133                  | binary_expression T_POWER_TO binary_expression
  134                  | binary_expression T_AND binary_expression
  135                  | binary_expression T_OR binary_expression
  136                  | binary_expression '<' binary_expression
  137                  | binary_expression '>' binary_expression
  138                  | binary_expression T_LE binary_expression
  139                  | binary_expression T_GE binary_expression
  140                  | binary_expression T_EQ binary_expression
  141                  | binary_expression T_NE binary_expression
  142                  | '(' binary_expression ')'
  143                  | variable_reference assignment_expression

  144 condition: '(' binary_expression ')'
  145          | '(' binary_expression

  146 value: T_VARIABLE
  147      | string
  148      | simple_literal
  149      | T_IDENT

  150 string: T_STRING
  151       | string T_STRING

  152 break: T_BREAK opt_num ';'

  153 continue: T_CONTINUE opt_num ';'

  154 return_expression: T_RETURN optional_bterm

  155 optional_bterm: %empty
  156               | binary_expression

  157 opt_num: %empty
  158        | T_NUM

  159 case_clauses: %empty
  160             | case_clause case_clauses

  161 case_clause: case_selector stmntlist

  162 case_selector: T_CASE case_condition ':'
  163              | T_DEFAULT ':'

  164 case_condition: integer_literal
  165               | T_STRING
  166               | T_NUM T_DOTDOT T_NUM

  167 label: T_IDENT ':'

  168 goto_expression: T_GOTO T_IDENT

  169 $@11: %empty

  170 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses '}'

  171 $@12: %empty

  172 for_loop_expression: T_FOR for_clause $@12 local_block

  173 for_increment: increment_expression
  174              | shorthand_assignment

  175 $@13: %empty

  176 $@14: %empty

  177 $@15: %empty

  178 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'

  179 opt_for_initializer: %empty

  180 $@16: %empty

  181 opt_for_initializer: type_name variable_identifier $@16 assignment_expression

  182 for_clause: for_to_clause
  183           | in_clause
  184           | error

  185 $@17: %empty

  186 in_clause: '(' type_name variable_identifier $@17 ':' expression ')'

  187 $@18: %empty

  188 $@19: %empty

  189 while: T_WHILE $@18 condition $@19 local_block

  190 local_block: statement
  191            | '{' stmntlist closing_brace

  192 closing_brace: '}'

  193 $@20: %empty

  194 $@21: %empty

  195 if_expression: T_IF condition $@20 local_block $@21 else_clause

  196 else_clause: %empty

  197 $@22: %empty

  198 else_clause: T_ELSE $@22 local_block

  199 stmntlist: %empty
  200          | statement stmntlist

  201 closing_paren: ')'

  202 @23: %empty

  203 call_expression: T_FUNC '(' @23 parameter_list closing_paren

  204 @24: %empty

  205 call_expression: function_id_or_pointer '(' @24 parameter_list closing_paren
  206                | array_constructor
  207                | map_constructor

  208 @25: %empty

  209 array_constructor: '[' @25 parameter_list ']'

  210 @26: %empty

  211 map_constructor: '{' @26 optional_map_associates '}'

  212 optional_map_associates: %empty
  213                        | map_associates

  214 map_associates: map_associate
  215               | map_associates ',' map_associate

  216 @27: %empty

  217 map_associate: T_STRING ':' @27 value

  218 function_id_or_pointer: '*' variable_reference
  219                       | T_IDENT

  220 parameter: expression
  221          | T_ELLIPSIS expression

  222 type_cast: '(' type_name ')'

  223 type_name: T_TYPE_IDENTIFIER
  224          | T_TYPE_IDENTIFIER array_size

  225 array_size: '[' ']'
  226           | '[' T_NUM ']'

  227 boolean_literal: T_TRUE
  228                | T_FALSE

  229 float_literal: T_FLOATING_POINT_NUMBER

  230 integer_literal: T_NUM
  231                | '-' T_NUM

  232 character_literal: T_CHARACTER

  233 simple_literal: integer_literal
  234               | float_literal
  235               | character_literal
  236               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 112
    '%' (37) 130
    '&' (38) 123
    '(' (40) 36 56 111 142 144 145 170 178 186 203 205 222
    ')' (41) 36 56 111 142 144 170 178 186 201 222
    '*' (42) 128 218
    '+' (43) 114 125
    ',' (44) 21 45 49 60 215
    '-' (45) 115 127 231
    '.' (46) 86 118
    '/' (47) 129
    ':' (58) 162 163 167 186 217
    ';' (59) 9 12 14 15 16 67 68 69 70 77 78 80 83 152 153 178
    '<' (60) 136
    '>' (62) 137
    '[' (91) 87 120 209 225 226
    ']' (93) 87 120 209 225 226
    '^' (94) 126
    '{' (123) 65 170 191 211
    '|' (124) 124
    '}' (125) 170 192 211
    '~' (126) 113 121
    error (256) 50 83 184
    T_NAMESPACE (258) 9
    T_REQUIRE (259) 12
    T_FOR (260) 172
    T_ANNOTATION (261) 56
    T_NATIVE (262) 62
    T_NEW (263) 111
    T_STATIC (264) 18
    T_VOID (265) 34
    T_TYPE_IDENTIFIER (266) 111 223 224
    T_ELLIPSIS (267) 52 221
    T_IDENT (268) 9 27 31 32 57 86 118 149 167 168 219
    T_NUM (269) 28 158 166 226 230 231
    T_FLOATING_POINT_NUMBER (270) 229
    T_STRING (271) 12 26 29 41 57 150 151 165 217
    T_CHARACTER (272) 232
    T_CONST (273) 19
    T_TRUE (274) 227
    T_FALSE (275) 228
    T_FUNC (276) 33 203
    T_DOTDOT (277) 102 104 166
    T_PLUSPLUS (278) 106
    T_MINUSMINUS (279) 105
    T_IF (280) 195
    T_ELSE (281) 198
    T_WHILE (282) 189
    T_GOTO (283) 168
    T_SH_ASSIGN_PLUS (284) 95
    T_SH_ASSIGN_MINUS (285) 96
    T_SH_ASSIGN_MULT (286) 92
    T_SH_ASSIGN_DIV (287) 93
    T_SH_ASSIGN_MOD (288) 94
    T_SWITCH (289) 170
    T_CASE (290) 162
    T_DEFAULT (291) 163
    T_BREAK (292) 152
    T_CONTINUE (293) 153
    T_RETURN (294) 154
    T_VARIABLE (295) 30 146
    T_NMATCH (296) 122
    T_ASSIGN (297) 24 57 97
    T_NE (298) 141
    T_EQ (299) 140
    T_SHIFT_LEFT (300) 131
    T_SHIFT_RIGHT (301) 132
    T_OR (302) 135
    T_AND (303) 134
    T_LE (304) 138
    T_GE (305) 139
    T_POWER_TO (306) 133


Nonterminals, with rules where they appear

    $accept (74)
        on left: 0
    file_structure (75)
        on left: 3
        on right: 0
    $@1 (76)
        on left: 1
        on right: 3
    $@2 (77)
        on left: 2
        on right: 3
    header_delimiter (78)
        on left: 4 5
        on right: 3
    macro_definitions (79)
        on left: 6 7
        on right: 3 7
    namespace (80)
        on left: 8 9
        on right: 3
    prerequisites (81)
        on left: 10 11
        on right: 3 11
    require (82)
        on left: 12
        on right: 11
    global_declarations (83)
        on left: 13 14 15 16
        on right: 3 14 15 16
    scope (84)
        on left: 17 18
        on right: 34 35 37
    constants (85)
        on left: 19
        on right: 14
    constant_list (86)
        on left: 20 21
        on right: 19 21
    constdef (87)
        on left: 24
        on right: 20 21
    $@3 (88)
        on left: 22
        on right: 24
    $@4 (89)
        on left: 23
        on right: 24
    constant_literal (90)
        on left: 25 26
        on right: 24
    variable_identifier (91)
        on left: 27 28 29
        on right: 24 38 39 51 181 186
    variable_reference (92)
        on left: 30 31
        on right: 84 90 91 107 115 143 218
    macro_declaration (93)
        on left: 32 33
        on right: 36
    macro_type (94)
        on left: 34 35
        on right: 36
    macrostart (95)
        on left: 36
        on right: 62 64
    global_var (96)
        on left: 37
        on right: 15
    var_decl (97)
        on left: 38 39
        on right: 37 67 82
    optional_description (98)
        on left: 40 41
        on right: 36
    argument_list (99)
        on left: 42 43
        on right: 36
    non_empty_arguments (100)
        on left: 44 45
        on right: 43 45
    parameter_list (101)
        on left: 46 47
        on right: 203 205 209
    non_empty_parameters (102)
        on left: 48 49 50
        on right: 47 49
    argument_declaration (103)
        on left: 51 52
        on right: 44 45
    annotations (104)
        on left: 53 54
        on right: 54 62
    annotation (105)
        on left: 56
        on right: 54
    $@5 (106)
        on left: 55
        on right: 56
    annotation_value (107)
        on left: 57
        on right: 59 60
    annotation_values (108)
        on left: 58 59 60
        on right: 56 60
    native_macro_definition (109)
        on left: 62
        on right: 16
    $@6 (110)
        on left: 61
        on right: 62
    macro_definition (111)
        on left: 64
        on right: 7
    $@7 (112)
        on left: 63
        on right: 64
    block (113)
        on left: 65
        on right: 64 79
    var_decls (114)
        on left: 66 67
        on right: 65 67
    statement (115)
        on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
        on right: 190 200
    assignment (116)
        on left: 84 86 87 88
        on right: 70
    $@8 (117)
        on left: 85
        on right: 86
    shorthand_assignment (118)
        on left: 90
        on right: 88 174
    $@9 (119)
        on left: 89
        on right: 90
    assignment_target (120)
        on left: 91
        on right: 86 87
    shorthand_assignment_operator (121)
        on left: 92 93 94 95 96
        on right: 90
    assignment_expression (122)
        on left: 97
        on right: 38 84 86 87 143 181
    expression (123)
        on left: 98 99
        on right: 90 97 120 186 220 221
    range_expression (124)
        on left: 100 102
        on right: 99
    $@10 (125)
        on left: 101
        on right: 102
    range_increment (126)
        on left: 103 104
        on right: 102
    minusminus_plusplus (127)
        on left: 105 106
        on right: 107
    increment_expression (128)
        on left: 107
        on right: 80 173
    simple_term (129)
        on left: 108 109 110
        on right: 116 117
    constructor_expression (130)
        on left: 111
        on right: 110
    unary_expression (131)
        on left: 112 113 114 115
        on right: 119
    binary_expression (132)
        on left: 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
        on right: 87 98 102 104 112 113 114 118 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 144 145 156 178
    condition (133)
        on left: 144 145
        on right: 189 195
    value (134)
        on left: 146 147 148 149
        on right: 108 170 217
    string (135)
        on left: 150 151
        on right: 147 151
    break (136)
        on left: 152
        on right: 75
    continue (137)
        on left: 153
        on right: 76
    return_expression (138)
        on left: 154
        on right: 77
    optional_bterm (139)
        on left: 155 156
        on right: 154
    opt_num (140)
        on left: 157 158
        on right: 152 153
    case_clauses (141)
        on left: 159 160
        on right: 160 170
    case_clause (142)
        on left: 161
        on right: 160
    case_selector (143)
        on left: 162 163
        on right: 161
    case_condition (144)
        on left: 164 165 166
        on right: 162
    label (145)
        on left: 167
        on right: 81
    goto_expression (146)
        on left: 168
        on right: 78
    switch_expression (147)
        on left: 170
        on right: 74
    $@11 (148)
        on left: 169
        on right: 170
    for_loop_expression (149)
        on left: 172
        on right: 73
    $@12 (150)
        on left: 171
        on right: 172
    for_increment (151)
        on left: 173 174
        on right: 178
    for_to_clause (152)
        on left: 178
        on right: 182
    $@13 (153)
        on left: 175
        on right: 178
    $@14 (154)
        on left: 176
        on right: 178
    $@15 (155)
        on left: 177
        on right: 178
    opt_for_initializer (156)
        on left: 179 181
        on right: 178
    $@16 (157)
        on left: 180
        on right: 181
    for_clause (158)
        on left: 182 183 184
        on right: 172
    in_clause (159)
        on left: 186
        on right: 183
    $@17 (160)
        on left: 185
        on right: 186
    while (161)
        on left: 189
        on right: 72
    $@18 (162)
        on left: 187
        on right: 189
    $@19 (163)
        on left: 188
        on right: 189
    local_block (164)
        on left: 190 191
        on right: 172 189 195 198
    closing_brace (165)
        on left: 192
        on right: 65 191
    if_expression (166)
        on left: 195
        on right: 71
    $@20 (167)
        on left: 193
        on right: 195
    $@21 (168)
        on left: 194
        on right: 195
    else_clause (169)
        on left: 196 198
        on right: 195
    $@22 (170)
        on left: 197
        on right: 198
    stmntlist (171)
        on left: 199 200
        on right: 65 161 191 200
    closing_paren (172)
        on left: 201
        on right: 203 205
    call_expression (173)
        on left: 203 205 206 207
        on right: 69 109
    @23 (174)
        on left: 202
        on right: 203
    @24 (175)
        on left: 204
        on right: 205
    array_constructor (176)
        on left: 209
        on right: 206
    @25 (177)
        on left: 208
        on right: 209
    map_constructor (178)
        on left: 211
        on right: 207
    @26 (179)
        on left: 210
        on right: 211
    optional_map_associates (180)
        on left: 212 213
        on right: 211
    map_associates (181)
        on left: 214 215
        on right: 213 215
    map_associate (182)
        on left: 217
        on right: 214 215
    @27 (183)
        on left: 216
        on right: 217
    function_id_or_pointer (184)
        on left: 218 219
        on right: 205
    parameter (185)
        on left: 220 221
        on right: 48 49
    type_cast (186)
        on left: 222
        on right: 117
    type_name (187)
        on left: 223 224
        on right: 35 38 39 51 181 186 222
    array_size (188)
        on left: 225 226
        on right: 224
    boolean_literal (189)
        on left: 227 228
        on right: 236
    float_literal (190)
        on left: 229
        on right: 234
    integer_literal (191)
        on left: 230 231
        on right: 164 233
    character_literal (192)
        on left: 232
        on right: 235
    simple_literal (193)
        on left: 233 234 235 236
        on right: 25 148


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 8 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

    9 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites global_declarations $@2 header_delimiter macro_definitions

    $default  reduce using rule 10 (prerequisites)

    prerequisites  go to state 7


State 6

    9 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . global_declarations $@2 header_delimiter macro_definitions
   11 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 13 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

    9 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 9 (namespace)


State 9

   12 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   11 prerequisites: prerequisites require .

    $default  reduce using rule 11 (prerequisites)


State 11

    3 file_structure: $@1 namespace prerequisites global_declarations . $@2 header_delimiter macro_definitions
   14 global_declarations: global_declarations . constants ';'
   15                    | global_declarations . global_var ';'
   16                    | global_declarations . native_macro_definition ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14

    T_ANNOTATION       reduce using rule 61 ($@6)
    T_NATIVE           reduce using rule 61 ($@6)
    T_STATIC           [reduce using rule 2 ($@2)]
    T_TYPE_IDENTIFIER  reduce using rule 2 ($@2)
    T_TYPE_IDENTIFIER  [reduce using rule 17 (scope)]
    $default           reduce using rule 2 ($@2)

    $@2                      go to state 15
    scope                    go to state 16
    constants                go to state 17
    global_var               go to state 18
    native_macro_definition  go to state 19
    $@6                      go to state 20


State 12

   12 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 21


State 13

   18 scope: T_STATIC .

    $default  reduce using rule 18 (scope)


State 14

   19 constants: T_CONST . constant_list

    $default  reduce using rule 22 ($@3)

    constant_list  go to state 22
    constdef       go to state 23
    $@3            go to state 24


State 15

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 . header_delimiter macro_definitions

    '!'  shift, and go to state 25

    $default  reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 26


State 16

   37 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 27

    var_decl   go to state 28
    type_name  go to state 29


State 17

   14 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 30


State 18

   15 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 31


State 19

   16 global_declarations: global_declarations native_macro_definition . ';'

    ';'  shift, and go to state 32


State 20

   62 native_macro_definition: $@6 . annotations T_NATIVE macrostart

    T_ANNOTATION  shift, and go to state 33

    $default  reduce using rule 53 (annotations)

    annotations  go to state 34
    annotation   go to state 35


State 21

   12 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 12 (require)


State 22

   19 constants: T_CONST constant_list .
   21 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 36

    $default  reduce using rule 19 (constants)


State 23

   20 constant_list: constdef .

    $default  reduce using rule 20 (constant_list)


State 24

   24 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 37
    T_NUM     shift, and go to state 38
    T_STRING  shift, and go to state 39

    variable_identifier  go to state 40


State 25

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 26

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 63 ($@7)

    macro_definitions  go to state 41
    macro_definition   go to state 42
    $@7                go to state 43


State 27

  223 type_name: T_TYPE_IDENTIFIER .
  224          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 44

    $default  reduce using rule 223 (type_name)

    array_size  go to state 45


State 28

   37 global_var: scope var_decl .

    $default  reduce using rule 37 (global_var)


State 29

   38 var_decl: type_name . variable_identifier assignment_expression
   39         | type_name . variable_identifier

    T_IDENT   shift, and go to state 37
    T_NUM     shift, and go to state 38
    T_STRING  shift, and go to state 39

    variable_identifier  go to state 46


State 30

   14 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 14 (global_declarations)


State 31

   15 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 15 (global_declarations)


State 32

   16 global_declarations: global_declarations native_macro_definition ';' .

    $default  reduce using rule 16 (global_declarations)


State 33

   56 annotation: T_ANNOTATION . $@5 '(' annotation_values ')'

    $default  reduce using rule 55 ($@5)

    $@5  go to state 47


State 34

   62 native_macro_definition: $@6 annotations . T_NATIVE macrostart

    T_NATIVE  shift, and go to state 48


State 35

   54 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 33

    $default  reduce using rule 53 (annotations)

    annotations  go to state 49
    annotation   go to state 35


State 36

   21 constant_list: constant_list ',' . constdef

    $default  reduce using rule 22 ($@3)

    constdef  go to state 50
    $@3       go to state 24


State 37

   27 variable_identifier: T_IDENT .

    $default  reduce using rule 27 (variable_identifier)


State 38

   28 variable_identifier: T_NUM .

    $default  reduce using rule 28 (variable_identifier)


State 39

   29 variable_identifier: T_STRING .

    $default  reduce using rule 29 (variable_identifier)


State 40

   24 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 51


State 41

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 42

    7 macro_definitions: macro_definition . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 63 ($@7)

    macro_definitions  go to state 52
    macro_definition   go to state 42
    $@7                go to state 43


State 43

   64 macro_definition: $@7 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 17 (scope)

    scope       go to state 53
    macro_type  go to state 54
    macrostart  go to state 55


State 44

  225 array_size: '[' . ']'
  226           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 56
    ']'    shift, and go to state 57


State 45

  224 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 224 (type_name)


State 46

   38 var_decl: type_name variable_identifier . assignment_expression
   39         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 58

    $default  reduce using rule 39 (var_decl)

    assignment_expression  go to state 59


State 47

   56 annotation: T_ANNOTATION $@5 . '(' annotation_values ')'

    '('  shift, and go to state 60


State 48

   62 native_macro_definition: $@6 annotations T_NATIVE . macrostart

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 17 (scope)

    scope       go to state 53
    macro_type  go to state 54
    macrostart  go to state 61


State 49

   54 annotations: annotation annotations .

    $default  reduce using rule 54 (annotations)


State 50

   21 constant_list: constant_list ',' constdef .

    $default  reduce using rule 21 (constant_list)


State 51

   24 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 64
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    '-'                      shift, and go to state 68

    constant_literal   go to state 69
    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 74


State 52

    7 macro_definitions: macro_definition macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 53

   34 macro_type: scope . T_VOID
   35           | scope . type_name

    T_VOID             shift, and go to state 75
    T_TYPE_IDENTIFIER  shift, and go to state 27

    type_name  go to state 76


State 54

   36 macrostart: macro_type . macro_declaration '(' argument_list ')' optional_description

    T_IDENT  shift, and go to state 77
    T_FUNC   shift, and go to state 78

    macro_declaration  go to state 79


State 55

   64 macro_definition: $@7 macrostart . block

    '{'  shift, and go to state 80

    block  go to state 81


State 56

  226 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 82


State 57

  225 array_size: '[' ']' .

    $default  reduce using rule 225 (array_size)


State 58

   97 assignment_expression: T_ASSIGN . expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    T_IDENT     [reduce using rule 100 (range_expression)]
    T_FUNC      [reduce using rule 100 (range_expression)]
    T_VARIABLE  [reduce using rule 100 (range_expression)]
    '~'         [reduce using rule 100 (range_expression)]
    '+'         [reduce using rule 100 (range_expression)]
    '-'         [reduce using rule 100 (range_expression)]
    '*'         [reduce using rule 100 (range_expression)]
    '['         [reduce using rule 100 (range_expression)]
    '{'         [reduce using rule 100 (range_expression)]
    $default    reduce using rule 100 (range_expression)

    variable_reference      go to state 96
    expression              go to state 97
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 59

   38 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 38 (var_decl)


State 60

   56 annotation: T_ANNOTATION $@5 '(' . annotation_values ')'

    T_IDENT  shift, and go to state 111

    $default  reduce using rule 58 (annotation_values)

    annotation_value   go to state 112
    annotation_values  go to state 113


State 61

   62 native_macro_definition: $@6 annotations T_NATIVE macrostart .

    $default  reduce using rule 62 (native_macro_definition)


State 62

  230 integer_literal: T_NUM .

    $default  reduce using rule 230 (integer_literal)


State 63

  229 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 229 (float_literal)


State 64

   26 constant_literal: T_STRING .

    $default  reduce using rule 26 (constant_literal)


State 65

  232 character_literal: T_CHARACTER .

    $default  reduce using rule 232 (character_literal)


State 66

  227 boolean_literal: T_TRUE .

    $default  reduce using rule 227 (boolean_literal)


State 67

  228 boolean_literal: T_FALSE .

    $default  reduce using rule 228 (boolean_literal)


State 68

  231 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 114


State 69

   24 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 23 ($@4)

    $@4  go to state 115


State 70

  236 simple_literal: boolean_literal .

    $default  reduce using rule 236 (simple_literal)


State 71

  234 simple_literal: float_literal .

    $default  reduce using rule 234 (simple_literal)


State 72

  233 simple_literal: integer_literal .

    $default  reduce using rule 233 (simple_literal)


State 73

  235 simple_literal: character_literal .

    $default  reduce using rule 235 (simple_literal)


State 74

   25 constant_literal: simple_literal .

    $default  reduce using rule 25 (constant_literal)


State 75

   34 macro_type: scope T_VOID .

    $default  reduce using rule 34 (macro_type)


State 76

   35 macro_type: scope type_name .

    $default  reduce using rule 35 (macro_type)


State 77

   32 macro_declaration: T_IDENT .

    $default  reduce using rule 32 (macro_declaration)


State 78

   33 macro_declaration: T_FUNC .

    $default  reduce using rule 33 (macro_declaration)


State 79

   36 macrostart: macro_type macro_declaration . '(' argument_list ')' optional_description

    '('  shift, and go to state 116


State 80

   65 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 66 (var_decls)

    var_decls  go to state 117


State 81

   64 macro_definition: $@7 macrostart block .

    $default  reduce using rule 64 (macro_definition)


State 82

  226 array_size: '[' T_NUM ']' .

    $default  reduce using rule 226 (array_size)


State 83

  111 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 118


State 84

   31 variable_reference: T_IDENT .
  149 value: T_IDENT .
  219 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 31 (variable_reference)
    '('       reduce using rule 219 (function_id_or_pointer)
    $default  reduce using rule 149 (value)


State 85

  150 string: T_STRING .

    $default  reduce using rule 150 (string)


State 86

  203 call_expression: T_FUNC . '(' @23 parameter_list closing_paren

    '('  shift, and go to state 119


State 87

   30 variable_reference: T_VARIABLE .
  146 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 30 (variable_reference)
    $default  reduce using rule 146 (value)


State 88

  112 unary_expression: '!' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 120
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 89

  113 unary_expression: '~' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 121
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 90

  114 unary_expression: '+' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 122
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 91

  115 unary_expression: '-' . variable_reference
  231 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 123
    T_NUM       shift, and go to state 114
    T_VARIABLE  shift, and go to state 124

    variable_reference  go to state 125


State 92

  218 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 123
    T_VARIABLE  shift, and go to state 124

    variable_reference  go to state 126


State 93

  209 array_constructor: '[' . @25 parameter_list ']'

    $default  reduce using rule 208 (@25)

    @25  go to state 127


State 94

  142 binary_expression: '(' . binary_expression ')'
  222 type_cast: '(' . type_name ')'

    T_NEW                    shift, and go to state 83
    T_TYPE_IDENTIFIER        shift, and go to state 27
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 128
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    type_name               go to state 129
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 95

  211 map_constructor: '{' . @26 optional_map_associates '}'

    $default  reduce using rule 210 (@26)

    @26  go to state 130


State 96

  143 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 58

    assignment_expression  go to state 131


State 97

   97 assignment_expression: T_ASSIGN expression .

    $default  reduce using rule 97 (assignment_expression)


State 98

   99 expression: range_expression .

    $default  reduce using rule 99 (expression)


State 99

  116 binary_expression: simple_term .

    $default  reduce using rule 116 (binary_expression)


State 100

  110 simple_term: constructor_expression .

    $default  reduce using rule 110 (simple_term)


State 101

  119 binary_expression: unary_expression .

    $default  reduce using rule 119 (binary_expression)


State 102

   98 expression: binary_expression .
  102 range_expression: binary_expression . T_DOTDOT binary_expression $@10 range_increment
  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 132
    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_DOTDOT       [reduce using rule 98 (expression)]
    T_NMATCH       [reduce using rule 98 (expression)]
    T_NE           [reduce using rule 98 (expression)]
    T_EQ           [reduce using rule 98 (expression)]
    T_SHIFT_LEFT   [reduce using rule 98 (expression)]
    T_SHIFT_RIGHT  [reduce using rule 98 (expression)]
    T_OR           [reduce using rule 98 (expression)]
    T_AND          [reduce using rule 98 (expression)]
    T_LE           [reduce using rule 98 (expression)]
    T_GE           [reduce using rule 98 (expression)]
    T_POWER_TO     [reduce using rule 98 (expression)]
    '&'            [reduce using rule 98 (expression)]
    '|'            [reduce using rule 98 (expression)]
    '^'            [reduce using rule 98 (expression)]
    '~'            [reduce using rule 98 (expression)]
    '<'            [reduce using rule 98 (expression)]
    '>'            [reduce using rule 98 (expression)]
    '+'            [reduce using rule 98 (expression)]
    '-'            [reduce using rule 98 (expression)]
    '*'            [reduce using rule 98 (expression)]
    '/'            [reduce using rule 98 (expression)]
    '%'            [reduce using rule 98 (expression)]
    '['            [reduce using rule 98 (expression)]
    '.'            [reduce using rule 98 (expression)]
    $default       reduce using rule 98 (expression)


State 103

  108 simple_term: value .

    $default  reduce using rule 108 (simple_term)


State 104

  147 value: string .
  151 string: string . T_STRING

    T_STRING  shift, and go to state 156

    $default  reduce using rule 147 (value)


State 105

  109 simple_term: call_expression .

    $default  reduce using rule 109 (simple_term)


State 106

  206 call_expression: array_constructor .

    $default  reduce using rule 206 (call_expression)


State 107

  207 call_expression: map_constructor .

    $default  reduce using rule 207 (call_expression)


State 108

  205 call_expression: function_id_or_pointer . '(' @24 parameter_list closing_paren

    '('  shift, and go to state 157


State 109

  117 binary_expression: type_cast . simple_term

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 158
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 159
    '-'                      shift, and go to state 68
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '{'                      shift, and go to state 95

    simple_term             go to state 160
    constructor_expression  go to state 100
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 110

  148 value: simple_literal .

    $default  reduce using rule 148 (value)


State 111

   57 annotation_value: T_IDENT . T_ASSIGN T_STRING

    T_ASSIGN  shift, and go to state 161


State 112

   59 annotation_values: annotation_value .
   60                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 162

    $default  reduce using rule 59 (annotation_values)


State 113

   56 annotation: T_ANNOTATION $@5 '(' annotation_values . ')'

    ')'  shift, and go to state 163


State 114

  231 integer_literal: '-' T_NUM .

    $default  reduce using rule 231 (integer_literal)


State 115

   24 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 24 (constdef)


State 116

   36 macrostart: macro_type macro_declaration '(' . argument_list ')' optional_description

    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_ELLIPSIS         shift, and go to state 164

    $default  reduce using rule 42 (argument_list)

    argument_list         go to state 165
    non_empty_arguments   go to state 166
    argument_declaration  go to state 167
    type_name             go to state 168


State 117

   65 block: '{' var_decls . stmntlist closing_brace
   67 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 169
    T_FOR              shift, and go to state 170
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 171
    T_FUNC             shift, and go to state 86
    T_IF               shift, and go to state 172
    T_WHILE            shift, and go to state 173
    T_GOTO             shift, and go to state 174
    T_SWITCH           shift, and go to state 175
    T_BREAK            shift, and go to state 176
    T_CONTINUE         shift, and go to state 177
    T_RETURN           shift, and go to state 178
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 92
    '['                shift, and go to state 93
    ';'                shift, and go to state 179
    '{'                shift, and go to state 180

    '}'  reduce using rule 199 (stmntlist)

    variable_reference      go to state 181
    var_decl                go to state 182
    block                   go to state 183
    statement               go to state 184
    assignment              go to state 185
    shorthand_assignment    go to state 186
    assignment_target       go to state 187
    increment_expression    go to state 188
    break                   go to state 189
    continue                go to state 190
    return_expression       go to state 191
    label                   go to state 192
    goto_expression         go to state 193
    switch_expression       go to state 194
    for_loop_expression     go to state 195
    while                   go to state 196
    if_expression           go to state 197
    stmntlist               go to state 198
    call_expression         go to state 199
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 118

  111 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 200


State 119

  203 call_expression: T_FUNC '(' . @23 parameter_list closing_paren

    $default  reduce using rule 202 (@23)

    @23  go to state 201


State 120

  112 unary_expression: '!' binary_expression .
  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 112 (unary_expression)


State 121

  113 unary_expression: '~' binary_expression .
  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 113 (unary_expression)


State 122

  114 unary_expression: '+' binary_expression .
  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 114 (unary_expression)


State 123

   31 variable_reference: T_IDENT .

    $default  reduce using rule 31 (variable_reference)


State 124

   30 variable_reference: T_VARIABLE .

    $default  reduce using rule 30 (variable_reference)


State 125

  115 unary_expression: '-' variable_reference .

    $default  reduce using rule 115 (unary_expression)


State 126

  218 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 218 (function_id_or_pointer)


State 127

  209 array_constructor: '[' @25 . parameter_list ']'

    error                    shift, and go to state 202
    T_NEW                    shift, and go to state 83
    T_ELLIPSIS               shift, and go to state 203
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    ','  reduce using rule 100 (range_expression)
    ']'  reduce using rule 46 (parameter_list)
    ']'  [reduce using rule 100 (range_expression)]

    variable_reference      go to state 96
    parameter_list          go to state 204
    non_empty_parameters    go to state 205
    expression              go to state 206
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    parameter               go to state 207
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 128

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression
  142                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155
    ')'            shift, and go to state 208


State 129

  222 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 209


State 130

  211 map_constructor: '{' @26 . optional_map_associates '}'

    T_STRING  shift, and go to state 210

    $default  reduce using rule 212 (optional_map_associates)

    optional_map_associates  go to state 211
    map_associates           go to state 212
    map_associate            go to state 213


State 131

  143 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 143 (binary_expression)


State 132

  102 range_expression: binary_expression T_DOTDOT . binary_expression $@10 range_increment

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 214
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 133

  122 binary_expression: binary_expression T_NMATCH . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 215
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 134

  141 binary_expression: binary_expression T_NE . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 216
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 135

  140 binary_expression: binary_expression T_EQ . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 217
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 136

  131 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 218
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 137

  132 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 219
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 138

  135 binary_expression: binary_expression T_OR . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 220
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 139

  134 binary_expression: binary_expression T_AND . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 221
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 140

  138 binary_expression: binary_expression T_LE . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 222
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 141

  139 binary_expression: binary_expression T_GE . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 223
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 142

  133 binary_expression: binary_expression T_POWER_TO . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 224
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 143

  123 binary_expression: binary_expression '&' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 225
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 144

  124 binary_expression: binary_expression '|' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 226
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 145

  126 binary_expression: binary_expression '^' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 227
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 146

  121 binary_expression: binary_expression '~' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 228
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 147

  136 binary_expression: binary_expression '<' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 229
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 148

  137 binary_expression: binary_expression '>' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 230
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 149

  125 binary_expression: binary_expression '+' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 231
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 150

  127 binary_expression: binary_expression '-' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 232
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 151

  128 binary_expression: binary_expression '*' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 233
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 152

  129 binary_expression: binary_expression '/' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 234
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 153

  130 binary_expression: binary_expression '%' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 235
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 154

  120 binary_expression: binary_expression '[' . expression ']'

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    $default  reduce using rule 100 (range_expression)

    variable_reference      go to state 96
    expression              go to state 236
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 155

  118 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 237


State 156

  151 string: string T_STRING .

    $default  reduce using rule 151 (string)


State 157

  205 call_expression: function_id_or_pointer '(' . @24 parameter_list closing_paren

    $default  reduce using rule 204 (@24)

    @24  go to state 238


State 158

  149 value: T_IDENT .
  219 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 219 (function_id_or_pointer)
    $default  reduce using rule 149 (value)


State 159

  146 value: T_VARIABLE .

    $default  reduce using rule 146 (value)


State 160

  117 binary_expression: type_cast simple_term .

    $default  reduce using rule 117 (binary_expression)


State 161

   57 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 239


State 162

   60 annotation_values: annotation_value ',' . annotation_values

    T_IDENT  shift, and go to state 111

    $default  reduce using rule 58 (annotation_values)

    annotation_value   go to state 112
    annotation_values  go to state 240


State 163

   56 annotation: T_ANNOTATION $@5 '(' annotation_values ')' .

    $default  reduce using rule 56 (annotation)


State 164

   52 argument_declaration: T_ELLIPSIS .

    $default  reduce using rule 52 (argument_declaration)


State 165

   36 macrostart: macro_type macro_declaration '(' argument_list . ')' optional_description

    ')'  shift, and go to state 241


State 166

   43 argument_list: non_empty_arguments .
   45 non_empty_arguments: non_empty_arguments . ',' argument_declaration

    ','  shift, and go to state 242

    $default  reduce using rule 43 (argument_list)


State 167

   44 non_empty_arguments: argument_declaration .

    $default  reduce using rule 44 (non_empty_arguments)


State 168

   51 argument_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 37
    T_NUM     shift, and go to state 38
    T_STRING  shift, and go to state 39

    variable_identifier  go to state 243


State 169

   83 statement: error . ';'

    ';'  shift, and go to state 244


State 170

  172 for_loop_expression: T_FOR . for_clause $@12 local_block

    error  shift, and go to state 245
    '('    shift, and go to state 246

    for_to_clause  go to state 247
    for_clause     go to state 248
    in_clause      go to state 249


State 171

   31 variable_reference: T_IDENT .
  167 label: T_IDENT . ':'
  219 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 250

    '('       reduce using rule 219 (function_id_or_pointer)
    $default  reduce using rule 31 (variable_reference)


State 172

  195 if_expression: T_IF . condition $@20 local_block $@21 else_clause

    '('  shift, and go to state 251

    condition  go to state 252


State 173

  189 while: T_WHILE . $@18 condition $@19 local_block

    $default  reduce using rule 187 ($@18)

    $@18  go to state 253


State 174

  168 goto_expression: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 254


State 175

  170 switch_expression: T_SWITCH . '(' value ')' $@11 '{' case_clauses '}'

    '('  shift, and go to state 255


State 176

  152 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 256

    $default  reduce using rule 157 (opt_num)

    opt_num  go to state 257


State 177

  153 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 256

    $default  reduce using rule 157 (opt_num)

    opt_num  go to state 258


State 178

  154 return_expression: T_RETURN . optional_bterm

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    $default  reduce using rule 155 (optional_bterm)

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 259
    value                   go to state 103
    string                  go to state 104
    optional_bterm          go to state 260
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 179

   68 statement: ';' .

    $default  reduce using rule 68 (statement)


State 180

   65 block: '{' . var_decls stmntlist closing_brace
  211 map_constructor: '{' . @26 optional_map_associates '}'

    T_STRING  reduce using rule 210 (@26)
    '}'       reduce using rule 66 (var_decls)
    '}'       [reduce using rule 210 (@26)]
    $default  reduce using rule 66 (var_decls)

    var_decls  go to state 117
    @26        go to state 130


State 181

   84 assignment: variable_reference . assignment_expression
   90 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator expression
   91 assignment_target: variable_reference .
  107 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 261
    T_MINUSMINUS  shift, and go to state 262
    T_ASSIGN      shift, and go to state 58

    '['       reduce using rule 91 (assignment_target)
    '.'       reduce using rule 91 (assignment_target)
    $default  reduce using rule 89 ($@9)

    $@9                    go to state 263
    assignment_expression  go to state 264
    minusminus_plusplus    go to state 265


State 182

   67 var_decls: var_decls var_decl . ';'
   82 statement: var_decl .

    ';'  shift, and go to state 266

    ';'       [reduce using rule 82 (statement)]
    $default  reduce using rule 82 (statement)


State 183

   79 statement: block .

    $default  reduce using rule 79 (statement)


State 184

  200 stmntlist: statement . stmntlist

    error              shift, and go to state 169
    T_FOR              shift, and go to state 170
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 171
    T_FUNC             shift, and go to state 86
    T_IF               shift, and go to state 172
    T_WHILE            shift, and go to state 173
    T_GOTO             shift, and go to state 174
    T_SWITCH           shift, and go to state 175
    T_BREAK            shift, and go to state 176
    T_CONTINUE         shift, and go to state 177
    T_RETURN           shift, and go to state 178
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 92
    '['                shift, and go to state 93
    ';'                shift, and go to state 179
    '{'                shift, and go to state 180

    T_CASE     reduce using rule 199 (stmntlist)
    T_DEFAULT  reduce using rule 199 (stmntlist)
    '}'        reduce using rule 199 (stmntlist)

    variable_reference      go to state 181
    var_decl                go to state 267
    block                   go to state 183
    statement               go to state 184
    assignment              go to state 185
    shorthand_assignment    go to state 186
    assignment_target       go to state 187
    increment_expression    go to state 188
    break                   go to state 189
    continue                go to state 190
    return_expression       go to state 191
    label                   go to state 192
    goto_expression         go to state 193
    switch_expression       go to state 194
    for_loop_expression     go to state 195
    while                   go to state 196
    if_expression           go to state 197
    stmntlist               go to state 268
    call_expression         go to state 199
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 185

   70 statement: assignment . ';'

    ';'  shift, and go to state 269


State 186

   88 assignment: shorthand_assignment .

    $default  reduce using rule 88 (assignment)


State 187

   86 assignment: assignment_target . '.' T_IDENT $@8 assignment_expression
   87           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 270
    '.'  shift, and go to state 271


State 188

   80 statement: increment_expression . ';'

    ';'  shift, and go to state 272


State 189

   75 statement: break .

    $default  reduce using rule 75 (statement)


State 190

   76 statement: continue .

    $default  reduce using rule 76 (statement)


State 191

   77 statement: return_expression . ';'

    ';'  shift, and go to state 273


State 192

   81 statement: label .

    $default  reduce using rule 81 (statement)


State 193

   78 statement: goto_expression . ';'

    ';'  shift, and go to state 274


State 194

   74 statement: switch_expression .

    $default  reduce using rule 74 (statement)


State 195

   73 statement: for_loop_expression .

    $default  reduce using rule 73 (statement)


State 196

   72 statement: while .

    $default  reduce using rule 72 (statement)


State 197

   71 statement: if_expression .

    $default  reduce using rule 71 (statement)


State 198

   65 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 275

    closing_brace  go to state 276


State 199

   69 statement: call_expression . ';'

    ';'  shift, and go to state 277


State 200

  111 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 278


State 201

  203 call_expression: T_FUNC '(' @23 . parameter_list closing_paren

    error                    shift, and go to state 202
    T_NEW                    shift, and go to state 83
    T_ELLIPSIS               shift, and go to state 203
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    ','  reduce using rule 100 (range_expression)
    ')'  reduce using rule 46 (parameter_list)
    ')'  [reduce using rule 100 (range_expression)]

    variable_reference      go to state 96
    parameter_list          go to state 279
    non_empty_parameters    go to state 205
    expression              go to state 206
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    parameter               go to state 207
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 202

   50 non_empty_parameters: error .

    $default  reduce using rule 50 (non_empty_parameters)


State 203

  221 parameter: T_ELLIPSIS . expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    $default  reduce using rule 100 (range_expression)

    variable_reference      go to state 96
    expression              go to state 280
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 204

  209 array_constructor: '[' @25 parameter_list . ']'

    ']'  shift, and go to state 281


State 205

   47 parameter_list: non_empty_parameters .
   49 non_empty_parameters: non_empty_parameters . ',' parameter

    ','  shift, and go to state 282

    $default  reduce using rule 47 (parameter_list)


State 206

  220 parameter: expression .

    $default  reduce using rule 220 (parameter)


State 207

   48 non_empty_parameters: parameter .

    $default  reduce using rule 48 (non_empty_parameters)


State 208

  142 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 142 (binary_expression)


State 209

  222 type_cast: '(' type_name ')' .

    $default  reduce using rule 222 (type_cast)


State 210

  217 map_associate: T_STRING . ':' @27 value

    ':'  shift, and go to state 283


State 211

  211 map_constructor: '{' @26 optional_map_associates . '}'

    '}'  shift, and go to state 284


State 212

  213 optional_map_associates: map_associates .
  215 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 285

    $default  reduce using rule 213 (optional_map_associates)


State 213

  214 map_associates: map_associate .

    $default  reduce using rule 214 (map_associates)


State 214

  102 range_expression: binary_expression T_DOTDOT binary_expression . $@10 range_increment
  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH       [reduce using rule 101 ($@10)]
    T_NE           [reduce using rule 101 ($@10)]
    T_EQ           [reduce using rule 101 ($@10)]
    T_SHIFT_LEFT   [reduce using rule 101 ($@10)]
    T_SHIFT_RIGHT  [reduce using rule 101 ($@10)]
    T_OR           [reduce using rule 101 ($@10)]
    T_AND          [reduce using rule 101 ($@10)]
    T_LE           [reduce using rule 101 ($@10)]
    T_GE           [reduce using rule 101 ($@10)]
    T_POWER_TO     [reduce using rule 101 ($@10)]
    '&'            [reduce using rule 101 ($@10)]
    '|'            [reduce using rule 101 ($@10)]
    '^'            [reduce using rule 101 ($@10)]
    '~'            [reduce using rule 101 ($@10)]
    '<'            [reduce using rule 101 ($@10)]
    '>'            [reduce using rule 101 ($@10)]
    '+'            [reduce using rule 101 ($@10)]
    '-'            [reduce using rule 101 ($@10)]
    '*'            [reduce using rule 101 ($@10)]
    '/'            [reduce using rule 101 ($@10)]
    '%'            [reduce using rule 101 ($@10)]
    '['            [reduce using rule 101 ($@10)]
    '.'            [reduce using rule 101 ($@10)]
    $default       reduce using rule 101 ($@10)

    $@10  go to state 286


State 215

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  122                  | binary_expression T_NMATCH binary_expression .
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 122 (binary_expression)


State 216

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression
  141                  | binary_expression T_NE binary_expression .

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 141 (binary_expression)


State 217

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  140                  | binary_expression T_EQ binary_expression .
  141                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 140 (binary_expression)


State 218

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  131                  | binary_expression T_SHIFT_LEFT binary_expression .
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '+'         shift, and go to state 149
    '-'         shift, and go to state 150
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 131 (binary_expression)


State 219

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  132                  | binary_expression T_SHIFT_RIGHT binary_expression .
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '+'         shift, and go to state 149
    '-'         shift, and go to state 150
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 132 (binary_expression)


State 220

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  135                  | binary_expression T_OR binary_expression .
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 135 (binary_expression)


State 221

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  134                  | binary_expression T_AND binary_expression .
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 134 (binary_expression)


State 222

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  138                  | binary_expression T_LE binary_expression .
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_POWER_TO     shift, and go to state 142
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 138 (binary_expression)


State 223

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  139                  | binary_expression T_GE binary_expression .
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_POWER_TO     shift, and go to state 142
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 139 (binary_expression)


State 224

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  133                  | binary_expression T_POWER_TO binary_expression .
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 133 (binary_expression)


State 225

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  123                  | binary_expression '&' binary_expression .
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 123 (binary_expression)


State 226

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  124                  | binary_expression '|' binary_expression .
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 124 (binary_expression)


State 227

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  126                  | binary_expression '^' binary_expression .
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 126 (binary_expression)


State 228

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  121                  | binary_expression '~' binary_expression .
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 121 (binary_expression)


State 229

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  136                  | binary_expression '<' binary_expression .
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_POWER_TO     shift, and go to state 142
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 136 (binary_expression)


State 230

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  137                  | binary_expression '>' binary_expression .
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_POWER_TO     shift, and go to state 142
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 137 (binary_expression)


State 231

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  125                  | binary_expression '+' binary_expression .
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 125 (binary_expression)


State 232

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  127                  | binary_expression '-' binary_expression .
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 142
    '*'         shift, and go to state 151
    '/'         shift, and go to state 152
    '%'         shift, and go to state 153
    '['         shift, and go to state 154
    '.'         shift, and go to state 155

    $default  reduce using rule 127 (binary_expression)


State 233

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  128                  | binary_expression '*' binary_expression .
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 128 (binary_expression)


State 234

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  129                  | binary_expression '/' binary_expression .
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 129 (binary_expression)


State 235

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  130                  | binary_expression '%' binary_expression .
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 130 (binary_expression)


State 236

  120 binary_expression: binary_expression '[' expression . ']'

    ']'  shift, and go to state 287


State 237

  118 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 118 (binary_expression)


State 238

  205 call_expression: function_id_or_pointer '(' @24 . parameter_list closing_paren

    error                    shift, and go to state 202
    T_NEW                    shift, and go to state 83
    T_ELLIPSIS               shift, and go to state 203
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    ','  reduce using rule 100 (range_expression)
    ')'  reduce using rule 46 (parameter_list)
    ')'  [reduce using rule 100 (range_expression)]

    variable_reference      go to state 96
    parameter_list          go to state 288
    non_empty_parameters    go to state 205
    expression              go to state 206
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    parameter               go to state 207
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 239

   57 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 57 (annotation_value)


State 240

   60 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 60 (annotation_values)


State 241

   36 macrostart: macro_type macro_declaration '(' argument_list ')' . optional_description

    T_STRING  shift, and go to state 289

    $default  reduce using rule 40 (optional_description)

    optional_description  go to state 290


State 242

   45 non_empty_arguments: non_empty_arguments ',' . argument_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_ELLIPSIS         shift, and go to state 164

    argument_declaration  go to state 291
    type_name             go to state 168


State 243

   51 argument_declaration: type_name variable_identifier .

    $default  reduce using rule 51 (argument_declaration)


State 244

   83 statement: error ';' .

    $default  reduce using rule 83 (statement)


State 245

  184 for_clause: error .

    $default  reduce using rule 184 (for_clause)


State 246

  178 for_to_clause: '(' . opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'
  186 in_clause: '(' . type_name variable_identifier $@17 ':' expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 179 (opt_for_initializer)

    opt_for_initializer  go to state 292
    type_name            go to state 293


State 247

  182 for_clause: for_to_clause .

    $default  reduce using rule 182 (for_clause)


State 248

  172 for_loop_expression: T_FOR for_clause . $@12 local_block

    $default  reduce using rule 171 ($@12)

    $@12  go to state 294


State 249

  183 for_clause: in_clause .

    $default  reduce using rule 183 (for_clause)


State 250

  167 label: T_IDENT ':' .

    $default  reduce using rule 167 (label)


State 251

  144 condition: '(' . binary_expression ')'
  145          | '(' . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 295
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 252

  195 if_expression: T_IF condition . $@20 local_block $@21 else_clause

    $default  reduce using rule 193 ($@20)

    $@20  go to state 296


State 253

  189 while: T_WHILE $@18 . condition $@19 local_block

    '('  shift, and go to state 251

    condition  go to state 297


State 254

  168 goto_expression: T_GOTO T_IDENT .

    $default  reduce using rule 168 (goto_expression)


State 255

  170 switch_expression: T_SWITCH '(' . value ')' $@11 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 298
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_VARIABLE               shift, and go to state 159
    '-'                      shift, and go to state 68

    value              go to state 299
    string             go to state 104
    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 110


State 256

  158 opt_num: T_NUM .

    $default  reduce using rule 158 (opt_num)


State 257

  152 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 300


State 258

  153 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 301


State 259

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression
  156 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155

    $default  reduce using rule 156 (optional_bterm)


State 260

  154 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 154 (return_expression)


State 261

  106 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 106 (minusminus_plusplus)


State 262

  105 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 105 (minusminus_plusplus)


State 263

   90 shorthand_assignment: variable_reference $@9 . shorthand_assignment_operator expression

    T_SH_ASSIGN_PLUS   shift, and go to state 302
    T_SH_ASSIGN_MINUS  shift, and go to state 303
    T_SH_ASSIGN_MULT   shift, and go to state 304
    T_SH_ASSIGN_DIV    shift, and go to state 305
    T_SH_ASSIGN_MOD    shift, and go to state 306

    shorthand_assignment_operator  go to state 307


State 264

   84 assignment: variable_reference assignment_expression .

    $default  reduce using rule 84 (assignment)


State 265

  107 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 107 (increment_expression)


State 266

   67 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 67 (var_decls)


State 267

   82 statement: var_decl .

    $default  reduce using rule 82 (statement)


State 268

  200 stmntlist: statement stmntlist .

    $default  reduce using rule 200 (stmntlist)


State 269

   70 statement: assignment ';' .

    $default  reduce using rule 70 (statement)


State 270

   87 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 308
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 271

   86 assignment: assignment_target '.' . T_IDENT $@8 assignment_expression

    T_IDENT  shift, and go to state 309


State 272

   80 statement: increment_expression ';' .

    $default  reduce using rule 80 (statement)


State 273

   77 statement: return_expression ';' .

    $default  reduce using rule 77 (statement)


State 274

   78 statement: goto_expression ';' .

    $default  reduce using rule 78 (statement)


State 275

  192 closing_brace: '}' .

    $default  reduce using rule 192 (closing_brace)


State 276

   65 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 65 (block)


State 277

   69 statement: call_expression ';' .

    $default  reduce using rule 69 (statement)


State 278

  111 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 111 (constructor_expression)


State 279

  203 call_expression: T_FUNC '(' @23 parameter_list . closing_paren

    ')'  shift, and go to state 310

    closing_paren  go to state 311


State 280

  221 parameter: T_ELLIPSIS expression .

    $default  reduce using rule 221 (parameter)


State 281

  209 array_constructor: '[' @25 parameter_list ']' .

    $default  reduce using rule 209 (array_constructor)


State 282

   49 non_empty_parameters: non_empty_parameters ',' . parameter

    T_NEW                    shift, and go to state 83
    T_ELLIPSIS               shift, and go to state 203
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    $default  reduce using rule 100 (range_expression)

    variable_reference      go to state 96
    expression              go to state 206
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    parameter               go to state 312
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 283

  217 map_associate: T_STRING ':' . @27 value

    $default  reduce using rule 216 (@27)

    @27  go to state 313


State 284

  211 map_constructor: '{' @26 optional_map_associates '}' .

    $default  reduce using rule 211 (map_constructor)


State 285

  215 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 210

    map_associate  go to state 314


State 286

  102 range_expression: binary_expression T_DOTDOT binary_expression $@10 . range_increment

    T_DOTDOT  shift, and go to state 315

    T_DOTDOT  [reduce using rule 103 (range_increment)]
    $default  reduce using rule 103 (range_increment)

    range_increment  go to state 316


State 287

  120 binary_expression: binary_expression '[' expression ']' .

    $default  reduce using rule 120 (binary_expression)


State 288

  205 call_expression: function_id_or_pointer '(' @24 parameter_list . closing_paren

    ')'  shift, and go to state 310

    closing_paren  go to state 317


State 289

   41 optional_description: T_STRING .

    $default  reduce using rule 41 (optional_description)


State 290

   36 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description .

    $default  reduce using rule 36 (macrostart)


State 291

   45 non_empty_arguments: non_empty_arguments ',' argument_declaration .

    $default  reduce using rule 45 (non_empty_arguments)


State 292

  178 for_to_clause: '(' opt_for_initializer . $@13 ';' binary_expression ';' $@14 for_increment $@15 ')'

    $default  reduce using rule 175 ($@13)

    $@13  go to state 318


State 293

  181 opt_for_initializer: type_name . variable_identifier $@16 assignment_expression
  186 in_clause: '(' type_name . variable_identifier $@17 ':' expression ')'

    T_IDENT   shift, and go to state 37
    T_NUM     shift, and go to state 38
    T_STRING  shift, and go to state 39

    variable_identifier  go to state 319


State 294

  172 for_loop_expression: T_FOR for_clause $@12 . local_block

    error              shift, and go to state 169
    T_FOR              shift, and go to state 170
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 171
    T_FUNC             shift, and go to state 86
    T_IF               shift, and go to state 172
    T_WHILE            shift, and go to state 173
    T_GOTO             shift, and go to state 174
    T_SWITCH           shift, and go to state 175
    T_BREAK            shift, and go to state 176
    T_CONTINUE         shift, and go to state 177
    T_RETURN           shift, and go to state 178
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 92
    '['                shift, and go to state 93
    ';'                shift, and go to state 179
    '{'                shift, and go to state 320

    variable_reference      go to state 181
    var_decl                go to state 267
    block                   go to state 183
    statement               go to state 321
    assignment              go to state 185
    shorthand_assignment    go to state 186
    assignment_target       go to state 187
    increment_expression    go to state 188
    break                   go to state 189
    continue                go to state 190
    return_expression       go to state 191
    label                   go to state 192
    goto_expression         go to state 193
    switch_expression       go to state 194
    for_loop_expression     go to state 195
    while                   go to state 196
    local_block             go to state 322
    if_expression           go to state 197
    call_expression         go to state 199
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 295

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression
  144 condition: '(' binary_expression . ')'
  145          | '(' binary_expression .

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155
    ')'            shift, and go to state 323

    '*'       [reduce using rule 145 (condition)]
    '['       [reduce using rule 145 (condition)]
    $default  reduce using rule 145 (condition)


State 296

  195 if_expression: T_IF condition $@20 . local_block $@21 else_clause

    error              shift, and go to state 169
    T_FOR              shift, and go to state 170
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 171
    T_FUNC             shift, and go to state 86
    T_IF               shift, and go to state 172
    T_WHILE            shift, and go to state 173
    T_GOTO             shift, and go to state 174
    T_SWITCH           shift, and go to state 175
    T_BREAK            shift, and go to state 176
    T_CONTINUE         shift, and go to state 177
    T_RETURN           shift, and go to state 178
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 92
    '['                shift, and go to state 93
    ';'                shift, and go to state 179
    '{'                shift, and go to state 320

    variable_reference      go to state 181
    var_decl                go to state 267
    block                   go to state 183
    statement               go to state 321
    assignment              go to state 185
    shorthand_assignment    go to state 186
    assignment_target       go to state 187
    increment_expression    go to state 188
    break                   go to state 189
    continue                go to state 190
    return_expression       go to state 191
    label                   go to state 192
    goto_expression         go to state 193
    switch_expression       go to state 194
    for_loop_expression     go to state 195
    while                   go to state 196
    local_block             go to state 324
    if_expression           go to state 197
    call_expression         go to state 199
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 297

  189 while: T_WHILE $@18 condition . $@19 local_block

    $default  reduce using rule 188 ($@19)

    $@19  go to state 325


State 298

  149 value: T_IDENT .

    $default  reduce using rule 149 (value)


State 299

  170 switch_expression: T_SWITCH '(' value . ')' $@11 '{' case_clauses '}'

    ')'  shift, and go to state 326


State 300

  152 break: T_BREAK opt_num ';' .

    $default  reduce using rule 152 (break)


State 301

  153 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 153 (continue)


State 302

   95 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 95 (shorthand_assignment_operator)


State 303

   96 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 96 (shorthand_assignment_operator)


State 304

   92 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 92 (shorthand_assignment_operator)


State 305

   93 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 93 (shorthand_assignment_operator)


State 306

   94 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 94 (shorthand_assignment_operator)


State 307

   90 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator . expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    $default  reduce using rule 100 (range_expression)

    variable_reference      go to state 96
    expression              go to state 327
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 308

   87 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155
    ']'            shift, and go to state 328


State 309

   86 assignment: assignment_target '.' T_IDENT . $@8 assignment_expression

    $default  reduce using rule 85 ($@8)

    $@8  go to state 329


State 310

  201 closing_paren: ')' .

    $default  reduce using rule 201 (closing_paren)


State 311

  203 call_expression: T_FUNC '(' @23 parameter_list closing_paren .

    $default  reduce using rule 203 (call_expression)


State 312

   49 non_empty_parameters: non_empty_parameters ',' parameter .

    $default  reduce using rule 49 (non_empty_parameters)


State 313

  217 map_associate: T_STRING ':' @27 . value

    T_IDENT                  shift, and go to state 298
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_VARIABLE               shift, and go to state 159
    '-'                      shift, and go to state 68

    value              go to state 330
    string             go to state 104
    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 110


State 314

  215 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 215 (map_associates)


State 315

  104 range_increment: T_DOTDOT . binary_expression

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 331
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 316

  102 range_expression: binary_expression T_DOTDOT binary_expression $@10 range_increment .

    $default  reduce using rule 102 (range_expression)


State 317

  205 call_expression: function_id_or_pointer '(' @24 parameter_list closing_paren .

    $default  reduce using rule 205 (call_expression)


State 318

  178 for_to_clause: '(' opt_for_initializer $@13 . ';' binary_expression ';' $@14 for_increment $@15 ')'

    ';'  shift, and go to state 332


State 319

  181 opt_for_initializer: type_name variable_identifier . $@16 assignment_expression
  186 in_clause: '(' type_name variable_identifier . $@17 ':' expression ')'

    ':'       reduce using rule 185 ($@17)
    $default  reduce using rule 180 ($@16)

    $@16  go to state 333
    $@17  go to state 334


State 320

   65 block: '{' . var_decls stmntlist closing_brace
  191 local_block: '{' . stmntlist closing_brace
  211 map_constructor: '{' . @26 optional_map_associates '}'

    error              shift, and go to state 169
    T_FOR              shift, and go to state 170
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 171
    T_FUNC             shift, and go to state 86
    T_IF               shift, and go to state 172
    T_WHILE            shift, and go to state 173
    T_GOTO             shift, and go to state 174
    T_SWITCH           shift, and go to state 175
    T_BREAK            shift, and go to state 176
    T_CONTINUE         shift, and go to state 177
    T_RETURN           shift, and go to state 178
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 92
    '['                shift, and go to state 93
    ';'                shift, and go to state 179
    '{'                shift, and go to state 180

    error              [reduce using rule 66 (var_decls)]
    T_FOR              [reduce using rule 66 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 66 (var_decls)]
    T_IDENT            [reduce using rule 66 (var_decls)]
    T_STRING           reduce using rule 210 (@26)
    T_FUNC             [reduce using rule 66 (var_decls)]
    T_IF               [reduce using rule 66 (var_decls)]
    T_WHILE            [reduce using rule 66 (var_decls)]
    T_GOTO             [reduce using rule 66 (var_decls)]
    T_SWITCH           [reduce using rule 66 (var_decls)]
    T_BREAK            [reduce using rule 66 (var_decls)]
    T_CONTINUE         [reduce using rule 66 (var_decls)]
    T_RETURN           [reduce using rule 66 (var_decls)]
    T_VARIABLE         [reduce using rule 66 (var_decls)]
    '*'                [reduce using rule 66 (var_decls)]
    '['                [reduce using rule 66 (var_decls)]
    ';'                [reduce using rule 66 (var_decls)]
    '{'                [reduce using rule 66 (var_decls)]
    '}'                reduce using rule 66 (var_decls)
    '}'                [reduce using rule 199 (stmntlist)]
    '}'                [reduce using rule 210 (@26)]

    variable_reference      go to state 181
    var_decl                go to state 267
    block                   go to state 183
    var_decls               go to state 117
    statement               go to state 184
    assignment              go to state 185
    shorthand_assignment    go to state 186
    assignment_target       go to state 187
    increment_expression    go to state 188
    break                   go to state 189
    continue                go to state 190
    return_expression       go to state 191
    label                   go to state 192
    goto_expression         go to state 193
    switch_expression       go to state 194
    for_loop_expression     go to state 195
    while                   go to state 196
    if_expression           go to state 197
    stmntlist               go to state 335
    call_expression         go to state 199
    array_constructor       go to state 106
    map_constructor         go to state 107
    @26                     go to state 130
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 321

  190 local_block: statement .

    $default  reduce using rule 190 (local_block)


State 322

  172 for_loop_expression: T_FOR for_clause $@12 local_block .

    $default  reduce using rule 172 (for_loop_expression)


State 323

  144 condition: '(' binary_expression ')' .

    $default  reduce using rule 144 (condition)


State 324

  195 if_expression: T_IF condition $@20 local_block . $@21 else_clause

    $default  reduce using rule 194 ($@21)

    $@21  go to state 336


State 325

  189 while: T_WHILE $@18 condition $@19 . local_block

    error              shift, and go to state 169
    T_FOR              shift, and go to state 170
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 171
    T_FUNC             shift, and go to state 86
    T_IF               shift, and go to state 172
    T_WHILE            shift, and go to state 173
    T_GOTO             shift, and go to state 174
    T_SWITCH           shift, and go to state 175
    T_BREAK            shift, and go to state 176
    T_CONTINUE         shift, and go to state 177
    T_RETURN           shift, and go to state 178
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 92
    '['                shift, and go to state 93
    ';'                shift, and go to state 179
    '{'                shift, and go to state 320

    variable_reference      go to state 181
    var_decl                go to state 267
    block                   go to state 183
    statement               go to state 321
    assignment              go to state 185
    shorthand_assignment    go to state 186
    assignment_target       go to state 187
    increment_expression    go to state 188
    break                   go to state 189
    continue                go to state 190
    return_expression       go to state 191
    label                   go to state 192
    goto_expression         go to state 193
    switch_expression       go to state 194
    for_loop_expression     go to state 195
    while                   go to state 196
    local_block             go to state 337
    if_expression           go to state 197
    call_expression         go to state 199
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 326

  170 switch_expression: T_SWITCH '(' value ')' . $@11 '{' case_clauses '}'

    $default  reduce using rule 169 ($@11)

    $@11  go to state 338


State 327

   90 shorthand_assignment: variable_reference $@9 shorthand_assignment_operator expression .

    $default  reduce using rule 90 (shorthand_assignment)


State 328

   87 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 58

    assignment_expression  go to state 339


State 329

   86 assignment: assignment_target '.' T_IDENT $@8 . assignment_expression

    T_ASSIGN  shift, and go to state 58

    assignment_expression  go to state 340


State 330

  217 map_associate: T_STRING ':' @27 value .

    $default  reduce using rule 217 (map_associate)


State 331

  104 range_increment: T_DOTDOT binary_expression .
  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 104 (range_increment)


State 332

  178 for_to_clause: '(' opt_for_initializer $@13 ';' . binary_expression ';' $@14 for_increment $@15 ')'

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    variable_reference      go to state 96
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 341
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 333

  181 opt_for_initializer: type_name variable_identifier $@16 . assignment_expression

    T_ASSIGN  shift, and go to state 58

    assignment_expression  go to state 342


State 334

  186 in_clause: '(' type_name variable_identifier $@17 . ':' expression ')'

    ':'  shift, and go to state 343


State 335

  191 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 275

    closing_brace  go to state 344


State 336

  195 if_expression: T_IF condition $@20 local_block $@21 . else_clause

    T_ELSE  shift, and go to state 345

    T_ELSE    [reduce using rule 196 (else_clause)]
    $default  reduce using rule 196 (else_clause)

    else_clause  go to state 346


State 337

  189 while: T_WHILE $@18 condition $@19 local_block .

    $default  reduce using rule 189 (while)


State 338

  170 switch_expression: T_SWITCH '(' value ')' $@11 . '{' case_clauses '}'

    '{'  shift, and go to state 347


State 339

   87 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 87 (assignment)


State 340

   86 assignment: assignment_target '.' T_IDENT $@8 assignment_expression .

    $default  reduce using rule 86 (assignment)


State 341

  118 binary_expression: binary_expression . '.' T_IDENT
  120                  | binary_expression . '[' expression ']'
  121                  | binary_expression . '~' binary_expression
  122                  | binary_expression . T_NMATCH binary_expression
  123                  | binary_expression . '&' binary_expression
  124                  | binary_expression . '|' binary_expression
  125                  | binary_expression . '+' binary_expression
  126                  | binary_expression . '^' binary_expression
  127                  | binary_expression . '-' binary_expression
  128                  | binary_expression . '*' binary_expression
  129                  | binary_expression . '/' binary_expression
  130                  | binary_expression . '%' binary_expression
  131                  | binary_expression . T_SHIFT_LEFT binary_expression
  132                  | binary_expression . T_SHIFT_RIGHT binary_expression
  133                  | binary_expression . T_POWER_TO binary_expression
  134                  | binary_expression . T_AND binary_expression
  135                  | binary_expression . T_OR binary_expression
  136                  | binary_expression . '<' binary_expression
  137                  | binary_expression . '>' binary_expression
  138                  | binary_expression . T_LE binary_expression
  139                  | binary_expression . T_GE binary_expression
  140                  | binary_expression . T_EQ binary_expression
  141                  | binary_expression . T_NE binary_expression
  178 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression . ';' $@14 for_increment $@15 ')'

    T_NMATCH       shift, and go to state 133
    T_NE           shift, and go to state 134
    T_EQ           shift, and go to state 135
    T_SHIFT_LEFT   shift, and go to state 136
    T_SHIFT_RIGHT  shift, and go to state 137
    T_OR           shift, and go to state 138
    T_AND          shift, and go to state 139
    T_LE           shift, and go to state 140
    T_GE           shift, and go to state 141
    T_POWER_TO     shift, and go to state 142
    '&'            shift, and go to state 143
    '|'            shift, and go to state 144
    '^'            shift, and go to state 145
    '~'            shift, and go to state 146
    '<'            shift, and go to state 147
    '>'            shift, and go to state 148
    '+'            shift, and go to state 149
    '-'            shift, and go to state 150
    '*'            shift, and go to state 151
    '/'            shift, and go to state 152
    '%'            shift, and go to state 153
    '['            shift, and go to state 154
    '.'            shift, and go to state 155
    ';'            shift, and go to state 348


State 342

  181 opt_for_initializer: type_name variable_identifier $@16 assignment_expression .

    $default  reduce using rule 181 (opt_for_initializer)


State 343

  186 in_clause: '(' type_name variable_identifier $@17 ':' . expression ')'

    T_NEW                    shift, and go to state 83
    T_IDENT                  shift, and go to state 84
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 85
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 86
    T_VARIABLE               shift, and go to state 87
    '!'                      shift, and go to state 88
    '~'                      shift, and go to state 89
    '+'                      shift, and go to state 90
    '-'                      shift, and go to state 91
    '*'                      shift, and go to state 92
    '['                      shift, and go to state 93
    '('                      shift, and go to state 94
    '{'                      shift, and go to state 95

    $default  reduce using rule 100 (range_expression)

    variable_reference      go to state 96
    expression              go to state 349
    range_expression        go to state 98
    simple_term             go to state 99
    constructor_expression  go to state 100
    unary_expression        go to state 101
    binary_expression       go to state 102
    value                   go to state 103
    string                  go to state 104
    call_expression         go to state 105
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_cast               go to state 109
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 110


State 344

  191 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 191 (local_block)


State 345

  198 else_clause: T_ELSE . $@22 local_block

    $default  reduce using rule 197 ($@22)

    $@22  go to state 350


State 346

  195 if_expression: T_IF condition $@20 local_block $@21 else_clause .

    $default  reduce using rule 195 (if_expression)


State 347

  170 switch_expression: T_SWITCH '(' value ')' $@11 '{' . case_clauses '}'

    T_CASE     shift, and go to state 351
    T_DEFAULT  shift, and go to state 352

    $default  reduce using rule 159 (case_clauses)

    case_clauses   go to state 353
    case_clause    go to state 354
    case_selector  go to state 355


State 348

  178 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' . $@14 for_increment $@15 ')'

    $default  reduce using rule 176 ($@14)

    $@14  go to state 356


State 349

  186 in_clause: '(' type_name variable_identifier $@17 ':' expression . ')'

    ')'  shift, and go to state 357


State 350

  198 else_clause: T_ELSE $@22 . local_block

    error              shift, and go to state 169
    T_FOR              shift, and go to state 170
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 171
    T_FUNC             shift, and go to state 86
    T_IF               shift, and go to state 172
    T_WHILE            shift, and go to state 173
    T_GOTO             shift, and go to state 174
    T_SWITCH           shift, and go to state 175
    T_BREAK            shift, and go to state 176
    T_CONTINUE         shift, and go to state 177
    T_RETURN           shift, and go to state 178
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 92
    '['                shift, and go to state 93
    ';'                shift, and go to state 179
    '{'                shift, and go to state 320

    variable_reference      go to state 181
    var_decl                go to state 267
    block                   go to state 183
    statement               go to state 321
    assignment              go to state 185
    shorthand_assignment    go to state 186
    assignment_target       go to state 187
    increment_expression    go to state 188
    break                   go to state 189
    continue                go to state 190
    return_expression       go to state 191
    label                   go to state 192
    goto_expression         go to state 193
    switch_expression       go to state 194
    for_loop_expression     go to state 195
    while                   go to state 196
    local_block             go to state 358
    if_expression           go to state 197
    call_expression         go to state 199
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 351

  162 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 359
    T_STRING  shift, and go to state 360
    '-'       shift, and go to state 68

    case_condition   go to state 361
    integer_literal  go to state 362


State 352

  163 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 363


State 353

  170 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses . '}'

    '}'  shift, and go to state 364


State 354

  160 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 351
    T_DEFAULT  shift, and go to state 352

    $default  reduce using rule 159 (case_clauses)

    case_clauses   go to state 365
    case_clause    go to state 354
    case_selector  go to state 355


State 355

  161 case_clause: case_selector . stmntlist

    error              shift, and go to state 169
    T_FOR              shift, and go to state 170
    T_TYPE_IDENTIFIER  shift, and go to state 27
    T_IDENT            shift, and go to state 171
    T_FUNC             shift, and go to state 86
    T_IF               shift, and go to state 172
    T_WHILE            shift, and go to state 173
    T_GOTO             shift, and go to state 174
    T_SWITCH           shift, and go to state 175
    T_BREAK            shift, and go to state 176
    T_CONTINUE         shift, and go to state 177
    T_RETURN           shift, and go to state 178
    T_VARIABLE         shift, and go to state 124
    '*'                shift, and go to state 92
    '['                shift, and go to state 93
    ';'                shift, and go to state 179
    '{'                shift, and go to state 180

    T_CASE     reduce using rule 199 (stmntlist)
    T_DEFAULT  reduce using rule 199 (stmntlist)
    '}'        reduce using rule 199 (stmntlist)

    variable_reference      go to state 181
    var_decl                go to state 267
    block                   go to state 183
    statement               go to state 184
    assignment              go to state 185
    shorthand_assignment    go to state 186
    assignment_target       go to state 187
    increment_expression    go to state 188
    break                   go to state 189
    continue                go to state 190
    return_expression       go to state 191
    label                   go to state 192
    goto_expression         go to state 193
    switch_expression       go to state 194
    for_loop_expression     go to state 195
    while                   go to state 196
    if_expression           go to state 197
    stmntlist               go to state 366
    call_expression         go to state 199
    array_constructor       go to state 106
    map_constructor         go to state 107
    function_id_or_pointer  go to state 108
    type_name               go to state 29


State 356

  178 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 . for_increment $@15 ')'

    T_IDENT     shift, and go to state 123
    T_VARIABLE  shift, and go to state 124

    variable_reference    go to state 367
    shorthand_assignment  go to state 368
    increment_expression  go to state 369
    for_increment         go to state 370


State 357

  186 in_clause: '(' type_name variable_identifier $@17 ':' expression ')' .

    $default  reduce using rule 186 (in_clause)


State 358

  198 else_clause: T_ELSE $@22 local_block .

    $default  reduce using rule 198 (else_clause)


State 359

  166 case_condition: T_NUM . T_DOTDOT T_NUM
  230 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 371

    $default  reduce using rule 230 (integer_literal)


State 360

  165 case_condition: T_STRING .

    $default  reduce using rule 165 (case_condition)


State 361

  162 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 372


State 362

  164 case_condition: integer_literal .

    $default  reduce using rule 164 (case_condition)


State 363

  163 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 163 (case_selector)


State 364

  170 switch_expression: T_SWITCH '(' value ')' $@11 '{' case_clauses '}' .

    $default  reduce using rule 170 (switch_expression)


State 365

  160 case_clauses: case_clause case_clauses .

    $default  reduce using rule 160 (case_clauses)


State 366

  161 case_clause: case_selector stmntlist .

    $default  reduce using rule 161 (case_clause)


State 367

   90 shorthand_assignment: variable_reference . $@9 shorthand_assignment_operator expression
  107 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 261
    T_MINUSMINUS  shift, and go to state 262

    $default  reduce using rule 89 ($@9)

    $@9                  go to state 263
    minusminus_plusplus  go to state 265


State 368

  174 for_increment: shorthand_assignment .

    $default  reduce using rule 174 (for_increment)


State 369

  173 for_increment: increment_expression .

    $default  reduce using rule 173 (for_increment)


State 370

  178 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment . $@15 ')'

    $default  reduce using rule 177 ($@15)

    $@15  go to state 373


State 371

  166 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 374


State 372

  162 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 162 (case_selector)


State 373

  178 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 . ')'

    ')'  shift, and go to state 375


State 374

  166 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 166 (case_condition)


State 375

  178 for_to_clause: '(' opt_for_initializer $@13 ';' binary_expression ';' $@14 for_increment $@15 ')' .

    $default  reduce using rule 178 (for_to_clause)
