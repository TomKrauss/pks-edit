State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 60 conflicts: 9 shift/reduce
State 107 conflicts: 24 shift/reduce
State 132 conflicts: 1 reduce/reduce
State 184 conflicts: 1 reduce/reduce
State 186 conflicts: 1 shift/reduce
State 205 conflicts: 1 reduce/reduce
State 218 conflicts: 23 shift/reduce
State 242 conflicts: 1 reduce/reduce
State 288 conflicts: 1 shift/reduce
State 297 conflicts: 2 shift/reduce
State 322 conflicts: 17 shift/reduce, 2 reduce/reduce
State 338 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter macro_definitions

    3 header_delimiter: %empty
    4                 | '!'

    5 macro_definitions: %empty
    6                  | element_with_annotations macro_definitions

    7 element_with_annotations: annotations macro_or_native_function

    8 macro_or_native_function: native_function_definition ';'
    9                         | macro_definition

   10 namespace: %empty
   11          | T_NAMESPACE T_IDENT ';'

   12 prerequisites: %empty
   13              | prerequisites require

   14 require: T_REQUIRE T_STRING ';'

   15 global_declarations: %empty
   16                    | global_declarations constants ';'
   17                    | global_declarations global_var ';'

   18 scope: %empty
   19      | T_STATIC

   20 constants: T_CONST constant_list

   21 constant_list: constdef
   22              | constant_list ',' constdef

   23 $@2: %empty

   24 $@3: %empty

   25 constdef: $@2 variable_identifier T_ASSIGN constant_literal $@3

   26 constant_literal: simple_literal
   27                 | T_STRING

   28 variable_identifier: T_IDENT
   29                    | T_NUM
   30                    | T_STRING

   31 variable_reference: T_VARIABLE
   32                   | T_IDENT

   33 macro_declaration: T_IDENT
   34                  | T_FUNC

   35 macro_type: scope T_VOID
   36           | scope type_name

   37 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description

   38 global_var: scope var_decl

   39 var_decl: type_name variable_identifier assignment_expression
   40         | type_name variable_identifier

   41 optional_description: %empty
   42                     | T_STRING

   43 argument_list: %empty
   44              | non_empty_arguments

   45 non_empty_arguments: argument_declaration
   46                    | non_empty_arguments ',' argument_declaration

   47 parameter_list: %empty
   48               | non_empty_parameters

   49 non_empty_parameters: parameter
   50                     | non_empty_parameters ',' parameter
   51                     | error

   52 argument_declaration: type_name variable_identifier
   53                     | T_ELLIPSIS

   54 annotations: %empty
   55            | annotation annotations

   56 $@4: %empty

   57 annotation: T_ANNOTATION $@4 '(' annotation_values ')'

   58 annotation_value: T_IDENT T_ASSIGN T_STRING
   59                 | T_IDENT
   60                 | T_STRING

   61 annotation_values: %empty
   62                  | annotation_value
   63                  | annotation_value ',' annotation_values

   64 $@5: %empty

   65 native_function_definition: T_NATIVE $@5 macrostart

   66 $@6: %empty

   67 macro_definition: $@6 macrostart block

   68 block: '{' var_decls stmntlist closing_brace

   69 var_decls: %empty
   70          | var_decls var_decl ';'

   71 statement: ';'
   72          | call_expression ';'
   73          | assignment ';'
   74          | if_expression
   75          | while
   76          | for_loop_expression
   77          | switch_expression
   78          | break
   79          | continue
   80          | return_expression ';'
   81          | goto_expression ';'
   82          | block
   83          | increment_expression ';'
   84          | label
   85          | var_decl
   86          | error ';'

   87 assignment: variable_reference assignment_expression

   88 $@7: %empty

   89 assignment: assignment_target '.' T_IDENT $@7 assignment_expression
   90           | assignment_target '[' binary_expression ']' assignment_expression
   91           | shorthand_assignment

   92 $@8: %empty

   93 shorthand_assignment: variable_reference $@8 shorthand_assignment_operator expression

   94 assignment_target: variable_reference

   95 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   96                              | T_SH_ASSIGN_DIV
   97                              | T_SH_ASSIGN_MOD
   98                              | T_SH_ASSIGN_PLUS
   99                              | T_SH_ASSIGN_MINUS

  100 assignment_expression: T_ASSIGN expression

  101 expression: binary_expression
  102           | range_expression

  103 range_expression: %empty

  104 $@9: %empty

  105 range_expression: binary_expression T_DOTDOT binary_expression $@9 range_increment

  106 range_increment: %empty
  107                | T_DOTDOT binary_expression

  108 minusminus_plusplus: T_MINUSMINUS
  109                    | T_PLUSPLUS

  110 increment_expression: variable_reference minusminus_plusplus

  111 simple_term: value
  112            | call_expression
  113            | constructor_expression

  114 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  115 unary_expression: '!' binary_expression
  116                 | '~' binary_expression
  117                 | '+' binary_expression
  118                 | '-' variable_reference

  119 binary_expression: simple_term
  120                  | type_cast simple_term
  121                  | binary_expression '.' T_IDENT
  122                  | unary_expression
  123                  | binary_expression '[' expression ']'
  124                  | binary_expression '~' binary_expression
  125                  | binary_expression T_NMATCH binary_expression
  126                  | binary_expression '&' binary_expression
  127                  | binary_expression '|' binary_expression
  128                  | binary_expression '+' binary_expression
  129                  | binary_expression '^' binary_expression
  130                  | binary_expression '-' binary_expression
  131                  | binary_expression '*' binary_expression
  132                  | binary_expression '/' binary_expression
  133                  | binary_expression '%' binary_expression
  134                  | binary_expression T_SHIFT_LEFT binary_expression
  135                  | binary_expression T_SHIFT_RIGHT binary_expression
  136                  | binary_expression T_POWER_TO binary_expression
  137                  | binary_expression T_AND binary_expression
  138                  | binary_expression T_OR binary_expression
  139                  | binary_expression '<' binary_expression
  140                  | binary_expression '>' binary_expression
  141                  | binary_expression T_LE binary_expression
  142                  | binary_expression T_GE binary_expression
  143                  | binary_expression T_EQ binary_expression
  144                  | binary_expression T_NE binary_expression
  145                  | '(' binary_expression ')'
  146                  | variable_reference assignment_expression

  147 condition: '(' binary_expression ')'
  148          | '(' binary_expression

  149 value: T_VARIABLE
  150      | string
  151      | simple_literal
  152      | T_IDENT

  153 string: T_STRING
  154       | string T_STRING

  155 break: T_BREAK opt_num ';'

  156 continue: T_CONTINUE opt_num ';'

  157 return_expression: T_RETURN optional_bterm

  158 optional_bterm: %empty
  159               | binary_expression

  160 opt_num: %empty
  161        | T_NUM

  162 case_clauses: %empty
  163             | case_clause case_clauses

  164 case_clause: case_selector stmntlist

  165 case_selector: T_CASE case_condition ':'
  166              | T_DEFAULT ':'

  167 case_condition: integer_literal
  168               | T_STRING
  169               | T_NUM T_DOTDOT T_NUM

  170 label: T_IDENT ':'

  171 goto_expression: T_GOTO T_IDENT

  172 $@10: %empty

  173 switch_expression: T_SWITCH '(' value ')' $@10 '{' case_clauses '}'

  174 $@11: %empty

  175 for_loop_expression: T_FOR for_clause $@11 local_block

  176 for_increment: increment_expression
  177              | shorthand_assignment

  178 $@12: %empty

  179 $@13: %empty

  180 $@14: %empty

  181 for_to_clause: '(' opt_for_initializer $@12 ';' binary_expression ';' $@13 for_increment $@14 ')'

  182 opt_for_initializer: %empty

  183 $@15: %empty

  184 opt_for_initializer: type_name variable_identifier $@15 assignment_expression

  185 for_clause: for_to_clause
  186           | in_clause
  187           | error

  188 $@16: %empty

  189 in_clause: '(' type_name variable_identifier $@16 ':' expression ')'

  190 $@17: %empty

  191 $@18: %empty

  192 while: T_WHILE $@17 condition $@18 local_block

  193 local_block: statement
  194            | '{' stmntlist closing_brace

  195 closing_brace: '}'

  196 $@19: %empty

  197 $@20: %empty

  198 if_expression: T_IF condition $@19 local_block $@20 else_clause

  199 else_clause: %empty

  200 $@21: %empty

  201 else_clause: T_ELSE $@21 local_block

  202 stmntlist: %empty
  203          | statement stmntlist

  204 closing_paren: ')'

  205 @22: %empty

  206 call_expression: T_FUNC '(' @22 parameter_list closing_paren

  207 @23: %empty

  208 call_expression: function_id_or_pointer '(' @23 parameter_list closing_paren
  209                | array_constructor
  210                | map_constructor

  211 @24: %empty

  212 array_constructor: '[' @24 parameter_list ']'

  213 @25: %empty

  214 map_constructor: '{' @25 optional_map_associates '}'

  215 optional_map_associates: %empty
  216                        | map_associates

  217 map_associates: map_associate
  218               | map_associates ',' map_associate

  219 @26: %empty

  220 map_associate: T_STRING ':' @26 value

  221 function_id_or_pointer: '*' variable_reference
  222                       | T_IDENT

  223 parameter: expression
  224          | T_ELLIPSIS expression

  225 type_cast: '(' type_name ')'

  226 type_name: T_TYPE_IDENTIFIER
  227          | T_TYPE_IDENTIFIER array_size

  228 array_size: '[' ']'
  229           | '[' T_NUM ']'

  230 boolean_literal: T_TRUE
  231                | T_FALSE

  232 float_literal: T_FLOATING_POINT_NUMBER

  233 integer_literal: T_NUM
  234                | '-' T_NUM

  235 character_literal: T_CHARACTER

  236 simple_literal: integer_literal
  237               | float_literal
  238               | character_literal
  239               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 4 115
    '%' (37) 133
    '&' (38) 126
    '(' (40) 37 57 114 145 147 148 173 181 189 206 208 225
    ')' (41) 37 57 114 145 147 173 181 189 204 225
    '*' (42) 131 221
    '+' (43) 117 128
    ',' (44) 22 46 50 63 218
    '-' (45) 118 130 234
    '.' (46) 89 121
    '/' (47) 132
    ':' (58) 165 166 170 189 220
    ';' (59) 8 11 14 16 17 70 71 72 73 80 81 83 86 155 156 181
    '<' (60) 139
    '>' (62) 140
    '[' (91) 90 123 212 228 229
    ']' (93) 90 123 212 228 229
    '^' (94) 129
    '{' (123) 68 173 194 214
    '|' (124) 127
    '}' (125) 173 195 214
    '~' (126) 116 124
    error (256) 51 86 187
    T_NAMESPACE (258) 11
    T_REQUIRE (259) 14
    T_FOR (260) 175
    T_ANNOTATION (261) 57
    T_NATIVE (262) 65
    T_NEW (263) 114
    T_STATIC (264) 19
    T_VOID (265) 35
    T_TYPE_IDENTIFIER (266) 114 226 227
    T_ELLIPSIS (267) 53 224
    T_IDENT (268) 11 28 32 33 58 59 89 121 152 170 171 222
    T_NUM (269) 29 161 169 229 233 234
    T_FLOATING_POINT_NUMBER (270) 232
    T_STRING (271) 14 27 30 42 58 60 153 154 168 220
    T_CHARACTER (272) 235
    T_CONST (273) 20
    T_TRUE (274) 230
    T_FALSE (275) 231
    T_FUNC (276) 34 206
    T_DOTDOT (277) 105 107 169
    T_PLUSPLUS (278) 109
    T_MINUSMINUS (279) 108
    T_IF (280) 198
    T_ELSE (281) 201
    T_WHILE (282) 192
    T_GOTO (283) 171
    T_SH_ASSIGN_PLUS (284) 98
    T_SH_ASSIGN_MINUS (285) 99
    T_SH_ASSIGN_MULT (286) 95
    T_SH_ASSIGN_DIV (287) 96
    T_SH_ASSIGN_MOD (288) 97
    T_SWITCH (289) 173
    T_CASE (290) 165
    T_DEFAULT (291) 166
    T_BREAK (292) 155
    T_CONTINUE (293) 156
    T_RETURN (294) 157
    T_VARIABLE (295) 31 149
    T_NMATCH (296) 125
    T_ASSIGN (297) 25 58 100
    T_NE (298) 144
    T_EQ (299) 143
    T_SHIFT_LEFT (300) 134
    T_SHIFT_RIGHT (301) 135
    T_OR (302) 138
    T_AND (303) 137
    T_LE (304) 141
    T_GE (305) 142
    T_POWER_TO (306) 136


Nonterminals, with rules where they appear

    $accept (74)
        on left: 0
    file_structure (75)
        on left: 2
        on right: 0
    $@1 (76)
        on left: 1
        on right: 2
    header_delimiter (77)
        on left: 3 4
        on right: 2
    macro_definitions (78)
        on left: 5 6
        on right: 2 6
    element_with_annotations (79)
        on left: 7
        on right: 6
    macro_or_native_function (80)
        on left: 8 9
        on right: 7
    namespace (81)
        on left: 10 11
        on right: 2
    prerequisites (82)
        on left: 12 13
        on right: 2 13
    require (83)
        on left: 14
        on right: 13
    global_declarations (84)
        on left: 15 16 17
        on right: 2 16 17
    scope (85)
        on left: 18 19
        on right: 35 36 38
    constants (86)
        on left: 20
        on right: 16
    constant_list (87)
        on left: 21 22
        on right: 20 22
    constdef (88)
        on left: 25
        on right: 21 22
    $@2 (89)
        on left: 23
        on right: 25
    $@3 (90)
        on left: 24
        on right: 25
    constant_literal (91)
        on left: 26 27
        on right: 25
    variable_identifier (92)
        on left: 28 29 30
        on right: 25 39 40 52 184 189
    variable_reference (93)
        on left: 31 32
        on right: 87 93 94 110 118 146 221
    macro_declaration (94)
        on left: 33 34
        on right: 37
    macro_type (95)
        on left: 35 36
        on right: 37
    macrostart (96)
        on left: 37
        on right: 65 67
    global_var (97)
        on left: 38
        on right: 17
    var_decl (98)
        on left: 39 40
        on right: 38 70 85
    optional_description (99)
        on left: 41 42
        on right: 37
    argument_list (100)
        on left: 43 44
        on right: 37
    non_empty_arguments (101)
        on left: 45 46
        on right: 44 46
    parameter_list (102)
        on left: 47 48
        on right: 206 208 212
    non_empty_parameters (103)
        on left: 49 50 51
        on right: 48 50
    argument_declaration (104)
        on left: 52 53
        on right: 45 46
    annotations (105)
        on left: 54 55
        on right: 7 55
    annotation (106)
        on left: 57
        on right: 55
    $@4 (107)
        on left: 56
        on right: 57
    annotation_value (108)
        on left: 58 59 60
        on right: 62 63
    annotation_values (109)
        on left: 61 62 63
        on right: 57 63
    native_function_definition (110)
        on left: 65
        on right: 8
    $@5 (111)
        on left: 64
        on right: 65
    macro_definition (112)
        on left: 67
        on right: 9
    $@6 (113)
        on left: 66
        on right: 67
    block (114)
        on left: 68
        on right: 67 82
    var_decls (115)
        on left: 69 70
        on right: 68 70
    statement (116)
        on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
        on right: 193 203
    assignment (117)
        on left: 87 89 90 91
        on right: 73
    $@7 (118)
        on left: 88
        on right: 89
    shorthand_assignment (119)
        on left: 93
        on right: 91 177
    $@8 (120)
        on left: 92
        on right: 93
    assignment_target (121)
        on left: 94
        on right: 89 90
    shorthand_assignment_operator (122)
        on left: 95 96 97 98 99
        on right: 93
    assignment_expression (123)
        on left: 100
        on right: 39 87 89 90 146 184
    expression (124)
        on left: 101 102
        on right: 93 100 123 189 223 224
    range_expression (125)
        on left: 103 105
        on right: 102
    $@9 (126)
        on left: 104
        on right: 105
    range_increment (127)
        on left: 106 107
        on right: 105
    minusminus_plusplus (128)
        on left: 108 109
        on right: 110
    increment_expression (129)
        on left: 110
        on right: 83 176
    simple_term (130)
        on left: 111 112 113
        on right: 119 120
    constructor_expression (131)
        on left: 114
        on right: 113
    unary_expression (132)
        on left: 115 116 117 118
        on right: 122
    binary_expression (133)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146
        on right: 90 101 105 107 115 116 117 121 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 147 148 159 181
    condition (134)
        on left: 147 148
        on right: 192 198
    value (135)
        on left: 149 150 151 152
        on right: 111 173 220
    string (136)
        on left: 153 154
        on right: 150 154
    break (137)
        on left: 155
        on right: 78
    continue (138)
        on left: 156
        on right: 79
    return_expression (139)
        on left: 157
        on right: 80
    optional_bterm (140)
        on left: 158 159
        on right: 157
    opt_num (141)
        on left: 160 161
        on right: 155 156
    case_clauses (142)
        on left: 162 163
        on right: 163 173
    case_clause (143)
        on left: 164
        on right: 163
    case_selector (144)
        on left: 165 166
        on right: 164
    case_condition (145)
        on left: 167 168 169
        on right: 165
    label (146)
        on left: 170
        on right: 84
    goto_expression (147)
        on left: 171
        on right: 81
    switch_expression (148)
        on left: 173
        on right: 77
    $@10 (149)
        on left: 172
        on right: 173
    for_loop_expression (150)
        on left: 175
        on right: 76
    $@11 (151)
        on left: 174
        on right: 175
    for_increment (152)
        on left: 176 177
        on right: 181
    for_to_clause (153)
        on left: 181
        on right: 185
    $@12 (154)
        on left: 178
        on right: 181
    $@13 (155)
        on left: 179
        on right: 181
    $@14 (156)
        on left: 180
        on right: 181
    opt_for_initializer (157)
        on left: 182 184
        on right: 181
    $@15 (158)
        on left: 183
        on right: 184
    for_clause (159)
        on left: 185 186 187
        on right: 175
    in_clause (160)
        on left: 189
        on right: 186
    $@16 (161)
        on left: 188
        on right: 189
    while (162)
        on left: 192
        on right: 75
    $@17 (163)
        on left: 190
        on right: 192
    $@18 (164)
        on left: 191
        on right: 192
    local_block (165)
        on left: 193 194
        on right: 175 192 198 201
    closing_brace (166)
        on left: 195
        on right: 68 194
    if_expression (167)
        on left: 198
        on right: 74
    $@19 (168)
        on left: 196
        on right: 198
    $@20 (169)
        on left: 197
        on right: 198
    else_clause (170)
        on left: 199 201
        on right: 198
    $@21 (171)
        on left: 200
        on right: 201
    stmntlist (172)
        on left: 202 203
        on right: 68 164 194 203
    closing_paren (173)
        on left: 204
        on right: 206 208
    call_expression (174)
        on left: 206 208 209 210
        on right: 72 112
    @22 (175)
        on left: 205
        on right: 206
    @23 (176)
        on left: 207
        on right: 208
    array_constructor (177)
        on left: 212
        on right: 209
    @24 (178)
        on left: 211
        on right: 212
    map_constructor (179)
        on left: 214
        on right: 210
    @25 (180)
        on left: 213
        on right: 214
    optional_map_associates (181)
        on left: 215 216
        on right: 214
    map_associates (182)
        on left: 217 218
        on right: 216 218
    map_associate (183)
        on left: 220
        on right: 217 218
    @26 (184)
        on left: 219
        on right: 220
    function_id_or_pointer (185)
        on left: 221 222
        on right: 208
    parameter (186)
        on left: 223 224
        on right: 49 50
    type_cast (187)
        on left: 225
        on right: 120
    type_name (188)
        on left: 226 227
        on right: 36 39 40 52 184 189 225
    array_size (189)
        on left: 228 229
        on right: 227
    boolean_literal (190)
        on left: 230 231
        on right: 239
    float_literal (191)
        on left: 232
        on right: 237
    integer_literal (192)
        on left: 233 234
        on right: 167 236
    character_literal (193)
        on left: 235
        on right: 238
    simple_literal (194)
        on left: 236 237 238 239
        on right: 26 151


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    2 file_structure: $@1 . namespace prerequisites global_declarations header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 10 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

   11 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    2 file_structure: $@1 namespace . prerequisites global_declarations header_delimiter macro_definitions

    $default  reduce using rule 12 (prerequisites)

    prerequisites  go to state 7


State 6

   11 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    2 file_structure: $@1 namespace prerequisites . global_declarations header_delimiter macro_definitions
   13 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 15 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

   11 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 11 (namespace)


State 9

   14 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   13 prerequisites: prerequisites require .

    $default  reduce using rule 13 (prerequisites)


State 11

    2 file_structure: $@1 namespace prerequisites global_declarations . header_delimiter macro_definitions
   16 global_declarations: global_declarations . constants ';'
   17                    | global_declarations . global_var ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14
    '!'       shift, and go to state 15

    T_STATIC           [reduce using rule 3 (header_delimiter)]
    T_TYPE_IDENTIFIER  reduce using rule 3 (header_delimiter)
    T_TYPE_IDENTIFIER  [reduce using rule 18 (scope)]
    $default           reduce using rule 3 (header_delimiter)

    header_delimiter  go to state 16
    scope             go to state 17
    constants         go to state 18
    global_var        go to state 19


State 12

   14 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 20


State 13

   19 scope: T_STATIC .

    $default  reduce using rule 19 (scope)


State 14

   20 constants: T_CONST . constant_list

    $default  reduce using rule 23 ($@2)

    constant_list  go to state 21
    constdef       go to state 22
    $@2            go to state 23


State 15

    4 header_delimiter: '!' .

    $default  reduce using rule 4 (header_delimiter)


State 16

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter . macro_definitions

    T_ANNOTATION  shift, and go to state 24

    $end      reduce using rule 5 (macro_definitions)
    $default  reduce using rule 54 (annotations)

    macro_definitions         go to state 25
    element_with_annotations  go to state 26
    annotations               go to state 27
    annotation                go to state 28


State 17

   38 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 29

    var_decl   go to state 30
    type_name  go to state 31


State 18

   16 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 32


State 19

   17 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 33


State 20

   14 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 14 (require)


State 21

   20 constants: T_CONST constant_list .
   22 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 34

    $default  reduce using rule 20 (constants)


State 22

   21 constant_list: constdef .

    $default  reduce using rule 21 (constant_list)


State 23

   25 constdef: $@2 . variable_identifier T_ASSIGN constant_literal $@3

    T_IDENT   shift, and go to state 35
    T_NUM     shift, and go to state 36
    T_STRING  shift, and go to state 37

    variable_identifier  go to state 38


State 24

   57 annotation: T_ANNOTATION . $@4 '(' annotation_values ')'

    $default  reduce using rule 56 ($@4)

    $@4  go to state 39


State 25

    2 file_structure: $@1 namespace prerequisites global_declarations header_delimiter macro_definitions .

    $default  reduce using rule 2 (file_structure)


State 26

    6 macro_definitions: element_with_annotations . macro_definitions

    T_ANNOTATION  shift, and go to state 24

    $end      reduce using rule 5 (macro_definitions)
    $default  reduce using rule 54 (annotations)

    macro_definitions         go to state 40
    element_with_annotations  go to state 26
    annotations               go to state 27
    annotation                go to state 28


State 27

    7 element_with_annotations: annotations . macro_or_native_function

    T_NATIVE  shift, and go to state 41

    $default  reduce using rule 66 ($@6)

    macro_or_native_function    go to state 42
    native_function_definition  go to state 43
    macro_definition            go to state 44
    $@6                         go to state 45


State 28

   55 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 24

    $default  reduce using rule 54 (annotations)

    annotations  go to state 46
    annotation   go to state 28


State 29

  226 type_name: T_TYPE_IDENTIFIER .
  227          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 47

    $default  reduce using rule 226 (type_name)

    array_size  go to state 48


State 30

   38 global_var: scope var_decl .

    $default  reduce using rule 38 (global_var)


State 31

   39 var_decl: type_name . variable_identifier assignment_expression
   40         | type_name . variable_identifier

    T_IDENT   shift, and go to state 35
    T_NUM     shift, and go to state 36
    T_STRING  shift, and go to state 37

    variable_identifier  go to state 49


State 32

   16 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 16 (global_declarations)


State 33

   17 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 17 (global_declarations)


State 34

   22 constant_list: constant_list ',' . constdef

    $default  reduce using rule 23 ($@2)

    constdef  go to state 50
    $@2       go to state 23


State 35

   28 variable_identifier: T_IDENT .

    $default  reduce using rule 28 (variable_identifier)


State 36

   29 variable_identifier: T_NUM .

    $default  reduce using rule 29 (variable_identifier)


State 37

   30 variable_identifier: T_STRING .

    $default  reduce using rule 30 (variable_identifier)


State 38

   25 constdef: $@2 variable_identifier . T_ASSIGN constant_literal $@3

    T_ASSIGN  shift, and go to state 51


State 39

   57 annotation: T_ANNOTATION $@4 . '(' annotation_values ')'

    '('  shift, and go to state 52


State 40

    6 macro_definitions: element_with_annotations macro_definitions .

    $default  reduce using rule 6 (macro_definitions)


State 41

   65 native_function_definition: T_NATIVE . $@5 macrostart

    $default  reduce using rule 64 ($@5)

    $@5  go to state 53


State 42

    7 element_with_annotations: annotations macro_or_native_function .

    $default  reduce using rule 7 (element_with_annotations)


State 43

    8 macro_or_native_function: native_function_definition . ';'

    ';'  shift, and go to state 54


State 44

    9 macro_or_native_function: macro_definition .

    $default  reduce using rule 9 (macro_or_native_function)


State 45

   67 macro_definition: $@6 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 18 (scope)

    scope       go to state 55
    macro_type  go to state 56
    macrostart  go to state 57


State 46

   55 annotations: annotation annotations .

    $default  reduce using rule 55 (annotations)


State 47

  228 array_size: '[' . ']'
  229           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 58
    ']'    shift, and go to state 59


State 48

  227 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 227 (type_name)


State 49

   39 var_decl: type_name variable_identifier . assignment_expression
   40         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 60

    $default  reduce using rule 40 (var_decl)

    assignment_expression  go to state 61


State 50

   22 constant_list: constant_list ',' constdef .

    $default  reduce using rule 22 (constant_list)


State 51

   25 constdef: $@2 variable_identifier T_ASSIGN . constant_literal $@3

    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 64
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    '-'                      shift, and go to state 68

    constant_literal   go to state 69
    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 74


State 52

   57 annotation: T_ANNOTATION $@4 '(' . annotation_values ')'

    T_IDENT   shift, and go to state 75
    T_STRING  shift, and go to state 76

    $default  reduce using rule 61 (annotation_values)

    annotation_value   go to state 77
    annotation_values  go to state 78


State 53

   65 native_function_definition: T_NATIVE $@5 . macrostart

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 18 (scope)

    scope       go to state 55
    macro_type  go to state 56
    macrostart  go to state 79


State 54

    8 macro_or_native_function: native_function_definition ';' .

    $default  reduce using rule 8 (macro_or_native_function)


State 55

   35 macro_type: scope . T_VOID
   36           | scope . type_name

    T_VOID             shift, and go to state 80
    T_TYPE_IDENTIFIER  shift, and go to state 29

    type_name  go to state 81


State 56

   37 macrostart: macro_type . macro_declaration '(' argument_list ')' optional_description

    T_IDENT  shift, and go to state 82
    T_FUNC   shift, and go to state 83

    macro_declaration  go to state 84


State 57

   67 macro_definition: $@6 macrostart . block

    '{'  shift, and go to state 85

    block  go to state 86


State 58

  229 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 87


State 59

  228 array_size: '[' ']' .

    $default  reduce using rule 228 (array_size)


State 60

  100 assignment_expression: T_ASSIGN . expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    T_IDENT     [reduce using rule 103 (range_expression)]
    T_FUNC      [reduce using rule 103 (range_expression)]
    T_VARIABLE  [reduce using rule 103 (range_expression)]
    '~'         [reduce using rule 103 (range_expression)]
    '+'         [reduce using rule 103 (range_expression)]
    '-'         [reduce using rule 103 (range_expression)]
    '*'         [reduce using rule 103 (range_expression)]
    '['         [reduce using rule 103 (range_expression)]
    '{'         [reduce using rule 103 (range_expression)]
    $default    reduce using rule 103 (range_expression)

    variable_reference      go to state 101
    expression              go to state 102
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 61

   39 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 39 (var_decl)


State 62

  233 integer_literal: T_NUM .

    $default  reduce using rule 233 (integer_literal)


State 63

  232 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 232 (float_literal)


State 64

   27 constant_literal: T_STRING .

    $default  reduce using rule 27 (constant_literal)


State 65

  235 character_literal: T_CHARACTER .

    $default  reduce using rule 235 (character_literal)


State 66

  230 boolean_literal: T_TRUE .

    $default  reduce using rule 230 (boolean_literal)


State 67

  231 boolean_literal: T_FALSE .

    $default  reduce using rule 231 (boolean_literal)


State 68

  234 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 116


State 69

   25 constdef: $@2 variable_identifier T_ASSIGN constant_literal . $@3

    $default  reduce using rule 24 ($@3)

    $@3  go to state 117


State 70

  239 simple_literal: boolean_literal .

    $default  reduce using rule 239 (simple_literal)


State 71

  237 simple_literal: float_literal .

    $default  reduce using rule 237 (simple_literal)


State 72

  236 simple_literal: integer_literal .

    $default  reduce using rule 236 (simple_literal)


State 73

  238 simple_literal: character_literal .

    $default  reduce using rule 238 (simple_literal)


State 74

   26 constant_literal: simple_literal .

    $default  reduce using rule 26 (constant_literal)


State 75

   58 annotation_value: T_IDENT . T_ASSIGN T_STRING
   59                 | T_IDENT .

    T_ASSIGN  shift, and go to state 118

    $default  reduce using rule 59 (annotation_value)


State 76

   60 annotation_value: T_STRING .

    $default  reduce using rule 60 (annotation_value)


State 77

   62 annotation_values: annotation_value .
   63                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 119

    $default  reduce using rule 62 (annotation_values)


State 78

   57 annotation: T_ANNOTATION $@4 '(' annotation_values . ')'

    ')'  shift, and go to state 120


State 79

   65 native_function_definition: T_NATIVE $@5 macrostart .

    $default  reduce using rule 65 (native_function_definition)


State 80

   35 macro_type: scope T_VOID .

    $default  reduce using rule 35 (macro_type)


State 81

   36 macro_type: scope type_name .

    $default  reduce using rule 36 (macro_type)


State 82

   33 macro_declaration: T_IDENT .

    $default  reduce using rule 33 (macro_declaration)


State 83

   34 macro_declaration: T_FUNC .

    $default  reduce using rule 34 (macro_declaration)


State 84

   37 macrostart: macro_type macro_declaration . '(' argument_list ')' optional_description

    '('  shift, and go to state 121


State 85

   68 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 69 (var_decls)

    var_decls  go to state 122


State 86

   67 macro_definition: $@6 macrostart block .

    $default  reduce using rule 67 (macro_definition)


State 87

  229 array_size: '[' T_NUM ']' .

    $default  reduce using rule 229 (array_size)


State 88

  114 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 123


State 89

   32 variable_reference: T_IDENT .
  152 value: T_IDENT .
  222 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 32 (variable_reference)
    '('       reduce using rule 222 (function_id_or_pointer)
    $default  reduce using rule 152 (value)


State 90

  153 string: T_STRING .

    $default  reduce using rule 153 (string)


State 91

  206 call_expression: T_FUNC . '(' @22 parameter_list closing_paren

    '('  shift, and go to state 124


State 92

   31 variable_reference: T_VARIABLE .
  149 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 31 (variable_reference)
    $default  reduce using rule 149 (value)


State 93

  115 unary_expression: '!' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 125
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 94

  116 unary_expression: '~' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 126
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 95

  117 unary_expression: '+' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 127
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 96

  118 unary_expression: '-' . variable_reference
  234 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 128
    T_NUM       shift, and go to state 116
    T_VARIABLE  shift, and go to state 129

    variable_reference  go to state 130


State 97

  221 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 128
    T_VARIABLE  shift, and go to state 129

    variable_reference  go to state 131


State 98

  212 array_constructor: '[' . @24 parameter_list ']'

    $default  reduce using rule 211 (@24)

    @24  go to state 132


State 99

  145 binary_expression: '(' . binary_expression ')'
  225 type_cast: '(' . type_name ')'

    T_NEW                    shift, and go to state 88
    T_TYPE_IDENTIFIER        shift, and go to state 29
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 133
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    type_name               go to state 134
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 100

  214 map_constructor: '{' . @25 optional_map_associates '}'

    $default  reduce using rule 213 (@25)

    @25  go to state 135


State 101

  146 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 60

    assignment_expression  go to state 136


State 102

  100 assignment_expression: T_ASSIGN expression .

    $default  reduce using rule 100 (assignment_expression)


State 103

  102 expression: range_expression .

    $default  reduce using rule 102 (expression)


State 104

  119 binary_expression: simple_term .

    $default  reduce using rule 119 (binary_expression)


State 105

  113 simple_term: constructor_expression .

    $default  reduce using rule 113 (simple_term)


State 106

  122 binary_expression: unary_expression .

    $default  reduce using rule 122 (binary_expression)


State 107

  101 expression: binary_expression .
  105 range_expression: binary_expression . T_DOTDOT binary_expression $@9 range_increment
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 137
    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_OR           shift, and go to state 143
    T_AND          shift, and go to state 144
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    T_DOTDOT       [reduce using rule 101 (expression)]
    T_NMATCH       [reduce using rule 101 (expression)]
    T_NE           [reduce using rule 101 (expression)]
    T_EQ           [reduce using rule 101 (expression)]
    T_SHIFT_LEFT   [reduce using rule 101 (expression)]
    T_SHIFT_RIGHT  [reduce using rule 101 (expression)]
    T_OR           [reduce using rule 101 (expression)]
    T_AND          [reduce using rule 101 (expression)]
    T_LE           [reduce using rule 101 (expression)]
    T_GE           [reduce using rule 101 (expression)]
    T_POWER_TO     [reduce using rule 101 (expression)]
    '&'            [reduce using rule 101 (expression)]
    '|'            [reduce using rule 101 (expression)]
    '^'            [reduce using rule 101 (expression)]
    '~'            [reduce using rule 101 (expression)]
    '<'            [reduce using rule 101 (expression)]
    '>'            [reduce using rule 101 (expression)]
    '+'            [reduce using rule 101 (expression)]
    '-'            [reduce using rule 101 (expression)]
    '*'            [reduce using rule 101 (expression)]
    '/'            [reduce using rule 101 (expression)]
    '%'            [reduce using rule 101 (expression)]
    '['            [reduce using rule 101 (expression)]
    '.'            [reduce using rule 101 (expression)]
    $default       reduce using rule 101 (expression)


State 108

  111 simple_term: value .

    $default  reduce using rule 111 (simple_term)


State 109

  150 value: string .
  154 string: string . T_STRING

    T_STRING  shift, and go to state 161

    $default  reduce using rule 150 (value)


State 110

  112 simple_term: call_expression .

    $default  reduce using rule 112 (simple_term)


State 111

  209 call_expression: array_constructor .

    $default  reduce using rule 209 (call_expression)


State 112

  210 call_expression: map_constructor .

    $default  reduce using rule 210 (call_expression)


State 113

  208 call_expression: function_id_or_pointer . '(' @23 parameter_list closing_paren

    '('  shift, and go to state 162


State 114

  120 binary_expression: type_cast . simple_term

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 163
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 164
    '-'                      shift, and go to state 68
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '{'                      shift, and go to state 100

    simple_term             go to state 165
    constructor_expression  go to state 105
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 115

  151 value: simple_literal .

    $default  reduce using rule 151 (value)


State 116

  234 integer_literal: '-' T_NUM .

    $default  reduce using rule 234 (integer_literal)


State 117

   25 constdef: $@2 variable_identifier T_ASSIGN constant_literal $@3 .

    $default  reduce using rule 25 (constdef)


State 118

   58 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 166


State 119

   63 annotation_values: annotation_value ',' . annotation_values

    T_IDENT   shift, and go to state 75
    T_STRING  shift, and go to state 76

    $default  reduce using rule 61 (annotation_values)

    annotation_value   go to state 77
    annotation_values  go to state 167


State 120

   57 annotation: T_ANNOTATION $@4 '(' annotation_values ')' .

    $default  reduce using rule 57 (annotation)


State 121

   37 macrostart: macro_type macro_declaration '(' . argument_list ')' optional_description

    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_ELLIPSIS         shift, and go to state 168

    $default  reduce using rule 43 (argument_list)

    argument_list         go to state 169
    non_empty_arguments   go to state 170
    argument_declaration  go to state 171
    type_name             go to state 172


State 122

   68 block: '{' var_decls . stmntlist closing_brace
   70 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 173
    T_FOR              shift, and go to state 174
    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_IDENT            shift, and go to state 175
    T_FUNC             shift, and go to state 91
    T_IF               shift, and go to state 176
    T_WHILE            shift, and go to state 177
    T_GOTO             shift, and go to state 178
    T_SWITCH           shift, and go to state 179
    T_BREAK            shift, and go to state 180
    T_CONTINUE         shift, and go to state 181
    T_RETURN           shift, and go to state 182
    T_VARIABLE         shift, and go to state 129
    '*'                shift, and go to state 97
    '['                shift, and go to state 98
    ';'                shift, and go to state 183
    '{'                shift, and go to state 184

    '}'  reduce using rule 202 (stmntlist)

    variable_reference      go to state 185
    var_decl                go to state 186
    block                   go to state 187
    statement               go to state 188
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto_expression         go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    if_expression           go to state 201
    stmntlist               go to state 202
    call_expression         go to state 203
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_name               go to state 31


State 123

  114 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 204


State 124

  206 call_expression: T_FUNC '(' . @22 parameter_list closing_paren

    $default  reduce using rule 205 (@22)

    @22  go to state 205


State 125

  115 unary_expression: '!' binary_expression .
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 115 (unary_expression)


State 126

  116 unary_expression: '~' binary_expression .
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 116 (unary_expression)


State 127

  117 unary_expression: '+' binary_expression .
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 147
    '*'         shift, and go to state 156
    '/'         shift, and go to state 157
    '%'         shift, and go to state 158
    '['         shift, and go to state 159
    '.'         shift, and go to state 160

    $default  reduce using rule 117 (unary_expression)


State 128

   32 variable_reference: T_IDENT .

    $default  reduce using rule 32 (variable_reference)


State 129

   31 variable_reference: T_VARIABLE .

    $default  reduce using rule 31 (variable_reference)


State 130

  118 unary_expression: '-' variable_reference .

    $default  reduce using rule 118 (unary_expression)


State 131

  221 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 221 (function_id_or_pointer)


State 132

  212 array_constructor: '[' @24 . parameter_list ']'

    error                    shift, and go to state 206
    T_NEW                    shift, and go to state 88
    T_ELLIPSIS               shift, and go to state 207
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    ','  reduce using rule 103 (range_expression)
    ']'  reduce using rule 47 (parameter_list)
    ']'  [reduce using rule 103 (range_expression)]

    variable_reference      go to state 101
    parameter_list          go to state 208
    non_empty_parameters    go to state 209
    expression              go to state 210
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    parameter               go to state 211
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 133

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  145                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_OR           shift, and go to state 143
    T_AND          shift, and go to state 144
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160
    ')'            shift, and go to state 212


State 134

  225 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 213


State 135

  214 map_constructor: '{' @25 . optional_map_associates '}'

    T_STRING  shift, and go to state 214

    $default  reduce using rule 215 (optional_map_associates)

    optional_map_associates  go to state 215
    map_associates           go to state 216
    map_associate            go to state 217


State 136

  146 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 146 (binary_expression)


State 137

  105 range_expression: binary_expression T_DOTDOT . binary_expression $@9 range_increment

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 218
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 138

  125 binary_expression: binary_expression T_NMATCH . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 219
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 139

  144 binary_expression: binary_expression T_NE . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 220
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 140

  143 binary_expression: binary_expression T_EQ . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 221
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 141

  134 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 222
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 142

  135 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 223
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 143

  138 binary_expression: binary_expression T_OR . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 224
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 144

  137 binary_expression: binary_expression T_AND . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 225
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 145

  141 binary_expression: binary_expression T_LE . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 226
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 146

  142 binary_expression: binary_expression T_GE . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 227
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 147

  136 binary_expression: binary_expression T_POWER_TO . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 228
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 148

  126 binary_expression: binary_expression '&' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 229
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 149

  127 binary_expression: binary_expression '|' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 230
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 150

  129 binary_expression: binary_expression '^' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 231
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 151

  124 binary_expression: binary_expression '~' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 232
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 152

  139 binary_expression: binary_expression '<' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 233
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 153

  140 binary_expression: binary_expression '>' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 234
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 154

  128 binary_expression: binary_expression '+' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 235
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 155

  130 binary_expression: binary_expression '-' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 236
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 156

  131 binary_expression: binary_expression '*' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 237
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 157

  132 binary_expression: binary_expression '/' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 238
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 158

  133 binary_expression: binary_expression '%' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 239
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 159

  123 binary_expression: binary_expression '[' . expression ']'

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 101
    expression              go to state 240
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 160

  121 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 241


State 161

  154 string: string T_STRING .

    $default  reduce using rule 154 (string)


State 162

  208 call_expression: function_id_or_pointer '(' . @23 parameter_list closing_paren

    $default  reduce using rule 207 (@23)

    @23  go to state 242


State 163

  152 value: T_IDENT .
  222 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 222 (function_id_or_pointer)
    $default  reduce using rule 152 (value)


State 164

  149 value: T_VARIABLE .

    $default  reduce using rule 149 (value)


State 165

  120 binary_expression: type_cast simple_term .

    $default  reduce using rule 120 (binary_expression)


State 166

   58 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 58 (annotation_value)


State 167

   63 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 63 (annotation_values)


State 168

   53 argument_declaration: T_ELLIPSIS .

    $default  reduce using rule 53 (argument_declaration)


State 169

   37 macrostart: macro_type macro_declaration '(' argument_list . ')' optional_description

    ')'  shift, and go to state 243


State 170

   44 argument_list: non_empty_arguments .
   46 non_empty_arguments: non_empty_arguments . ',' argument_declaration

    ','  shift, and go to state 244

    $default  reduce using rule 44 (argument_list)


State 171

   45 non_empty_arguments: argument_declaration .

    $default  reduce using rule 45 (non_empty_arguments)


State 172

   52 argument_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 35
    T_NUM     shift, and go to state 36
    T_STRING  shift, and go to state 37

    variable_identifier  go to state 245


State 173

   86 statement: error . ';'

    ';'  shift, and go to state 246


State 174

  175 for_loop_expression: T_FOR . for_clause $@11 local_block

    error  shift, and go to state 247
    '('    shift, and go to state 248

    for_to_clause  go to state 249
    for_clause     go to state 250
    in_clause      go to state 251


State 175

   32 variable_reference: T_IDENT .
  170 label: T_IDENT . ':'
  222 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 252

    '('       reduce using rule 222 (function_id_or_pointer)
    $default  reduce using rule 32 (variable_reference)


State 176

  198 if_expression: T_IF . condition $@19 local_block $@20 else_clause

    '('  shift, and go to state 253

    condition  go to state 254


State 177

  192 while: T_WHILE . $@17 condition $@18 local_block

    $default  reduce using rule 190 ($@17)

    $@17  go to state 255


State 178

  171 goto_expression: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 256


State 179

  173 switch_expression: T_SWITCH . '(' value ')' $@10 '{' case_clauses '}'

    '('  shift, and go to state 257


State 180

  155 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 258

    $default  reduce using rule 160 (opt_num)

    opt_num  go to state 259


State 181

  156 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 258

    $default  reduce using rule 160 (opt_num)

    opt_num  go to state 260


State 182

  157 return_expression: T_RETURN . optional_bterm

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    $default  reduce using rule 158 (optional_bterm)

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 261
    value                   go to state 108
    string                  go to state 109
    optional_bterm          go to state 262
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 183

   71 statement: ';' .

    $default  reduce using rule 71 (statement)


State 184

   68 block: '{' . var_decls stmntlist closing_brace
  214 map_constructor: '{' . @25 optional_map_associates '}'

    T_STRING  reduce using rule 213 (@25)
    '}'       reduce using rule 69 (var_decls)
    '}'       [reduce using rule 213 (@25)]
    $default  reduce using rule 69 (var_decls)

    var_decls  go to state 122
    @25        go to state 135


State 185

   87 assignment: variable_reference . assignment_expression
   93 shorthand_assignment: variable_reference . $@8 shorthand_assignment_operator expression
   94 assignment_target: variable_reference .
  110 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 263
    T_MINUSMINUS  shift, and go to state 264
    T_ASSIGN      shift, and go to state 60

    '['       reduce using rule 94 (assignment_target)
    '.'       reduce using rule 94 (assignment_target)
    $default  reduce using rule 92 ($@8)

    $@8                    go to state 265
    assignment_expression  go to state 266
    minusminus_plusplus    go to state 267


State 186

   70 var_decls: var_decls var_decl . ';'
   85 statement: var_decl .

    ';'  shift, and go to state 268

    ';'       [reduce using rule 85 (statement)]
    $default  reduce using rule 85 (statement)


State 187

   82 statement: block .

    $default  reduce using rule 82 (statement)


State 188

  203 stmntlist: statement . stmntlist

    error              shift, and go to state 173
    T_FOR              shift, and go to state 174
    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_IDENT            shift, and go to state 175
    T_FUNC             shift, and go to state 91
    T_IF               shift, and go to state 176
    T_WHILE            shift, and go to state 177
    T_GOTO             shift, and go to state 178
    T_SWITCH           shift, and go to state 179
    T_BREAK            shift, and go to state 180
    T_CONTINUE         shift, and go to state 181
    T_RETURN           shift, and go to state 182
    T_VARIABLE         shift, and go to state 129
    '*'                shift, and go to state 97
    '['                shift, and go to state 98
    ';'                shift, and go to state 183
    '{'                shift, and go to state 184

    T_CASE     reduce using rule 202 (stmntlist)
    T_DEFAULT  reduce using rule 202 (stmntlist)
    '}'        reduce using rule 202 (stmntlist)

    variable_reference      go to state 185
    var_decl                go to state 269
    block                   go to state 187
    statement               go to state 188
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto_expression         go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    if_expression           go to state 201
    stmntlist               go to state 270
    call_expression         go to state 203
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_name               go to state 31


State 189

   73 statement: assignment . ';'

    ';'  shift, and go to state 271


State 190

   91 assignment: shorthand_assignment .

    $default  reduce using rule 91 (assignment)


State 191

   89 assignment: assignment_target . '.' T_IDENT $@7 assignment_expression
   90           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 272
    '.'  shift, and go to state 273


State 192

   83 statement: increment_expression . ';'

    ';'  shift, and go to state 274


State 193

   78 statement: break .

    $default  reduce using rule 78 (statement)


State 194

   79 statement: continue .

    $default  reduce using rule 79 (statement)


State 195

   80 statement: return_expression . ';'

    ';'  shift, and go to state 275


State 196

   84 statement: label .

    $default  reduce using rule 84 (statement)


State 197

   81 statement: goto_expression . ';'

    ';'  shift, and go to state 276


State 198

   77 statement: switch_expression .

    $default  reduce using rule 77 (statement)


State 199

   76 statement: for_loop_expression .

    $default  reduce using rule 76 (statement)


State 200

   75 statement: while .

    $default  reduce using rule 75 (statement)


State 201

   74 statement: if_expression .

    $default  reduce using rule 74 (statement)


State 202

   68 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 277

    closing_brace  go to state 278


State 203

   72 statement: call_expression . ';'

    ';'  shift, and go to state 279


State 204

  114 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 280


State 205

  206 call_expression: T_FUNC '(' @22 . parameter_list closing_paren

    error                    shift, and go to state 206
    T_NEW                    shift, and go to state 88
    T_ELLIPSIS               shift, and go to state 207
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    ','  reduce using rule 103 (range_expression)
    ')'  reduce using rule 47 (parameter_list)
    ')'  [reduce using rule 103 (range_expression)]

    variable_reference      go to state 101
    parameter_list          go to state 281
    non_empty_parameters    go to state 209
    expression              go to state 210
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    parameter               go to state 211
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 206

   51 non_empty_parameters: error .

    $default  reduce using rule 51 (non_empty_parameters)


State 207

  224 parameter: T_ELLIPSIS . expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 101
    expression              go to state 282
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 208

  212 array_constructor: '[' @24 parameter_list . ']'

    ']'  shift, and go to state 283


State 209

   48 parameter_list: non_empty_parameters .
   50 non_empty_parameters: non_empty_parameters . ',' parameter

    ','  shift, and go to state 284

    $default  reduce using rule 48 (parameter_list)


State 210

  223 parameter: expression .

    $default  reduce using rule 223 (parameter)


State 211

   49 non_empty_parameters: parameter .

    $default  reduce using rule 49 (non_empty_parameters)


State 212

  145 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 145 (binary_expression)


State 213

  225 type_cast: '(' type_name ')' .

    $default  reduce using rule 225 (type_cast)


State 214

  220 map_associate: T_STRING . ':' @26 value

    ':'  shift, and go to state 285


State 215

  214 map_constructor: '{' @25 optional_map_associates . '}'

    '}'  shift, and go to state 286


State 216

  216 optional_map_associates: map_associates .
  218 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 287

    $default  reduce using rule 216 (optional_map_associates)


State 217

  217 map_associates: map_associate .

    $default  reduce using rule 217 (map_associates)


State 218

  105 range_expression: binary_expression T_DOTDOT binary_expression . $@9 range_increment
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_OR           shift, and go to state 143
    T_AND          shift, and go to state 144
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    T_NMATCH       [reduce using rule 104 ($@9)]
    T_NE           [reduce using rule 104 ($@9)]
    T_EQ           [reduce using rule 104 ($@9)]
    T_SHIFT_LEFT   [reduce using rule 104 ($@9)]
    T_SHIFT_RIGHT  [reduce using rule 104 ($@9)]
    T_OR           [reduce using rule 104 ($@9)]
    T_AND          [reduce using rule 104 ($@9)]
    T_LE           [reduce using rule 104 ($@9)]
    T_GE           [reduce using rule 104 ($@9)]
    T_POWER_TO     [reduce using rule 104 ($@9)]
    '&'            [reduce using rule 104 ($@9)]
    '|'            [reduce using rule 104 ($@9)]
    '^'            [reduce using rule 104 ($@9)]
    '~'            [reduce using rule 104 ($@9)]
    '<'            [reduce using rule 104 ($@9)]
    '>'            [reduce using rule 104 ($@9)]
    '+'            [reduce using rule 104 ($@9)]
    '-'            [reduce using rule 104 ($@9)]
    '*'            [reduce using rule 104 ($@9)]
    '/'            [reduce using rule 104 ($@9)]
    '%'            [reduce using rule 104 ($@9)]
    '['            [reduce using rule 104 ($@9)]
    '.'            [reduce using rule 104 ($@9)]
    $default       reduce using rule 104 ($@9)

    $@9  go to state 288


State 219

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  125                  | binary_expression T_NMATCH binary_expression .
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 125 (binary_expression)


State 220

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  144                  | binary_expression T_NE binary_expression .

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 144 (binary_expression)


State 221

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  143                  | binary_expression T_EQ binary_expression .
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 143 (binary_expression)


State 222

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  134                  | binary_expression T_SHIFT_LEFT binary_expression .
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 147
    '+'         shift, and go to state 154
    '-'         shift, and go to state 155
    '*'         shift, and go to state 156
    '/'         shift, and go to state 157
    '%'         shift, and go to state 158
    '['         shift, and go to state 159
    '.'         shift, and go to state 160

    $default  reduce using rule 134 (binary_expression)


State 223

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  135                  | binary_expression T_SHIFT_RIGHT binary_expression .
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 147
    '+'         shift, and go to state 154
    '-'         shift, and go to state 155
    '*'         shift, and go to state 156
    '/'         shift, and go to state 157
    '%'         shift, and go to state 158
    '['         shift, and go to state 159
    '.'         shift, and go to state 160

    $default  reduce using rule 135 (binary_expression)


State 224

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  138                  | binary_expression T_OR binary_expression .
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 138 (binary_expression)


State 225

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  137                  | binary_expression T_AND binary_expression .
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 137 (binary_expression)


State 226

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  141                  | binary_expression T_LE binary_expression .
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_POWER_TO     shift, and go to state 147
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 141 (binary_expression)


State 227

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  142                  | binary_expression T_GE binary_expression .
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_POWER_TO     shift, and go to state 147
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 142 (binary_expression)


State 228

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  136                  | binary_expression T_POWER_TO binary_expression .
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 159
    '.'  shift, and go to state 160

    $default  reduce using rule 136 (binary_expression)


State 229

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  126                  | binary_expression '&' binary_expression .
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 126 (binary_expression)


State 230

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  127                  | binary_expression '|' binary_expression .
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 127 (binary_expression)


State 231

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  129                  | binary_expression '^' binary_expression .
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 129 (binary_expression)


State 232

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  124                  | binary_expression '~' binary_expression .
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 124 (binary_expression)


State 233

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  139                  | binary_expression '<' binary_expression .
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_POWER_TO     shift, and go to state 147
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 139 (binary_expression)


State 234

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  140                  | binary_expression '>' binary_expression .
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_POWER_TO     shift, and go to state 147
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 140 (binary_expression)


State 235

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  128                  | binary_expression '+' binary_expression .
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 147
    '*'         shift, and go to state 156
    '/'         shift, and go to state 157
    '%'         shift, and go to state 158
    '['         shift, and go to state 159
    '.'         shift, and go to state 160

    $default  reduce using rule 128 (binary_expression)


State 236

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  130                  | binary_expression '-' binary_expression .
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 147
    '*'         shift, and go to state 156
    '/'         shift, and go to state 157
    '%'         shift, and go to state 158
    '['         shift, and go to state 159
    '.'         shift, and go to state 160

    $default  reduce using rule 130 (binary_expression)


State 237

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  131                  | binary_expression '*' binary_expression .
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 159
    '.'  shift, and go to state 160

    $default  reduce using rule 131 (binary_expression)


State 238

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  132                  | binary_expression '/' binary_expression .
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 159
    '.'  shift, and go to state 160

    $default  reduce using rule 132 (binary_expression)


State 239

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  133                  | binary_expression '%' binary_expression .
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 159
    '.'  shift, and go to state 160

    $default  reduce using rule 133 (binary_expression)


State 240

  123 binary_expression: binary_expression '[' expression . ']'

    ']'  shift, and go to state 289


State 241

  121 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 121 (binary_expression)


State 242

  208 call_expression: function_id_or_pointer '(' @23 . parameter_list closing_paren

    error                    shift, and go to state 206
    T_NEW                    shift, and go to state 88
    T_ELLIPSIS               shift, and go to state 207
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    ','  reduce using rule 103 (range_expression)
    ')'  reduce using rule 47 (parameter_list)
    ')'  [reduce using rule 103 (range_expression)]

    variable_reference      go to state 101
    parameter_list          go to state 290
    non_empty_parameters    go to state 209
    expression              go to state 210
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    parameter               go to state 211
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 243

   37 macrostart: macro_type macro_declaration '(' argument_list ')' . optional_description

    T_STRING  shift, and go to state 291

    $default  reduce using rule 41 (optional_description)

    optional_description  go to state 292


State 244

   46 non_empty_arguments: non_empty_arguments ',' . argument_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_ELLIPSIS         shift, and go to state 168

    argument_declaration  go to state 293
    type_name             go to state 172


State 245

   52 argument_declaration: type_name variable_identifier .

    $default  reduce using rule 52 (argument_declaration)


State 246

   86 statement: error ';' .

    $default  reduce using rule 86 (statement)


State 247

  187 for_clause: error .

    $default  reduce using rule 187 (for_clause)


State 248

  181 for_to_clause: '(' . opt_for_initializer $@12 ';' binary_expression ';' $@13 for_increment $@14 ')'
  189 in_clause: '(' . type_name variable_identifier $@16 ':' expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 29

    $default  reduce using rule 182 (opt_for_initializer)

    opt_for_initializer  go to state 294
    type_name            go to state 295


State 249

  185 for_clause: for_to_clause .

    $default  reduce using rule 185 (for_clause)


State 250

  175 for_loop_expression: T_FOR for_clause . $@11 local_block

    $default  reduce using rule 174 ($@11)

    $@11  go to state 296


State 251

  186 for_clause: in_clause .

    $default  reduce using rule 186 (for_clause)


State 252

  170 label: T_IDENT ':' .

    $default  reduce using rule 170 (label)


State 253

  147 condition: '(' . binary_expression ')'
  148          | '(' . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 297
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 254

  198 if_expression: T_IF condition . $@19 local_block $@20 else_clause

    $default  reduce using rule 196 ($@19)

    $@19  go to state 298


State 255

  192 while: T_WHILE $@17 . condition $@18 local_block

    '('  shift, and go to state 253

    condition  go to state 299


State 256

  171 goto_expression: T_GOTO T_IDENT .

    $default  reduce using rule 171 (goto_expression)


State 257

  173 switch_expression: T_SWITCH '(' . value ')' $@10 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 300
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_VARIABLE               shift, and go to state 164
    '-'                      shift, and go to state 68

    value              go to state 301
    string             go to state 109
    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 115


State 258

  161 opt_num: T_NUM .

    $default  reduce using rule 161 (opt_num)


State 259

  155 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 302


State 260

  156 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 303


State 261

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  159 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_OR           shift, and go to state 143
    T_AND          shift, and go to state 144
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160

    $default  reduce using rule 159 (optional_bterm)


State 262

  157 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 157 (return_expression)


State 263

  109 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 109 (minusminus_plusplus)


State 264

  108 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 108 (minusminus_plusplus)


State 265

   93 shorthand_assignment: variable_reference $@8 . shorthand_assignment_operator expression

    T_SH_ASSIGN_PLUS   shift, and go to state 304
    T_SH_ASSIGN_MINUS  shift, and go to state 305
    T_SH_ASSIGN_MULT   shift, and go to state 306
    T_SH_ASSIGN_DIV    shift, and go to state 307
    T_SH_ASSIGN_MOD    shift, and go to state 308

    shorthand_assignment_operator  go to state 309


State 266

   87 assignment: variable_reference assignment_expression .

    $default  reduce using rule 87 (assignment)


State 267

  110 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 110 (increment_expression)


State 268

   70 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 70 (var_decls)


State 269

   85 statement: var_decl .

    $default  reduce using rule 85 (statement)


State 270

  203 stmntlist: statement stmntlist .

    $default  reduce using rule 203 (stmntlist)


State 271

   73 statement: assignment ';' .

    $default  reduce using rule 73 (statement)


State 272

   90 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 310
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 273

   89 assignment: assignment_target '.' . T_IDENT $@7 assignment_expression

    T_IDENT  shift, and go to state 311


State 274

   83 statement: increment_expression ';' .

    $default  reduce using rule 83 (statement)


State 275

   80 statement: return_expression ';' .

    $default  reduce using rule 80 (statement)


State 276

   81 statement: goto_expression ';' .

    $default  reduce using rule 81 (statement)


State 277

  195 closing_brace: '}' .

    $default  reduce using rule 195 (closing_brace)


State 278

   68 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 68 (block)


State 279

   72 statement: call_expression ';' .

    $default  reduce using rule 72 (statement)


State 280

  114 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 114 (constructor_expression)


State 281

  206 call_expression: T_FUNC '(' @22 parameter_list . closing_paren

    ')'  shift, and go to state 312

    closing_paren  go to state 313


State 282

  224 parameter: T_ELLIPSIS expression .

    $default  reduce using rule 224 (parameter)


State 283

  212 array_constructor: '[' @24 parameter_list ']' .

    $default  reduce using rule 212 (array_constructor)


State 284

   50 non_empty_parameters: non_empty_parameters ',' . parameter

    T_NEW                    shift, and go to state 88
    T_ELLIPSIS               shift, and go to state 207
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 101
    expression              go to state 210
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    parameter               go to state 314
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 285

  220 map_associate: T_STRING ':' . @26 value

    $default  reduce using rule 219 (@26)

    @26  go to state 315


State 286

  214 map_constructor: '{' @25 optional_map_associates '}' .

    $default  reduce using rule 214 (map_constructor)


State 287

  218 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 214

    map_associate  go to state 316


State 288

  105 range_expression: binary_expression T_DOTDOT binary_expression $@9 . range_increment

    T_DOTDOT  shift, and go to state 317

    T_DOTDOT  [reduce using rule 106 (range_increment)]
    $default  reduce using rule 106 (range_increment)

    range_increment  go to state 318


State 289

  123 binary_expression: binary_expression '[' expression ']' .

    $default  reduce using rule 123 (binary_expression)


State 290

  208 call_expression: function_id_or_pointer '(' @23 parameter_list . closing_paren

    ')'  shift, and go to state 312

    closing_paren  go to state 319


State 291

   42 optional_description: T_STRING .

    $default  reduce using rule 42 (optional_description)


State 292

   37 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description .

    $default  reduce using rule 37 (macrostart)


State 293

   46 non_empty_arguments: non_empty_arguments ',' argument_declaration .

    $default  reduce using rule 46 (non_empty_arguments)


State 294

  181 for_to_clause: '(' opt_for_initializer . $@12 ';' binary_expression ';' $@13 for_increment $@14 ')'

    $default  reduce using rule 178 ($@12)

    $@12  go to state 320


State 295

  184 opt_for_initializer: type_name . variable_identifier $@15 assignment_expression
  189 in_clause: '(' type_name . variable_identifier $@16 ':' expression ')'

    T_IDENT   shift, and go to state 35
    T_NUM     shift, and go to state 36
    T_STRING  shift, and go to state 37

    variable_identifier  go to state 321


State 296

  175 for_loop_expression: T_FOR for_clause $@11 . local_block

    error              shift, and go to state 173
    T_FOR              shift, and go to state 174
    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_IDENT            shift, and go to state 175
    T_FUNC             shift, and go to state 91
    T_IF               shift, and go to state 176
    T_WHILE            shift, and go to state 177
    T_GOTO             shift, and go to state 178
    T_SWITCH           shift, and go to state 179
    T_BREAK            shift, and go to state 180
    T_CONTINUE         shift, and go to state 181
    T_RETURN           shift, and go to state 182
    T_VARIABLE         shift, and go to state 129
    '*'                shift, and go to state 97
    '['                shift, and go to state 98
    ';'                shift, and go to state 183
    '{'                shift, and go to state 322

    variable_reference      go to state 185
    var_decl                go to state 269
    block                   go to state 187
    statement               go to state 323
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto_expression         go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    local_block             go to state 324
    if_expression           go to state 201
    call_expression         go to state 203
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_name               go to state 31


State 297

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  147 condition: '(' binary_expression . ')'
  148          | '(' binary_expression .

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_OR           shift, and go to state 143
    T_AND          shift, and go to state 144
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160
    ')'            shift, and go to state 325

    '*'       [reduce using rule 148 (condition)]
    '['       [reduce using rule 148 (condition)]
    $default  reduce using rule 148 (condition)


State 298

  198 if_expression: T_IF condition $@19 . local_block $@20 else_clause

    error              shift, and go to state 173
    T_FOR              shift, and go to state 174
    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_IDENT            shift, and go to state 175
    T_FUNC             shift, and go to state 91
    T_IF               shift, and go to state 176
    T_WHILE            shift, and go to state 177
    T_GOTO             shift, and go to state 178
    T_SWITCH           shift, and go to state 179
    T_BREAK            shift, and go to state 180
    T_CONTINUE         shift, and go to state 181
    T_RETURN           shift, and go to state 182
    T_VARIABLE         shift, and go to state 129
    '*'                shift, and go to state 97
    '['                shift, and go to state 98
    ';'                shift, and go to state 183
    '{'                shift, and go to state 322

    variable_reference      go to state 185
    var_decl                go to state 269
    block                   go to state 187
    statement               go to state 323
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto_expression         go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    local_block             go to state 326
    if_expression           go to state 201
    call_expression         go to state 203
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_name               go to state 31


State 299

  192 while: T_WHILE $@17 condition . $@18 local_block

    $default  reduce using rule 191 ($@18)

    $@18  go to state 327


State 300

  152 value: T_IDENT .

    $default  reduce using rule 152 (value)


State 301

  173 switch_expression: T_SWITCH '(' value . ')' $@10 '{' case_clauses '}'

    ')'  shift, and go to state 328


State 302

  155 break: T_BREAK opt_num ';' .

    $default  reduce using rule 155 (break)


State 303

  156 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 156 (continue)


State 304

   98 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 98 (shorthand_assignment_operator)


State 305

   99 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 99 (shorthand_assignment_operator)


State 306

   95 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 95 (shorthand_assignment_operator)


State 307

   96 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 96 (shorthand_assignment_operator)


State 308

   97 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 97 (shorthand_assignment_operator)


State 309

   93 shorthand_assignment: variable_reference $@8 shorthand_assignment_operator . expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 101
    expression              go to state 329
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 310

   90 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_OR           shift, and go to state 143
    T_AND          shift, and go to state 144
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160
    ']'            shift, and go to state 330


State 311

   89 assignment: assignment_target '.' T_IDENT . $@7 assignment_expression

    $default  reduce using rule 88 ($@7)

    $@7  go to state 331


State 312

  204 closing_paren: ')' .

    $default  reduce using rule 204 (closing_paren)


State 313

  206 call_expression: T_FUNC '(' @22 parameter_list closing_paren .

    $default  reduce using rule 206 (call_expression)


State 314

   50 non_empty_parameters: non_empty_parameters ',' parameter .

    $default  reduce using rule 50 (non_empty_parameters)


State 315

  220 map_associate: T_STRING ':' @26 . value

    T_IDENT                  shift, and go to state 300
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_VARIABLE               shift, and go to state 164
    '-'                      shift, and go to state 68

    value              go to state 332
    string             go to state 109
    boolean_literal    go to state 70
    float_literal      go to state 71
    integer_literal    go to state 72
    character_literal  go to state 73
    simple_literal     go to state 115


State 316

  218 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 218 (map_associates)


State 317

  107 range_increment: T_DOTDOT . binary_expression

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 333
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 318

  105 range_expression: binary_expression T_DOTDOT binary_expression $@9 range_increment .

    $default  reduce using rule 105 (range_expression)


State 319

  208 call_expression: function_id_or_pointer '(' @23 parameter_list closing_paren .

    $default  reduce using rule 208 (call_expression)


State 320

  181 for_to_clause: '(' opt_for_initializer $@12 . ';' binary_expression ';' $@13 for_increment $@14 ')'

    ';'  shift, and go to state 334


State 321

  184 opt_for_initializer: type_name variable_identifier . $@15 assignment_expression
  189 in_clause: '(' type_name variable_identifier . $@16 ':' expression ')'

    ':'       reduce using rule 188 ($@16)
    $default  reduce using rule 183 ($@15)

    $@15  go to state 335
    $@16  go to state 336


State 322

   68 block: '{' . var_decls stmntlist closing_brace
  194 local_block: '{' . stmntlist closing_brace
  214 map_constructor: '{' . @25 optional_map_associates '}'

    error              shift, and go to state 173
    T_FOR              shift, and go to state 174
    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_IDENT            shift, and go to state 175
    T_FUNC             shift, and go to state 91
    T_IF               shift, and go to state 176
    T_WHILE            shift, and go to state 177
    T_GOTO             shift, and go to state 178
    T_SWITCH           shift, and go to state 179
    T_BREAK            shift, and go to state 180
    T_CONTINUE         shift, and go to state 181
    T_RETURN           shift, and go to state 182
    T_VARIABLE         shift, and go to state 129
    '*'                shift, and go to state 97
    '['                shift, and go to state 98
    ';'                shift, and go to state 183
    '{'                shift, and go to state 184

    error              [reduce using rule 69 (var_decls)]
    T_FOR              [reduce using rule 69 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 69 (var_decls)]
    T_IDENT            [reduce using rule 69 (var_decls)]
    T_STRING           reduce using rule 213 (@25)
    T_FUNC             [reduce using rule 69 (var_decls)]
    T_IF               [reduce using rule 69 (var_decls)]
    T_WHILE            [reduce using rule 69 (var_decls)]
    T_GOTO             [reduce using rule 69 (var_decls)]
    T_SWITCH           [reduce using rule 69 (var_decls)]
    T_BREAK            [reduce using rule 69 (var_decls)]
    T_CONTINUE         [reduce using rule 69 (var_decls)]
    T_RETURN           [reduce using rule 69 (var_decls)]
    T_VARIABLE         [reduce using rule 69 (var_decls)]
    '*'                [reduce using rule 69 (var_decls)]
    '['                [reduce using rule 69 (var_decls)]
    ';'                [reduce using rule 69 (var_decls)]
    '{'                [reduce using rule 69 (var_decls)]
    '}'                reduce using rule 69 (var_decls)
    '}'                [reduce using rule 202 (stmntlist)]
    '}'                [reduce using rule 213 (@25)]

    variable_reference      go to state 185
    var_decl                go to state 269
    block                   go to state 187
    var_decls               go to state 122
    statement               go to state 188
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto_expression         go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    if_expression           go to state 201
    stmntlist               go to state 337
    call_expression         go to state 203
    array_constructor       go to state 111
    map_constructor         go to state 112
    @25                     go to state 135
    function_id_or_pointer  go to state 113
    type_name               go to state 31


State 323

  193 local_block: statement .

    $default  reduce using rule 193 (local_block)


State 324

  175 for_loop_expression: T_FOR for_clause $@11 local_block .

    $default  reduce using rule 175 (for_loop_expression)


State 325

  147 condition: '(' binary_expression ')' .

    $default  reduce using rule 147 (condition)


State 326

  198 if_expression: T_IF condition $@19 local_block . $@20 else_clause

    $default  reduce using rule 197 ($@20)

    $@20  go to state 338


State 327

  192 while: T_WHILE $@17 condition $@18 . local_block

    error              shift, and go to state 173
    T_FOR              shift, and go to state 174
    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_IDENT            shift, and go to state 175
    T_FUNC             shift, and go to state 91
    T_IF               shift, and go to state 176
    T_WHILE            shift, and go to state 177
    T_GOTO             shift, and go to state 178
    T_SWITCH           shift, and go to state 179
    T_BREAK            shift, and go to state 180
    T_CONTINUE         shift, and go to state 181
    T_RETURN           shift, and go to state 182
    T_VARIABLE         shift, and go to state 129
    '*'                shift, and go to state 97
    '['                shift, and go to state 98
    ';'                shift, and go to state 183
    '{'                shift, and go to state 322

    variable_reference      go to state 185
    var_decl                go to state 269
    block                   go to state 187
    statement               go to state 323
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto_expression         go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    local_block             go to state 339
    if_expression           go to state 201
    call_expression         go to state 203
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_name               go to state 31


State 328

  173 switch_expression: T_SWITCH '(' value ')' . $@10 '{' case_clauses '}'

    $default  reduce using rule 172 ($@10)

    $@10  go to state 340


State 329

   93 shorthand_assignment: variable_reference $@8 shorthand_assignment_operator expression .

    $default  reduce using rule 93 (shorthand_assignment)


State 330

   90 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 60

    assignment_expression  go to state 341


State 331

   89 assignment: assignment_target '.' T_IDENT $@7 . assignment_expression

    T_ASSIGN  shift, and go to state 60

    assignment_expression  go to state 342


State 332

  220 map_associate: T_STRING ':' @26 value .

    $default  reduce using rule 220 (map_associate)


State 333

  107 range_increment: T_DOTDOT binary_expression .
  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 107 (range_increment)


State 334

  181 for_to_clause: '(' opt_for_initializer $@12 ';' . binary_expression ';' $@13 for_increment $@14 ')'

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    variable_reference      go to state 101
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 343
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 335

  184 opt_for_initializer: type_name variable_identifier $@15 . assignment_expression

    T_ASSIGN  shift, and go to state 60

    assignment_expression  go to state 344


State 336

  189 in_clause: '(' type_name variable_identifier $@16 . ':' expression ')'

    ':'  shift, and go to state 345


State 337

  194 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 277

    closing_brace  go to state 346


State 338

  198 if_expression: T_IF condition $@19 local_block $@20 . else_clause

    T_ELSE  shift, and go to state 347

    T_ELSE    [reduce using rule 199 (else_clause)]
    $default  reduce using rule 199 (else_clause)

    else_clause  go to state 348


State 339

  192 while: T_WHILE $@17 condition $@18 local_block .

    $default  reduce using rule 192 (while)


State 340

  173 switch_expression: T_SWITCH '(' value ')' $@10 . '{' case_clauses '}'

    '{'  shift, and go to state 349


State 341

   90 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 90 (assignment)


State 342

   89 assignment: assignment_target '.' T_IDENT $@7 assignment_expression .

    $default  reduce using rule 89 (assignment)


State 343

  121 binary_expression: binary_expression . '.' T_IDENT
  123                  | binary_expression . '[' expression ']'
  124                  | binary_expression . '~' binary_expression
  125                  | binary_expression . T_NMATCH binary_expression
  126                  | binary_expression . '&' binary_expression
  127                  | binary_expression . '|' binary_expression
  128                  | binary_expression . '+' binary_expression
  129                  | binary_expression . '^' binary_expression
  130                  | binary_expression . '-' binary_expression
  131                  | binary_expression . '*' binary_expression
  132                  | binary_expression . '/' binary_expression
  133                  | binary_expression . '%' binary_expression
  134                  | binary_expression . T_SHIFT_LEFT binary_expression
  135                  | binary_expression . T_SHIFT_RIGHT binary_expression
  136                  | binary_expression . T_POWER_TO binary_expression
  137                  | binary_expression . T_AND binary_expression
  138                  | binary_expression . T_OR binary_expression
  139                  | binary_expression . '<' binary_expression
  140                  | binary_expression . '>' binary_expression
  141                  | binary_expression . T_LE binary_expression
  142                  | binary_expression . T_GE binary_expression
  143                  | binary_expression . T_EQ binary_expression
  144                  | binary_expression . T_NE binary_expression
  181 for_to_clause: '(' opt_for_initializer $@12 ';' binary_expression . ';' $@13 for_increment $@14 ')'

    T_NMATCH       shift, and go to state 138
    T_NE           shift, and go to state 139
    T_EQ           shift, and go to state 140
    T_SHIFT_LEFT   shift, and go to state 141
    T_SHIFT_RIGHT  shift, and go to state 142
    T_OR           shift, and go to state 143
    T_AND          shift, and go to state 144
    T_LE           shift, and go to state 145
    T_GE           shift, and go to state 146
    T_POWER_TO     shift, and go to state 147
    '&'            shift, and go to state 148
    '|'            shift, and go to state 149
    '^'            shift, and go to state 150
    '~'            shift, and go to state 151
    '<'            shift, and go to state 152
    '>'            shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '*'            shift, and go to state 156
    '/'            shift, and go to state 157
    '%'            shift, and go to state 158
    '['            shift, and go to state 159
    '.'            shift, and go to state 160
    ';'            shift, and go to state 350


State 344

  184 opt_for_initializer: type_name variable_identifier $@15 assignment_expression .

    $default  reduce using rule 184 (opt_for_initializer)


State 345

  189 in_clause: '(' type_name variable_identifier $@16 ':' . expression ')'

    T_NEW                    shift, and go to state 88
    T_IDENT                  shift, and go to state 89
    T_NUM                    shift, and go to state 62
    T_FLOATING_POINT_NUMBER  shift, and go to state 63
    T_STRING                 shift, and go to state 90
    T_CHARACTER              shift, and go to state 65
    T_TRUE                   shift, and go to state 66
    T_FALSE                  shift, and go to state 67
    T_FUNC                   shift, and go to state 91
    T_VARIABLE               shift, and go to state 92
    '!'                      shift, and go to state 93
    '~'                      shift, and go to state 94
    '+'                      shift, and go to state 95
    '-'                      shift, and go to state 96
    '*'                      shift, and go to state 97
    '['                      shift, and go to state 98
    '('                      shift, and go to state 99
    '{'                      shift, and go to state 100

    $default  reduce using rule 103 (range_expression)

    variable_reference      go to state 101
    expression              go to state 351
    range_expression        go to state 103
    simple_term             go to state 104
    constructor_expression  go to state 105
    unary_expression        go to state 106
    binary_expression       go to state 107
    value                   go to state 108
    string                  go to state 109
    call_expression         go to state 110
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_cast               go to state 114
    boolean_literal         go to state 70
    float_literal           go to state 71
    integer_literal         go to state 72
    character_literal       go to state 73
    simple_literal          go to state 115


State 346

  194 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 194 (local_block)


State 347

  201 else_clause: T_ELSE . $@21 local_block

    $default  reduce using rule 200 ($@21)

    $@21  go to state 352


State 348

  198 if_expression: T_IF condition $@19 local_block $@20 else_clause .

    $default  reduce using rule 198 (if_expression)


State 349

  173 switch_expression: T_SWITCH '(' value ')' $@10 '{' . case_clauses '}'

    T_CASE     shift, and go to state 353
    T_DEFAULT  shift, and go to state 354

    $default  reduce using rule 162 (case_clauses)

    case_clauses   go to state 355
    case_clause    go to state 356
    case_selector  go to state 357


State 350

  181 for_to_clause: '(' opt_for_initializer $@12 ';' binary_expression ';' . $@13 for_increment $@14 ')'

    $default  reduce using rule 179 ($@13)

    $@13  go to state 358


State 351

  189 in_clause: '(' type_name variable_identifier $@16 ':' expression . ')'

    ')'  shift, and go to state 359


State 352

  201 else_clause: T_ELSE $@21 . local_block

    error              shift, and go to state 173
    T_FOR              shift, and go to state 174
    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_IDENT            shift, and go to state 175
    T_FUNC             shift, and go to state 91
    T_IF               shift, and go to state 176
    T_WHILE            shift, and go to state 177
    T_GOTO             shift, and go to state 178
    T_SWITCH           shift, and go to state 179
    T_BREAK            shift, and go to state 180
    T_CONTINUE         shift, and go to state 181
    T_RETURN           shift, and go to state 182
    T_VARIABLE         shift, and go to state 129
    '*'                shift, and go to state 97
    '['                shift, and go to state 98
    ';'                shift, and go to state 183
    '{'                shift, and go to state 322

    variable_reference      go to state 185
    var_decl                go to state 269
    block                   go to state 187
    statement               go to state 323
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto_expression         go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    local_block             go to state 360
    if_expression           go to state 201
    call_expression         go to state 203
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_name               go to state 31


State 353

  165 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 361
    T_STRING  shift, and go to state 362
    '-'       shift, and go to state 68

    case_condition   go to state 363
    integer_literal  go to state 364


State 354

  166 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 365


State 355

  173 switch_expression: T_SWITCH '(' value ')' $@10 '{' case_clauses . '}'

    '}'  shift, and go to state 366


State 356

  163 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 353
    T_DEFAULT  shift, and go to state 354

    $default  reduce using rule 162 (case_clauses)

    case_clauses   go to state 367
    case_clause    go to state 356
    case_selector  go to state 357


State 357

  164 case_clause: case_selector . stmntlist

    error              shift, and go to state 173
    T_FOR              shift, and go to state 174
    T_TYPE_IDENTIFIER  shift, and go to state 29
    T_IDENT            shift, and go to state 175
    T_FUNC             shift, and go to state 91
    T_IF               shift, and go to state 176
    T_WHILE            shift, and go to state 177
    T_GOTO             shift, and go to state 178
    T_SWITCH           shift, and go to state 179
    T_BREAK            shift, and go to state 180
    T_CONTINUE         shift, and go to state 181
    T_RETURN           shift, and go to state 182
    T_VARIABLE         shift, and go to state 129
    '*'                shift, and go to state 97
    '['                shift, and go to state 98
    ';'                shift, and go to state 183
    '{'                shift, and go to state 184

    T_CASE     reduce using rule 202 (stmntlist)
    T_DEFAULT  reduce using rule 202 (stmntlist)
    '}'        reduce using rule 202 (stmntlist)

    variable_reference      go to state 185
    var_decl                go to state 269
    block                   go to state 187
    statement               go to state 188
    assignment              go to state 189
    shorthand_assignment    go to state 190
    assignment_target       go to state 191
    increment_expression    go to state 192
    break                   go to state 193
    continue                go to state 194
    return_expression       go to state 195
    label                   go to state 196
    goto_expression         go to state 197
    switch_expression       go to state 198
    for_loop_expression     go to state 199
    while                   go to state 200
    if_expression           go to state 201
    stmntlist               go to state 368
    call_expression         go to state 203
    array_constructor       go to state 111
    map_constructor         go to state 112
    function_id_or_pointer  go to state 113
    type_name               go to state 31


State 358

  181 for_to_clause: '(' opt_for_initializer $@12 ';' binary_expression ';' $@13 . for_increment $@14 ')'

    T_IDENT     shift, and go to state 128
    T_VARIABLE  shift, and go to state 129

    variable_reference    go to state 369
    shorthand_assignment  go to state 370
    increment_expression  go to state 371
    for_increment         go to state 372


State 359

  189 in_clause: '(' type_name variable_identifier $@16 ':' expression ')' .

    $default  reduce using rule 189 (in_clause)


State 360

  201 else_clause: T_ELSE $@21 local_block .

    $default  reduce using rule 201 (else_clause)


State 361

  169 case_condition: T_NUM . T_DOTDOT T_NUM
  233 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 373

    $default  reduce using rule 233 (integer_literal)


State 362

  168 case_condition: T_STRING .

    $default  reduce using rule 168 (case_condition)


State 363

  165 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 374


State 364

  167 case_condition: integer_literal .

    $default  reduce using rule 167 (case_condition)


State 365

  166 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 166 (case_selector)


State 366

  173 switch_expression: T_SWITCH '(' value ')' $@10 '{' case_clauses '}' .

    $default  reduce using rule 173 (switch_expression)


State 367

  163 case_clauses: case_clause case_clauses .

    $default  reduce using rule 163 (case_clauses)


State 368

  164 case_clause: case_selector stmntlist .

    $default  reduce using rule 164 (case_clause)


State 369

   93 shorthand_assignment: variable_reference . $@8 shorthand_assignment_operator expression
  110 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 263
    T_MINUSMINUS  shift, and go to state 264

    $default  reduce using rule 92 ($@8)

    $@8                  go to state 265
    minusminus_plusplus  go to state 267


State 370

  177 for_increment: shorthand_assignment .

    $default  reduce using rule 177 (for_increment)


State 371

  176 for_increment: increment_expression .

    $default  reduce using rule 176 (for_increment)


State 372

  181 for_to_clause: '(' opt_for_initializer $@12 ';' binary_expression ';' $@13 for_increment . $@14 ')'

    $default  reduce using rule 180 ($@14)

    $@14  go to state 375


State 373

  169 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 376


State 374

  165 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 165 (case_selector)


State 375

  181 for_to_clause: '(' opt_for_initializer $@12 ';' binary_expression ';' $@13 for_increment $@14 . ')'

    ')'  shift, and go to state 377


State 376

  169 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 169 (case_condition)


State 377

  181 for_to_clause: '(' opt_for_initializer $@12 ';' binary_expression ';' $@13 for_increment $@14 ')' .

    $default  reduce using rule 181 (for_to_clause)
