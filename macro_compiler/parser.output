State 13 conflicts: 1 shift/reduce, 1 reduce/reduce
State 78 conflicts: 9 shift/reduce
State 132 conflicts: 24 shift/reduce
State 164 conflicts: 1 reduce/reduce
State 222 conflicts: 1 reduce/reduce
State 224 conflicts: 1 shift/reduce
State 243 conflicts: 1 reduce/reduce
State 256 conflicts: 23 shift/reduce
State 280 conflicts: 1 reduce/reduce
State 327 conflicts: 1 shift/reduce
State 336 conflicts: 2 shift/reduce
State 361 conflicts: 17 shift/reduce, 2 reduce/reduce
State 377 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites $@2 global_declarations header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | element_with_annotations macro_definitions

    8 element_with_annotations: annotations macro_or_native_function

    9 macro_or_native_function: native_function_definition ';'
   10                         | macro_definition

   11 namespace: %empty
   12          | T_NAMESPACE T_IDENT ';'

   13 prerequisites: %empty
   14              | prerequisites require

   15 require: T_REQUIRE T_STRING ';'

   16 global_declarations: %empty
   17                    | global_declarations constants ';'
   18                    | global_declarations global_var ';'
   19                    | global_declarations T_TYPEDEF typedef ';'

   20 typedef: enum_definition
   21        | struct_definition
   22        | native_type_definition

   23 $@3: %empty

   24 struct_definition: T_STRUCT $@3 '{' struct_element_definitions '}' typedef_identifier

   25 $@4: %empty

   26 enum_definition: T_ENUM $@4 '{' enum_value_definitions '}' typedef_identifier

   27 $@5: %empty

   28 native_type_definition: T_NATIVE $@5 typedef_identifier

   29 typedef_identifier: T_IDENT
   30                   | T_TYPE_IDENTIFIER

   31 struct_element_definitions: struct_element
   32                           | struct_element struct_element_definitions

   33 struct_element: type_name variable_identifier ';'

   34 enum_value_definitions: %empty
   35                       | enum_values

   36 enum_values: enum_value
   37            | enum_value ',' enum_values

   38 enum_value: T_IDENT opt_enum_assignment

   39 opt_enum_assignment: %empty
   40                    | T_ASSIGN T_NUM
   41                    | T_ASSIGN '-' T_NUM

   42 scope: %empty
   43      | T_STATIC

   44 constants: T_CONST constant_list

   45 constant_list: constdef
   46              | constant_list ',' constdef

   47 $@6: %empty

   48 $@7: %empty

   49 constdef: $@6 variable_identifier T_ASSIGN constant_literal $@7

   50 constant_literal: simple_literal
   51                 | T_STRING

   52 variable_identifier: T_IDENT
   53                    | T_NUM
   54                    | T_STRING

   55 variable_reference: T_VARIABLE
   56                   | T_IDENT

   57 macro_declaration: T_IDENT
   58                  | T_FUNC

   59 macro_type: scope T_VOID
   60           | scope type_name

   61 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description

   62 global_var: scope var_decl

   63 var_decl: type_name variable_identifier assignment_expression
   64         | type_name variable_identifier

   65 optional_description: %empty
   66                     | T_STRING

   67 argument_list: %empty
   68              | non_empty_arguments

   69 non_empty_arguments: argument_declaration
   70                    | non_empty_arguments ',' argument_declaration

   71 parameter_list: %empty
   72               | non_empty_parameters

   73 non_empty_parameters: parameter
   74                     | non_empty_parameters ',' parameter
   75                     | error

   76 argument_declaration: type_name variable_identifier
   77                     | T_ELLIPSIS

   78 annotations: %empty
   79            | annotation annotations

   80 $@8: %empty

   81 annotation: T_ANNOTATION $@8 '(' annotation_values ')'

   82 annotation_value: T_IDENT T_ASSIGN T_STRING
   83                 | T_IDENT
   84                 | T_STRING

   85 annotation_values: %empty
   86                  | annotation_value
   87                  | annotation_value ',' annotation_values

   88 $@9: %empty

   89 native_function_definition: T_NATIVE $@9 macrostart

   90 $@10: %empty

   91 macro_definition: $@10 macrostart block

   92 block: '{' var_decls stmntlist closing_brace

   93 var_decls: %empty
   94          | var_decls var_decl ';'

   95 statement: ';'
   96          | call_expression ';'
   97          | assignment ';'
   98          | if_expression
   99          | while
  100          | for_loop_expression
  101          | switch_expression
  102          | break
  103          | continue
  104          | return_expression ';'
  105          | goto_expression ';'
  106          | block
  107          | increment_expression ';'
  108          | label
  109          | var_decl
  110          | error ';'

  111 assignment: variable_reference assignment_expression

  112 $@11: %empty

  113 assignment: assignment_target '.' T_IDENT $@11 assignment_expression
  114           | assignment_target '[' binary_expression ']' assignment_expression
  115           | shorthand_assignment

  116 $@12: %empty

  117 shorthand_assignment: variable_reference $@12 shorthand_assignment_operator expression

  118 assignment_target: variable_reference

  119 shorthand_assignment_operator: T_SH_ASSIGN_MULT
  120                              | T_SH_ASSIGN_DIV
  121                              | T_SH_ASSIGN_MOD
  122                              | T_SH_ASSIGN_PLUS
  123                              | T_SH_ASSIGN_MINUS

  124 assignment_expression: T_ASSIGN expression

  125 expression: binary_expression
  126           | range_expression

  127 range_expression: %empty

  128 $@13: %empty

  129 range_expression: binary_expression T_DOTDOT binary_expression $@13 range_increment

  130 range_increment: %empty
  131                | T_DOTDOT binary_expression

  132 minusminus_plusplus: T_MINUSMINUS
  133                    | T_PLUSPLUS

  134 increment_expression: variable_reference minusminus_plusplus

  135 simple_term: value
  136            | call_expression
  137            | constructor_expression

  138 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

  139 unary_expression: '!' binary_expression
  140                 | '~' binary_expression
  141                 | '+' binary_expression
  142                 | '-' variable_reference

  143 binary_expression: simple_term
  144                  | type_cast simple_term
  145                  | binary_expression '.' T_IDENT
  146                  | unary_expression
  147                  | binary_expression '[' expression ']'
  148                  | binary_expression '~' binary_expression
  149                  | binary_expression T_NMATCH binary_expression
  150                  | binary_expression '&' binary_expression
  151                  | binary_expression '|' binary_expression
  152                  | binary_expression '+' binary_expression
  153                  | binary_expression '^' binary_expression
  154                  | binary_expression '-' binary_expression
  155                  | binary_expression '*' binary_expression
  156                  | binary_expression '/' binary_expression
  157                  | binary_expression '%' binary_expression
  158                  | binary_expression T_SHIFT_LEFT binary_expression
  159                  | binary_expression T_SHIFT_RIGHT binary_expression
  160                  | binary_expression T_POWER_TO binary_expression
  161                  | binary_expression T_AND binary_expression
  162                  | binary_expression T_OR binary_expression
  163                  | binary_expression '<' binary_expression
  164                  | binary_expression '>' binary_expression
  165                  | binary_expression T_LE binary_expression
  166                  | binary_expression T_GE binary_expression
  167                  | binary_expression T_EQ binary_expression
  168                  | binary_expression T_NE binary_expression
  169                  | '(' binary_expression ')'
  170                  | variable_reference assignment_expression

  171 condition: '(' binary_expression ')'
  172          | '(' binary_expression

  173 value: T_VARIABLE
  174      | string
  175      | simple_literal
  176      | T_IDENT

  177 string: T_STRING
  178       | string T_STRING

  179 break: T_BREAK opt_num ';'

  180 continue: T_CONTINUE opt_num ';'

  181 return_expression: T_RETURN optional_bterm

  182 optional_bterm: %empty
  183               | binary_expression

  184 opt_num: %empty
  185        | T_NUM

  186 case_clauses: %empty
  187             | case_clause case_clauses

  188 case_clause: case_selector stmntlist

  189 case_selector: T_CASE case_condition ':'
  190              | T_DEFAULT ':'

  191 case_condition: integer_literal
  192               | T_STRING
  193               | T_NUM T_DOTDOT T_NUM

  194 label: T_IDENT ':'

  195 goto_expression: T_GOTO T_IDENT

  196 $@14: %empty

  197 switch_expression: T_SWITCH '(' value ')' $@14 '{' case_clauses '}'

  198 $@15: %empty

  199 for_loop_expression: T_FOR for_clause $@15 local_block

  200 for_increment: increment_expression
  201              | shorthand_assignment

  202 $@16: %empty

  203 $@17: %empty

  204 $@18: %empty

  205 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment $@18 ')'

  206 opt_for_initializer: %empty

  207 $@19: %empty

  208 opt_for_initializer: type_name variable_identifier $@19 assignment_expression

  209 for_clause: for_to_clause
  210           | in_clause
  211           | error

  212 $@20: %empty

  213 in_clause: '(' type_name variable_identifier $@20 ':' expression ')'

  214 $@21: %empty

  215 $@22: %empty

  216 while: T_WHILE $@21 condition $@22 local_block

  217 local_block: statement
  218            | '{' stmntlist closing_brace

  219 closing_brace: '}'

  220 $@23: %empty

  221 $@24: %empty

  222 if_expression: T_IF condition $@23 local_block $@24 else_clause

  223 else_clause: %empty

  224 $@25: %empty

  225 else_clause: T_ELSE $@25 local_block

  226 stmntlist: %empty
  227          | statement stmntlist

  228 closing_paren: ')'

  229 @26: %empty

  230 call_expression: T_FUNC '(' @26 parameter_list closing_paren

  231 @27: %empty

  232 call_expression: function_id_or_pointer '(' @27 parameter_list closing_paren
  233                | array_constructor
  234                | map_constructor

  235 @28: %empty

  236 array_constructor: '[' @28 parameter_list ']'

  237 @29: %empty

  238 map_constructor: '{' @29 optional_map_associates '}'

  239 optional_map_associates: %empty
  240                        | map_associates

  241 map_associates: map_associate
  242               | map_associates ',' map_associate

  243 @30: %empty

  244 map_associate: T_STRING ':' @30 value

  245 function_id_or_pointer: '*' variable_reference
  246                       | T_IDENT

  247 parameter: expression
  248          | T_ELLIPSIS expression

  249 type_cast: '(' type_name ')'

  250 type_name: T_TYPE_IDENTIFIER
  251          | T_TYPE_IDENTIFIER array_size

  252 array_size: '[' ']'
  253           | '[' T_NUM ']'

  254 boolean_literal: T_TRUE
  255                | T_FALSE

  256 float_literal: T_FLOATING_POINT_NUMBER

  257 integer_literal: T_NUM
  258                | '-' T_NUM

  259 character_literal: T_CHARACTER

  260 simple_literal: integer_literal
  261               | float_literal
  262               | character_literal
  263               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 139
    '%' (37) 157
    '&' (38) 150
    '(' (40) 61 81 138 169 171 172 197 205 213 230 232 249
    ')' (41) 61 81 138 169 171 197 205 213 228 249
    '*' (42) 155 245
    '+' (43) 141 152
    ',' (44) 37 46 70 74 87 242
    '-' (45) 41 142 154 258
    '.' (46) 113 145
    '/' (47) 156
    ':' (58) 189 190 194 213 244
    ';' (59) 9 12 15 17 18 19 33 94 95 96 97 104 105 107 110 179 180 205
    '<' (60) 163
    '>' (62) 164
    '[' (91) 114 147 236 252 253
    ']' (93) 114 147 236 252 253
    '^' (94) 153
    '{' (123) 24 26 92 197 218 238
    '|' (124) 151
    '}' (125) 24 26 197 219 238
    '~' (126) 140 148
    error (256) 75 110 211
    T_NAMESPACE (258) 12
    T_TYPEDEF (259) 19
    T_ENUM (260) 26
    T_STRUCT (261) 24
    T_REQUIRE (262) 15
    T_FOR (263) 199
    T_ANNOTATION (264) 81
    T_NATIVE (265) 28 89
    T_NEW (266) 138
    T_STATIC (267) 43
    T_VOID (268) 59
    T_TYPE_IDENTIFIER (269) 30 138 250 251
    T_ELLIPSIS (270) 77 248
    T_IDENT (271) 12 29 38 52 56 57 82 83 113 145 176 194 195 246
    T_NUM (272) 40 41 53 185 193 253 257 258
    T_FLOATING_POINT_NUMBER (273) 256
    T_STRING (274) 15 51 54 66 82 84 177 178 192 244
    T_CHARACTER (275) 259
    T_CONST (276) 44
    T_TRUE (277) 254
    T_FALSE (278) 255
    T_FUNC (279) 58 230
    T_DOTDOT (280) 129 131 193
    T_PLUSPLUS (281) 133
    T_MINUSMINUS (282) 132
    T_IF (283) 222
    T_ELSE (284) 225
    T_WHILE (285) 216
    T_GOTO (286) 195
    T_SH_ASSIGN_PLUS (287) 122
    T_SH_ASSIGN_MINUS (288) 123
    T_SH_ASSIGN_MULT (289) 119
    T_SH_ASSIGN_DIV (290) 120
    T_SH_ASSIGN_MOD (291) 121
    T_SWITCH (292) 197
    T_CASE (293) 189
    T_DEFAULT (294) 190
    T_BREAK (295) 179
    T_CONTINUE (296) 180
    T_RETURN (297) 181
    T_VARIABLE (298) 55 173
    T_NMATCH (299) 149
    T_ASSIGN (300) 40 41 49 82 124
    T_NE (301) 168
    T_EQ (302) 167
    T_SHIFT_LEFT (303) 158
    T_SHIFT_RIGHT (304) 159
    T_OR (305) 162
    T_AND (306) 161
    T_LE (307) 165
    T_GE (308) 166
    T_POWER_TO (309) 160


Nonterminals, with rules where they appear

    $accept (77)
        on left: 0
    file_structure (78)
        on left: 3
        on right: 0
    $@1 (79)
        on left: 1
        on right: 3
    $@2 (80)
        on left: 2
        on right: 3
    header_delimiter (81)
        on left: 4 5
        on right: 3
    macro_definitions (82)
        on left: 6 7
        on right: 3 7
    element_with_annotations (83)
        on left: 8
        on right: 7
    macro_or_native_function (84)
        on left: 9 10
        on right: 8
    namespace (85)
        on left: 11 12
        on right: 3
    prerequisites (86)
        on left: 13 14
        on right: 3 14
    require (87)
        on left: 15
        on right: 14
    global_declarations (88)
        on left: 16 17 18 19
        on right: 3 17 18 19
    typedef (89)
        on left: 20 21 22
        on right: 19
    struct_definition (90)
        on left: 24
        on right: 21
    $@3 (91)
        on left: 23
        on right: 24
    enum_definition (92)
        on left: 26
        on right: 20
    $@4 (93)
        on left: 25
        on right: 26
    native_type_definition (94)
        on left: 28
        on right: 22
    $@5 (95)
        on left: 27
        on right: 28
    typedef_identifier (96)
        on left: 29 30
        on right: 24 26 28
    struct_element_definitions (97)
        on left: 31 32
        on right: 24 32
    struct_element (98)
        on left: 33
        on right: 31 32
    enum_value_definitions (99)
        on left: 34 35
        on right: 26
    enum_values (100)
        on left: 36 37
        on right: 35 37
    enum_value (101)
        on left: 38
        on right: 36 37
    opt_enum_assignment (102)
        on left: 39 40 41
        on right: 38
    scope (103)
        on left: 42 43
        on right: 59 60 62
    constants (104)
        on left: 44
        on right: 17
    constant_list (105)
        on left: 45 46
        on right: 44 46
    constdef (106)
        on left: 49
        on right: 45 46
    $@6 (107)
        on left: 47
        on right: 49
    $@7 (108)
        on left: 48
        on right: 49
    constant_literal (109)
        on left: 50 51
        on right: 49
    variable_identifier (110)
        on left: 52 53 54
        on right: 33 49 63 64 76 208 213
    variable_reference (111)
        on left: 55 56
        on right: 111 117 118 134 142 170 245
    macro_declaration (112)
        on left: 57 58
        on right: 61
    macro_type (113)
        on left: 59 60
        on right: 61
    macrostart (114)
        on left: 61
        on right: 89 91
    global_var (115)
        on left: 62
        on right: 18
    var_decl (116)
        on left: 63 64
        on right: 62 94 109
    optional_description (117)
        on left: 65 66
        on right: 61
    argument_list (118)
        on left: 67 68
        on right: 61
    non_empty_arguments (119)
        on left: 69 70
        on right: 68 70
    parameter_list (120)
        on left: 71 72
        on right: 230 232 236
    non_empty_parameters (121)
        on left: 73 74 75
        on right: 72 74
    argument_declaration (122)
        on left: 76 77
        on right: 69 70
    annotations (123)
        on left: 78 79
        on right: 8 79
    annotation (124)
        on left: 81
        on right: 79
    $@8 (125)
        on left: 80
        on right: 81
    annotation_value (126)
        on left: 82 83 84
        on right: 86 87
    annotation_values (127)
        on left: 85 86 87
        on right: 81 87
    native_function_definition (128)
        on left: 89
        on right: 9
    $@9 (129)
        on left: 88
        on right: 89
    macro_definition (130)
        on left: 91
        on right: 10
    $@10 (131)
        on left: 90
        on right: 91
    block (132)
        on left: 92
        on right: 91 106
    var_decls (133)
        on left: 93 94
        on right: 92 94
    statement (134)
        on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
        on right: 217 227
    assignment (135)
        on left: 111 113 114 115
        on right: 97
    $@11 (136)
        on left: 112
        on right: 113
    shorthand_assignment (137)
        on left: 117
        on right: 115 201
    $@12 (138)
        on left: 116
        on right: 117
    assignment_target (139)
        on left: 118
        on right: 113 114
    shorthand_assignment_operator (140)
        on left: 119 120 121 122 123
        on right: 117
    assignment_expression (141)
        on left: 124
        on right: 63 111 113 114 170 208
    expression (142)
        on left: 125 126
        on right: 117 124 147 213 247 248
    range_expression (143)
        on left: 127 129
        on right: 126
    $@13 (144)
        on left: 128
        on right: 129
    range_increment (145)
        on left: 130 131
        on right: 129
    minusminus_plusplus (146)
        on left: 132 133
        on right: 134
    increment_expression (147)
        on left: 134
        on right: 107 200
    simple_term (148)
        on left: 135 136 137
        on right: 143 144
    constructor_expression (149)
        on left: 138
        on right: 137
    unary_expression (150)
        on left: 139 140 141 142
        on right: 146
    binary_expression (151)
        on left: 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170
        on right: 114 125 129 131 139 140 141 145 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 171 172 183 205
    condition (152)
        on left: 171 172
        on right: 216 222
    value (153)
        on left: 173 174 175 176
        on right: 135 197 244
    string (154)
        on left: 177 178
        on right: 174 178
    break (155)
        on left: 179
        on right: 102
    continue (156)
        on left: 180
        on right: 103
    return_expression (157)
        on left: 181
        on right: 104
    optional_bterm (158)
        on left: 182 183
        on right: 181
    opt_num (159)
        on left: 184 185
        on right: 179 180
    case_clauses (160)
        on left: 186 187
        on right: 187 197
    case_clause (161)
        on left: 188
        on right: 187
    case_selector (162)
        on left: 189 190
        on right: 188
    case_condition (163)
        on left: 191 192 193
        on right: 189
    label (164)
        on left: 194
        on right: 108
    goto_expression (165)
        on left: 195
        on right: 105
    switch_expression (166)
        on left: 197
        on right: 101
    $@14 (167)
        on left: 196
        on right: 197
    for_loop_expression (168)
        on left: 199
        on right: 100
    $@15 (169)
        on left: 198
        on right: 199
    for_increment (170)
        on left: 200 201
        on right: 205
    for_to_clause (171)
        on left: 205
        on right: 209
    $@16 (172)
        on left: 202
        on right: 205
    $@17 (173)
        on left: 203
        on right: 205
    $@18 (174)
        on left: 204
        on right: 205
    opt_for_initializer (175)
        on left: 206 208
        on right: 205
    $@19 (176)
        on left: 207
        on right: 208
    for_clause (177)
        on left: 209 210 211
        on right: 199
    in_clause (178)
        on left: 213
        on right: 210
    $@20 (179)
        on left: 212
        on right: 213
    while (180)
        on left: 216
        on right: 99
    $@21 (181)
        on left: 214
        on right: 216
    $@22 (182)
        on left: 215
        on right: 216
    local_block (183)
        on left: 217 218
        on right: 199 216 222 225
    closing_brace (184)
        on left: 219
        on right: 92 218
    if_expression (185)
        on left: 222
        on right: 98
    $@23 (186)
        on left: 220
        on right: 222
    $@24 (187)
        on left: 221
        on right: 222
    else_clause (188)
        on left: 223 225
        on right: 222
    $@25 (189)
        on left: 224
        on right: 225
    stmntlist (190)
        on left: 226 227
        on right: 92 188 218 227
    closing_paren (191)
        on left: 228
        on right: 230 232
    call_expression (192)
        on left: 230 232 233 234
        on right: 96 136
    @26 (193)
        on left: 229
        on right: 230
    @27 (194)
        on left: 231
        on right: 232
    array_constructor (195)
        on left: 236
        on right: 233
    @28 (196)
        on left: 235
        on right: 236
    map_constructor (197)
        on left: 238
        on right: 234
    @29 (198)
        on left: 237
        on right: 238
    optional_map_associates (199)
        on left: 239 240
        on right: 238
    map_associates (200)
        on left: 241 242
        on right: 240 242
    map_associate (201)
        on left: 244
        on right: 241 242
    @30 (202)
        on left: 243
        on right: 244
    function_id_or_pointer (203)
        on left: 245 246
        on right: 232
    parameter (204)
        on left: 247 248
        on right: 73 74
    type_cast (205)
        on left: 249
        on right: 144
    type_name (206)
        on left: 250 251
        on right: 33 60 63 64 76 208 213 249
    array_size (207)
        on left: 252 253
        on right: 251
    boolean_literal (208)
        on left: 254 255
        on right: 263
    float_literal (209)
        on left: 256
        on right: 261
    integer_literal (210)
        on left: 257 258
        on right: 191 260
    character_literal (211)
        on left: 259
        on right: 262
    simple_literal (212)
        on left: 260 261 262 263
        on right: 50 175


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites $@2 global_declarations header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 11 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

   12 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites $@2 global_declarations header_delimiter macro_definitions

    $default  reduce using rule 13 (prerequisites)

    prerequisites  go to state 7


State 6

   12 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . $@2 global_declarations header_delimiter macro_definitions
   14 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 2 ($@2)

    $@2      go to state 10
    require  go to state 11


State 8

   12 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 12 (namespace)


State 9

   15 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

    3 file_structure: $@1 namespace prerequisites $@2 . global_declarations header_delimiter macro_definitions

    $default  reduce using rule 16 (global_declarations)

    global_declarations  go to state 13


State 11

   14 prerequisites: prerequisites require .

    $default  reduce using rule 14 (prerequisites)


State 12

   15 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 14


State 13

    3 file_structure: $@1 namespace prerequisites $@2 global_declarations . header_delimiter macro_definitions
   17 global_declarations: global_declarations . constants ';'
   18                    | global_declarations . global_var ';'
   19                    | global_declarations . T_TYPEDEF typedef ';'

    T_TYPEDEF  shift, and go to state 15
    T_STATIC   shift, and go to state 16
    T_CONST    shift, and go to state 17
    '!'        shift, and go to state 18

    T_STATIC           [reduce using rule 4 (header_delimiter)]
    T_TYPE_IDENTIFIER  reduce using rule 4 (header_delimiter)
    T_TYPE_IDENTIFIER  [reduce using rule 42 (scope)]
    $default           reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 19
    scope             go to state 20
    constants         go to state 21
    global_var        go to state 22


State 14

   15 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 15 (require)


State 15

   19 global_declarations: global_declarations T_TYPEDEF . typedef ';'

    T_ENUM    shift, and go to state 23
    T_STRUCT  shift, and go to state 24
    T_NATIVE  shift, and go to state 25

    typedef                 go to state 26
    struct_definition       go to state 27
    enum_definition         go to state 28
    native_type_definition  go to state 29


State 16

   43 scope: T_STATIC .

    $default  reduce using rule 43 (scope)


State 17

   44 constants: T_CONST . constant_list

    $default  reduce using rule 47 ($@6)

    constant_list  go to state 30
    constdef       go to state 31
    $@6            go to state 32


State 18

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 19

    3 file_structure: $@1 namespace prerequisites $@2 global_declarations header_delimiter . macro_definitions

    T_ANNOTATION  shift, and go to state 33

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 78 (annotations)

    macro_definitions         go to state 34
    element_with_annotations  go to state 35
    annotations               go to state 36
    annotation                go to state 37


State 20

   62 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 38

    var_decl   go to state 39
    type_name  go to state 40


State 21

   17 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 41


State 22

   18 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 42


State 23

   26 enum_definition: T_ENUM . $@4 '{' enum_value_definitions '}' typedef_identifier

    $default  reduce using rule 25 ($@4)

    $@4  go to state 43


State 24

   24 struct_definition: T_STRUCT . $@3 '{' struct_element_definitions '}' typedef_identifier

    $default  reduce using rule 23 ($@3)

    $@3  go to state 44


State 25

   28 native_type_definition: T_NATIVE . $@5 typedef_identifier

    $default  reduce using rule 27 ($@5)

    $@5  go to state 45


State 26

   19 global_declarations: global_declarations T_TYPEDEF typedef . ';'

    ';'  shift, and go to state 46


State 27

   21 typedef: struct_definition .

    $default  reduce using rule 21 (typedef)


State 28

   20 typedef: enum_definition .

    $default  reduce using rule 20 (typedef)


State 29

   22 typedef: native_type_definition .

    $default  reduce using rule 22 (typedef)


State 30

   44 constants: T_CONST constant_list .
   46 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 47

    $default  reduce using rule 44 (constants)


State 31

   45 constant_list: constdef .

    $default  reduce using rule 45 (constant_list)


State 32

   49 constdef: $@6 . variable_identifier T_ASSIGN constant_literal $@7

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 51


State 33

   81 annotation: T_ANNOTATION . $@8 '(' annotation_values ')'

    $default  reduce using rule 80 ($@8)

    $@8  go to state 52


State 34

    3 file_structure: $@1 namespace prerequisites $@2 global_declarations header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 35

    7 macro_definitions: element_with_annotations . macro_definitions

    T_ANNOTATION  shift, and go to state 33

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 78 (annotations)

    macro_definitions         go to state 53
    element_with_annotations  go to state 35
    annotations               go to state 36
    annotation                go to state 37


State 36

    8 element_with_annotations: annotations . macro_or_native_function

    T_NATIVE  shift, and go to state 54

    $default  reduce using rule 90 ($@10)

    macro_or_native_function    go to state 55
    native_function_definition  go to state 56
    macro_definition            go to state 57
    $@10                        go to state 58


State 37

   79 annotations: annotation . annotations

    T_ANNOTATION  shift, and go to state 33

    $default  reduce using rule 78 (annotations)

    annotations  go to state 59
    annotation   go to state 37


State 38

  250 type_name: T_TYPE_IDENTIFIER .
  251          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 60

    $default  reduce using rule 250 (type_name)

    array_size  go to state 61


State 39

   62 global_var: scope var_decl .

    $default  reduce using rule 62 (global_var)


State 40

   63 var_decl: type_name . variable_identifier assignment_expression
   64         | type_name . variable_identifier

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 62


State 41

   17 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 17 (global_declarations)


State 42

   18 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 18 (global_declarations)


State 43

   26 enum_definition: T_ENUM $@4 . '{' enum_value_definitions '}' typedef_identifier

    '{'  shift, and go to state 63


State 44

   24 struct_definition: T_STRUCT $@3 . '{' struct_element_definitions '}' typedef_identifier

    '{'  shift, and go to state 64


State 45

   28 native_type_definition: T_NATIVE $@5 . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 65
    T_IDENT            shift, and go to state 66

    typedef_identifier  go to state 67


State 46

   19 global_declarations: global_declarations T_TYPEDEF typedef ';' .

    $default  reduce using rule 19 (global_declarations)


State 47

   46 constant_list: constant_list ',' . constdef

    $default  reduce using rule 47 ($@6)

    constdef  go to state 68
    $@6       go to state 32


State 48

   52 variable_identifier: T_IDENT .

    $default  reduce using rule 52 (variable_identifier)


State 49

   53 variable_identifier: T_NUM .

    $default  reduce using rule 53 (variable_identifier)


State 50

   54 variable_identifier: T_STRING .

    $default  reduce using rule 54 (variable_identifier)


State 51

   49 constdef: $@6 variable_identifier . T_ASSIGN constant_literal $@7

    T_ASSIGN  shift, and go to state 69


State 52

   81 annotation: T_ANNOTATION $@8 . '(' annotation_values ')'

    '('  shift, and go to state 70


State 53

    7 macro_definitions: element_with_annotations macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 54

   89 native_function_definition: T_NATIVE . $@9 macrostart

    $default  reduce using rule 88 ($@9)

    $@9  go to state 71


State 55

    8 element_with_annotations: annotations macro_or_native_function .

    $default  reduce using rule 8 (element_with_annotations)


State 56

    9 macro_or_native_function: native_function_definition . ';'

    ';'  shift, and go to state 72


State 57

   10 macro_or_native_function: macro_definition .

    $default  reduce using rule 10 (macro_or_native_function)


State 58

   91 macro_definition: $@10 . macrostart block

    T_STATIC  shift, and go to state 16

    $default  reduce using rule 42 (scope)

    scope       go to state 73
    macro_type  go to state 74
    macrostart  go to state 75


State 59

   79 annotations: annotation annotations .

    $default  reduce using rule 79 (annotations)


State 60

  252 array_size: '[' . ']'
  253           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 76
    ']'    shift, and go to state 77


State 61

  251 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 251 (type_name)


State 62

   63 var_decl: type_name variable_identifier . assignment_expression
   64         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 78

    $default  reduce using rule 64 (var_decl)

    assignment_expression  go to state 79


State 63

   26 enum_definition: T_ENUM $@4 '{' . enum_value_definitions '}' typedef_identifier

    T_IDENT  shift, and go to state 80

    $default  reduce using rule 34 (enum_value_definitions)

    enum_value_definitions  go to state 81
    enum_values             go to state 82
    enum_value              go to state 83


State 64

   24 struct_definition: T_STRUCT $@3 '{' . struct_element_definitions '}' typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 38

    struct_element_definitions  go to state 84
    struct_element              go to state 85
    type_name                   go to state 86


State 65

   30 typedef_identifier: T_TYPE_IDENTIFIER .

    $default  reduce using rule 30 (typedef_identifier)


State 66

   29 typedef_identifier: T_IDENT .

    $default  reduce using rule 29 (typedef_identifier)


State 67

   28 native_type_definition: T_NATIVE $@5 typedef_identifier .

    $default  reduce using rule 28 (native_type_definition)


State 68

   46 constant_list: constant_list ',' constdef .

    $default  reduce using rule 46 (constant_list)


State 69

   49 constdef: $@6 variable_identifier T_ASSIGN . constant_literal $@7

    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 89
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    '-'                      shift, and go to state 93

    constant_literal   go to state 94
    boolean_literal    go to state 95
    float_literal      go to state 96
    integer_literal    go to state 97
    character_literal  go to state 98
    simple_literal     go to state 99


State 70

   81 annotation: T_ANNOTATION $@8 '(' . annotation_values ')'

    T_IDENT   shift, and go to state 100
    T_STRING  shift, and go to state 101

    $default  reduce using rule 85 (annotation_values)

    annotation_value   go to state 102
    annotation_values  go to state 103


State 71

   89 native_function_definition: T_NATIVE $@9 . macrostart

    T_STATIC  shift, and go to state 16

    $default  reduce using rule 42 (scope)

    scope       go to state 73
    macro_type  go to state 74
    macrostart  go to state 104


State 72

    9 macro_or_native_function: native_function_definition ';' .

    $default  reduce using rule 9 (macro_or_native_function)


State 73

   59 macro_type: scope . T_VOID
   60           | scope . type_name

    T_VOID             shift, and go to state 105
    T_TYPE_IDENTIFIER  shift, and go to state 38

    type_name  go to state 106


State 74

   61 macrostart: macro_type . macro_declaration '(' argument_list ')' optional_description

    T_IDENT  shift, and go to state 107
    T_FUNC   shift, and go to state 108

    macro_declaration  go to state 109


State 75

   91 macro_definition: $@10 macrostart . block

    '{'  shift, and go to state 110

    block  go to state 111


State 76

  253 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 112


State 77

  252 array_size: '[' ']' .

    $default  reduce using rule 252 (array_size)


State 78

  124 assignment_expression: T_ASSIGN . expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    T_IDENT     [reduce using rule 127 (range_expression)]
    T_FUNC      [reduce using rule 127 (range_expression)]
    T_VARIABLE  [reduce using rule 127 (range_expression)]
    '~'         [reduce using rule 127 (range_expression)]
    '+'         [reduce using rule 127 (range_expression)]
    '-'         [reduce using rule 127 (range_expression)]
    '*'         [reduce using rule 127 (range_expression)]
    '['         [reduce using rule 127 (range_expression)]
    '{'         [reduce using rule 127 (range_expression)]
    $default    reduce using rule 127 (range_expression)

    variable_reference      go to state 126
    expression              go to state 127
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 79

   63 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 63 (var_decl)


State 80

   38 enum_value: T_IDENT . opt_enum_assignment

    T_ASSIGN  shift, and go to state 141

    $default  reduce using rule 39 (opt_enum_assignment)

    opt_enum_assignment  go to state 142


State 81

   26 enum_definition: T_ENUM $@4 '{' enum_value_definitions . '}' typedef_identifier

    '}'  shift, and go to state 143


State 82

   35 enum_value_definitions: enum_values .

    $default  reduce using rule 35 (enum_value_definitions)


State 83

   36 enum_values: enum_value .
   37            | enum_value . ',' enum_values

    ','  shift, and go to state 144

    $default  reduce using rule 36 (enum_values)


State 84

   24 struct_definition: T_STRUCT $@3 '{' struct_element_definitions . '}' typedef_identifier

    '}'  shift, and go to state 145


State 85

   31 struct_element_definitions: struct_element .
   32                           | struct_element . struct_element_definitions

    T_TYPE_IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 31 (struct_element_definitions)

    struct_element_definitions  go to state 146
    struct_element              go to state 85
    type_name                   go to state 86


State 86

   33 struct_element: type_name . variable_identifier ';'

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 147


State 87

  257 integer_literal: T_NUM .

    $default  reduce using rule 257 (integer_literal)


State 88

  256 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 256 (float_literal)


State 89

   51 constant_literal: T_STRING .

    $default  reduce using rule 51 (constant_literal)


State 90

  259 character_literal: T_CHARACTER .

    $default  reduce using rule 259 (character_literal)


State 91

  254 boolean_literal: T_TRUE .

    $default  reduce using rule 254 (boolean_literal)


State 92

  255 boolean_literal: T_FALSE .

    $default  reduce using rule 255 (boolean_literal)


State 93

  258 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 148


State 94

   49 constdef: $@6 variable_identifier T_ASSIGN constant_literal . $@7

    $default  reduce using rule 48 ($@7)

    $@7  go to state 149


State 95

  263 simple_literal: boolean_literal .

    $default  reduce using rule 263 (simple_literal)


State 96

  261 simple_literal: float_literal .

    $default  reduce using rule 261 (simple_literal)


State 97

  260 simple_literal: integer_literal .

    $default  reduce using rule 260 (simple_literal)


State 98

  262 simple_literal: character_literal .

    $default  reduce using rule 262 (simple_literal)


State 99

   50 constant_literal: simple_literal .

    $default  reduce using rule 50 (constant_literal)


State 100

   82 annotation_value: T_IDENT . T_ASSIGN T_STRING
   83                 | T_IDENT .

    T_ASSIGN  shift, and go to state 150

    $default  reduce using rule 83 (annotation_value)


State 101

   84 annotation_value: T_STRING .

    $default  reduce using rule 84 (annotation_value)


State 102

   86 annotation_values: annotation_value .
   87                  | annotation_value . ',' annotation_values

    ','  shift, and go to state 151

    $default  reduce using rule 86 (annotation_values)


State 103

   81 annotation: T_ANNOTATION $@8 '(' annotation_values . ')'

    ')'  shift, and go to state 152


State 104

   89 native_function_definition: T_NATIVE $@9 macrostart .

    $default  reduce using rule 89 (native_function_definition)


State 105

   59 macro_type: scope T_VOID .

    $default  reduce using rule 59 (macro_type)


State 106

   60 macro_type: scope type_name .

    $default  reduce using rule 60 (macro_type)


State 107

   57 macro_declaration: T_IDENT .

    $default  reduce using rule 57 (macro_declaration)


State 108

   58 macro_declaration: T_FUNC .

    $default  reduce using rule 58 (macro_declaration)


State 109

   61 macrostart: macro_type macro_declaration . '(' argument_list ')' optional_description

    '('  shift, and go to state 153


State 110

   92 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 93 (var_decls)

    var_decls  go to state 154


State 111

   91 macro_definition: $@10 macrostart block .

    $default  reduce using rule 91 (macro_definition)


State 112

  253 array_size: '[' T_NUM ']' .

    $default  reduce using rule 253 (array_size)


State 113

  138 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 155


State 114

   56 variable_reference: T_IDENT .
  176 value: T_IDENT .
  246 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 56 (variable_reference)
    '('       reduce using rule 246 (function_id_or_pointer)
    $default  reduce using rule 176 (value)


State 115

  177 string: T_STRING .

    $default  reduce using rule 177 (string)


State 116

  230 call_expression: T_FUNC . '(' @26 parameter_list closing_paren

    '('  shift, and go to state 156


State 117

   55 variable_reference: T_VARIABLE .
  173 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 55 (variable_reference)
    $default  reduce using rule 173 (value)


State 118

  139 unary_expression: '!' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 157
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 119

  140 unary_expression: '~' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 158
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 120

  141 unary_expression: '+' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 159
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 121

  142 unary_expression: '-' . variable_reference
  258 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 160
    T_NUM       shift, and go to state 148
    T_VARIABLE  shift, and go to state 161

    variable_reference  go to state 162


State 122

  245 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 160
    T_VARIABLE  shift, and go to state 161

    variable_reference  go to state 163


State 123

  236 array_constructor: '[' . @28 parameter_list ']'

    $default  reduce using rule 235 (@28)

    @28  go to state 164


State 124

  238 map_constructor: '{' . @29 optional_map_associates '}'

    $default  reduce using rule 237 (@29)

    @29  go to state 165


State 125

  169 binary_expression: '(' . binary_expression ')'
  249 type_cast: '(' . type_name ')'

    T_NEW                    shift, and go to state 113
    T_TYPE_IDENTIFIER        shift, and go to state 38
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 166
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    type_name               go to state 167
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 126

  170 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 78

    assignment_expression  go to state 168


State 127

  124 assignment_expression: T_ASSIGN expression .

    $default  reduce using rule 124 (assignment_expression)


State 128

  126 expression: range_expression .

    $default  reduce using rule 126 (expression)


State 129

  143 binary_expression: simple_term .

    $default  reduce using rule 143 (binary_expression)


State 130

  137 simple_term: constructor_expression .

    $default  reduce using rule 137 (simple_term)


State 131

  146 binary_expression: unary_expression .

    $default  reduce using rule 146 (binary_expression)


State 132

  125 expression: binary_expression .
  129 range_expression: binary_expression . T_DOTDOT binary_expression $@13 range_increment
  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 169
    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_OR           shift, and go to state 175
    T_AND          shift, and go to state 176
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    T_DOTDOT       [reduce using rule 125 (expression)]
    T_NMATCH       [reduce using rule 125 (expression)]
    T_NE           [reduce using rule 125 (expression)]
    T_EQ           [reduce using rule 125 (expression)]
    T_SHIFT_LEFT   [reduce using rule 125 (expression)]
    T_SHIFT_RIGHT  [reduce using rule 125 (expression)]
    T_OR           [reduce using rule 125 (expression)]
    T_AND          [reduce using rule 125 (expression)]
    T_LE           [reduce using rule 125 (expression)]
    T_GE           [reduce using rule 125 (expression)]
    T_POWER_TO     [reduce using rule 125 (expression)]
    '&'            [reduce using rule 125 (expression)]
    '|'            [reduce using rule 125 (expression)]
    '^'            [reduce using rule 125 (expression)]
    '~'            [reduce using rule 125 (expression)]
    '<'            [reduce using rule 125 (expression)]
    '>'            [reduce using rule 125 (expression)]
    '+'            [reduce using rule 125 (expression)]
    '-'            [reduce using rule 125 (expression)]
    '*'            [reduce using rule 125 (expression)]
    '/'            [reduce using rule 125 (expression)]
    '%'            [reduce using rule 125 (expression)]
    '['            [reduce using rule 125 (expression)]
    '.'            [reduce using rule 125 (expression)]
    $default       reduce using rule 125 (expression)


State 133

  135 simple_term: value .

    $default  reduce using rule 135 (simple_term)


State 134

  174 value: string .
  178 string: string . T_STRING

    T_STRING  shift, and go to state 193

    $default  reduce using rule 174 (value)


State 135

  136 simple_term: call_expression .

    $default  reduce using rule 136 (simple_term)


State 136

  233 call_expression: array_constructor .

    $default  reduce using rule 233 (call_expression)


State 137

  234 call_expression: map_constructor .

    $default  reduce using rule 234 (call_expression)


State 138

  232 call_expression: function_id_or_pointer . '(' @27 parameter_list closing_paren

    '('  shift, and go to state 194


State 139

  144 binary_expression: type_cast . simple_term

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 195
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 196
    '-'                      shift, and go to state 93
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124

    simple_term             go to state 197
    constructor_expression  go to state 130
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 140

  175 value: simple_literal .

    $default  reduce using rule 175 (value)


State 141

   40 opt_enum_assignment: T_ASSIGN . T_NUM
   41                    | T_ASSIGN . '-' T_NUM

    T_NUM  shift, and go to state 198
    '-'    shift, and go to state 199


State 142

   38 enum_value: T_IDENT opt_enum_assignment .

    $default  reduce using rule 38 (enum_value)


State 143

   26 enum_definition: T_ENUM $@4 '{' enum_value_definitions '}' . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 65
    T_IDENT            shift, and go to state 66

    typedef_identifier  go to state 200


State 144

   37 enum_values: enum_value ',' . enum_values

    T_IDENT  shift, and go to state 80

    enum_values  go to state 201
    enum_value   go to state 83


State 145

   24 struct_definition: T_STRUCT $@3 '{' struct_element_definitions '}' . typedef_identifier

    T_TYPE_IDENTIFIER  shift, and go to state 65
    T_IDENT            shift, and go to state 66

    typedef_identifier  go to state 202


State 146

   32 struct_element_definitions: struct_element struct_element_definitions .

    $default  reduce using rule 32 (struct_element_definitions)


State 147

   33 struct_element: type_name variable_identifier . ';'

    ';'  shift, and go to state 203


State 148

  258 integer_literal: '-' T_NUM .

    $default  reduce using rule 258 (integer_literal)


State 149

   49 constdef: $@6 variable_identifier T_ASSIGN constant_literal $@7 .

    $default  reduce using rule 49 (constdef)


State 150

   82 annotation_value: T_IDENT T_ASSIGN . T_STRING

    T_STRING  shift, and go to state 204


State 151

   87 annotation_values: annotation_value ',' . annotation_values

    T_IDENT   shift, and go to state 100
    T_STRING  shift, and go to state 101

    $default  reduce using rule 85 (annotation_values)

    annotation_value   go to state 102
    annotation_values  go to state 205


State 152

   81 annotation: T_ANNOTATION $@8 '(' annotation_values ')' .

    $default  reduce using rule 81 (annotation)


State 153

   61 macrostart: macro_type macro_declaration '(' . argument_list ')' optional_description

    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_ELLIPSIS         shift, and go to state 206

    $default  reduce using rule 67 (argument_list)

    argument_list         go to state 207
    non_empty_arguments   go to state 208
    argument_declaration  go to state 209
    type_name             go to state 210


State 154

   92 block: '{' var_decls . stmntlist closing_brace
   94 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 211
    T_FOR              shift, and go to state 212
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 213
    T_FUNC             shift, and go to state 116
    T_IF               shift, and go to state 214
    T_WHILE            shift, and go to state 215
    T_GOTO             shift, and go to state 216
    T_SWITCH           shift, and go to state 217
    T_BREAK            shift, and go to state 218
    T_CONTINUE         shift, and go to state 219
    T_RETURN           shift, and go to state 220
    T_VARIABLE         shift, and go to state 161
    '*'                shift, and go to state 122
    '['                shift, and go to state 123
    ';'                shift, and go to state 221
    '{'                shift, and go to state 222

    '}'  reduce using rule 226 (stmntlist)

    variable_reference      go to state 223
    var_decl                go to state 224
    block                   go to state 225
    statement               go to state 226
    assignment              go to state 227
    shorthand_assignment    go to state 228
    assignment_target       go to state 229
    increment_expression    go to state 230
    break                   go to state 231
    continue                go to state 232
    return_expression       go to state 233
    label                   go to state 234
    goto_expression         go to state 235
    switch_expression       go to state 236
    for_loop_expression     go to state 237
    while                   go to state 238
    if_expression           go to state 239
    stmntlist               go to state 240
    call_expression         go to state 241
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_name               go to state 40


State 155

  138 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 242


State 156

  230 call_expression: T_FUNC '(' . @26 parameter_list closing_paren

    $default  reduce using rule 229 (@26)

    @26  go to state 243


State 157

  139 unary_expression: '!' binary_expression .
  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 139 (unary_expression)


State 158

  140 unary_expression: '~' binary_expression .
  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 140 (unary_expression)


State 159

  141 unary_expression: '+' binary_expression .
  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 179
    '*'         shift, and go to state 188
    '/'         shift, and go to state 189
    '%'         shift, and go to state 190
    '['         shift, and go to state 191
    '.'         shift, and go to state 192

    $default  reduce using rule 141 (unary_expression)


State 160

   56 variable_reference: T_IDENT .

    $default  reduce using rule 56 (variable_reference)


State 161

   55 variable_reference: T_VARIABLE .

    $default  reduce using rule 55 (variable_reference)


State 162

  142 unary_expression: '-' variable_reference .

    $default  reduce using rule 142 (unary_expression)


State 163

  245 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 245 (function_id_or_pointer)


State 164

  236 array_constructor: '[' @28 . parameter_list ']'

    error                    shift, and go to state 244
    T_NEW                    shift, and go to state 113
    T_ELLIPSIS               shift, and go to state 245
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    ','  reduce using rule 127 (range_expression)
    ']'  reduce using rule 71 (parameter_list)
    ']'  [reduce using rule 127 (range_expression)]

    variable_reference      go to state 126
    parameter_list          go to state 246
    non_empty_parameters    go to state 247
    expression              go to state 248
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    parameter               go to state 249
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 165

  238 map_constructor: '{' @29 . optional_map_associates '}'

    T_STRING  shift, and go to state 250

    $default  reduce using rule 239 (optional_map_associates)

    optional_map_associates  go to state 251
    map_associates           go to state 252
    map_associate            go to state 253


State 166

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression
  169                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_OR           shift, and go to state 175
    T_AND          shift, and go to state 176
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192
    ')'            shift, and go to state 254


State 167

  249 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 255


State 168

  170 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 170 (binary_expression)


State 169

  129 range_expression: binary_expression T_DOTDOT . binary_expression $@13 range_increment

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 256
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 170

  149 binary_expression: binary_expression T_NMATCH . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 257
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 171

  168 binary_expression: binary_expression T_NE . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 258
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 172

  167 binary_expression: binary_expression T_EQ . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 259
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 173

  158 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 260
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 174

  159 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 261
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 175

  162 binary_expression: binary_expression T_OR . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 262
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 176

  161 binary_expression: binary_expression T_AND . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 263
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 177

  165 binary_expression: binary_expression T_LE . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 264
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 178

  166 binary_expression: binary_expression T_GE . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 265
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 179

  160 binary_expression: binary_expression T_POWER_TO . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 266
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 180

  150 binary_expression: binary_expression '&' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 267
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 181

  151 binary_expression: binary_expression '|' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 268
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 182

  153 binary_expression: binary_expression '^' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 269
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 183

  148 binary_expression: binary_expression '~' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 270
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 184

  163 binary_expression: binary_expression '<' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 271
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 185

  164 binary_expression: binary_expression '>' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 272
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 186

  152 binary_expression: binary_expression '+' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 273
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 187

  154 binary_expression: binary_expression '-' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 274
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 188

  155 binary_expression: binary_expression '*' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 275
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 189

  156 binary_expression: binary_expression '/' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 276
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 190

  157 binary_expression: binary_expression '%' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 277
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 191

  147 binary_expression: binary_expression '[' . expression ']'

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    $default  reduce using rule 127 (range_expression)

    variable_reference      go to state 126
    expression              go to state 278
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 192

  145 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 279


State 193

  178 string: string T_STRING .

    $default  reduce using rule 178 (string)


State 194

  232 call_expression: function_id_or_pointer '(' . @27 parameter_list closing_paren

    $default  reduce using rule 231 (@27)

    @27  go to state 280


State 195

  176 value: T_IDENT .
  246 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 246 (function_id_or_pointer)
    $default  reduce using rule 176 (value)


State 196

  173 value: T_VARIABLE .

    $default  reduce using rule 173 (value)


State 197

  144 binary_expression: type_cast simple_term .

    $default  reduce using rule 144 (binary_expression)


State 198

   40 opt_enum_assignment: T_ASSIGN T_NUM .

    $default  reduce using rule 40 (opt_enum_assignment)


State 199

   41 opt_enum_assignment: T_ASSIGN '-' . T_NUM

    T_NUM  shift, and go to state 281


State 200

   26 enum_definition: T_ENUM $@4 '{' enum_value_definitions '}' typedef_identifier .

    $default  reduce using rule 26 (enum_definition)


State 201

   37 enum_values: enum_value ',' enum_values .

    $default  reduce using rule 37 (enum_values)


State 202

   24 struct_definition: T_STRUCT $@3 '{' struct_element_definitions '}' typedef_identifier .

    $default  reduce using rule 24 (struct_definition)


State 203

   33 struct_element: type_name variable_identifier ';' .

    $default  reduce using rule 33 (struct_element)


State 204

   82 annotation_value: T_IDENT T_ASSIGN T_STRING .

    $default  reduce using rule 82 (annotation_value)


State 205

   87 annotation_values: annotation_value ',' annotation_values .

    $default  reduce using rule 87 (annotation_values)


State 206

   77 argument_declaration: T_ELLIPSIS .

    $default  reduce using rule 77 (argument_declaration)


State 207

   61 macrostart: macro_type macro_declaration '(' argument_list . ')' optional_description

    ')'  shift, and go to state 282


State 208

   68 argument_list: non_empty_arguments .
   70 non_empty_arguments: non_empty_arguments . ',' argument_declaration

    ','  shift, and go to state 283

    $default  reduce using rule 68 (argument_list)


State 209

   69 non_empty_arguments: argument_declaration .

    $default  reduce using rule 69 (non_empty_arguments)


State 210

   76 argument_declaration: type_name . variable_identifier

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 284


State 211

  110 statement: error . ';'

    ';'  shift, and go to state 285


State 212

  199 for_loop_expression: T_FOR . for_clause $@15 local_block

    error  shift, and go to state 286
    '('    shift, and go to state 287

    for_to_clause  go to state 288
    for_clause     go to state 289
    in_clause      go to state 290


State 213

   56 variable_reference: T_IDENT .
  194 label: T_IDENT . ':'
  246 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 291

    '('       reduce using rule 246 (function_id_or_pointer)
    $default  reduce using rule 56 (variable_reference)


State 214

  222 if_expression: T_IF . condition $@23 local_block $@24 else_clause

    '('  shift, and go to state 292

    condition  go to state 293


State 215

  216 while: T_WHILE . $@21 condition $@22 local_block

    $default  reduce using rule 214 ($@21)

    $@21  go to state 294


State 216

  195 goto_expression: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 295


State 217

  197 switch_expression: T_SWITCH . '(' value ')' $@14 '{' case_clauses '}'

    '('  shift, and go to state 296


State 218

  179 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 297

    $default  reduce using rule 184 (opt_num)

    opt_num  go to state 298


State 219

  180 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 297

    $default  reduce using rule 184 (opt_num)

    opt_num  go to state 299


State 220

  181 return_expression: T_RETURN . optional_bterm

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    $default  reduce using rule 182 (optional_bterm)

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 300
    value                   go to state 133
    string                  go to state 134
    optional_bterm          go to state 301
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 221

   95 statement: ';' .

    $default  reduce using rule 95 (statement)


State 222

   92 block: '{' . var_decls stmntlist closing_brace
  238 map_constructor: '{' . @29 optional_map_associates '}'

    T_STRING  reduce using rule 237 (@29)
    '}'       reduce using rule 93 (var_decls)
    '}'       [reduce using rule 237 (@29)]
    $default  reduce using rule 93 (var_decls)

    var_decls  go to state 154
    @29        go to state 165


State 223

  111 assignment: variable_reference . assignment_expression
  117 shorthand_assignment: variable_reference . $@12 shorthand_assignment_operator expression
  118 assignment_target: variable_reference .
  134 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 302
    T_MINUSMINUS  shift, and go to state 303
    T_ASSIGN      shift, and go to state 78

    '['       reduce using rule 118 (assignment_target)
    '.'       reduce using rule 118 (assignment_target)
    $default  reduce using rule 116 ($@12)

    $@12                   go to state 304
    assignment_expression  go to state 305
    minusminus_plusplus    go to state 306


State 224

   94 var_decls: var_decls var_decl . ';'
  109 statement: var_decl .

    ';'  shift, and go to state 307

    ';'       [reduce using rule 109 (statement)]
    $default  reduce using rule 109 (statement)


State 225

  106 statement: block .

    $default  reduce using rule 106 (statement)


State 226

  227 stmntlist: statement . stmntlist

    error              shift, and go to state 211
    T_FOR              shift, and go to state 212
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 213
    T_FUNC             shift, and go to state 116
    T_IF               shift, and go to state 214
    T_WHILE            shift, and go to state 215
    T_GOTO             shift, and go to state 216
    T_SWITCH           shift, and go to state 217
    T_BREAK            shift, and go to state 218
    T_CONTINUE         shift, and go to state 219
    T_RETURN           shift, and go to state 220
    T_VARIABLE         shift, and go to state 161
    '*'                shift, and go to state 122
    '['                shift, and go to state 123
    ';'                shift, and go to state 221
    '{'                shift, and go to state 222

    T_CASE     reduce using rule 226 (stmntlist)
    T_DEFAULT  reduce using rule 226 (stmntlist)
    '}'        reduce using rule 226 (stmntlist)

    variable_reference      go to state 223
    var_decl                go to state 308
    block                   go to state 225
    statement               go to state 226
    assignment              go to state 227
    shorthand_assignment    go to state 228
    assignment_target       go to state 229
    increment_expression    go to state 230
    break                   go to state 231
    continue                go to state 232
    return_expression       go to state 233
    label                   go to state 234
    goto_expression         go to state 235
    switch_expression       go to state 236
    for_loop_expression     go to state 237
    while                   go to state 238
    if_expression           go to state 239
    stmntlist               go to state 309
    call_expression         go to state 241
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_name               go to state 40


State 227

   97 statement: assignment . ';'

    ';'  shift, and go to state 310


State 228

  115 assignment: shorthand_assignment .

    $default  reduce using rule 115 (assignment)


State 229

  113 assignment: assignment_target . '.' T_IDENT $@11 assignment_expression
  114           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 311
    '.'  shift, and go to state 312


State 230

  107 statement: increment_expression . ';'

    ';'  shift, and go to state 313


State 231

  102 statement: break .

    $default  reduce using rule 102 (statement)


State 232

  103 statement: continue .

    $default  reduce using rule 103 (statement)


State 233

  104 statement: return_expression . ';'

    ';'  shift, and go to state 314


State 234

  108 statement: label .

    $default  reduce using rule 108 (statement)


State 235

  105 statement: goto_expression . ';'

    ';'  shift, and go to state 315


State 236

  101 statement: switch_expression .

    $default  reduce using rule 101 (statement)


State 237

  100 statement: for_loop_expression .

    $default  reduce using rule 100 (statement)


State 238

   99 statement: while .

    $default  reduce using rule 99 (statement)


State 239

   98 statement: if_expression .

    $default  reduce using rule 98 (statement)


State 240

   92 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 316

    closing_brace  go to state 317


State 241

   96 statement: call_expression . ';'

    ';'  shift, and go to state 318


State 242

  138 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 319


State 243

  230 call_expression: T_FUNC '(' @26 . parameter_list closing_paren

    error                    shift, and go to state 244
    T_NEW                    shift, and go to state 113
    T_ELLIPSIS               shift, and go to state 245
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    ','  reduce using rule 127 (range_expression)
    ')'  reduce using rule 71 (parameter_list)
    ')'  [reduce using rule 127 (range_expression)]

    variable_reference      go to state 126
    parameter_list          go to state 320
    non_empty_parameters    go to state 247
    expression              go to state 248
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    parameter               go to state 249
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 244

   75 non_empty_parameters: error .

    $default  reduce using rule 75 (non_empty_parameters)


State 245

  248 parameter: T_ELLIPSIS . expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    $default  reduce using rule 127 (range_expression)

    variable_reference      go to state 126
    expression              go to state 321
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 246

  236 array_constructor: '[' @28 parameter_list . ']'

    ']'  shift, and go to state 322


State 247

   72 parameter_list: non_empty_parameters .
   74 non_empty_parameters: non_empty_parameters . ',' parameter

    ','  shift, and go to state 323

    $default  reduce using rule 72 (parameter_list)


State 248

  247 parameter: expression .

    $default  reduce using rule 247 (parameter)


State 249

   73 non_empty_parameters: parameter .

    $default  reduce using rule 73 (non_empty_parameters)


State 250

  244 map_associate: T_STRING . ':' @30 value

    ':'  shift, and go to state 324


State 251

  238 map_constructor: '{' @29 optional_map_associates . '}'

    '}'  shift, and go to state 325


State 252

  240 optional_map_associates: map_associates .
  242 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 326

    $default  reduce using rule 240 (optional_map_associates)


State 253

  241 map_associates: map_associate .

    $default  reduce using rule 241 (map_associates)


State 254

  169 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 169 (binary_expression)


State 255

  249 type_cast: '(' type_name ')' .

    $default  reduce using rule 249 (type_cast)


State 256

  129 range_expression: binary_expression T_DOTDOT binary_expression . $@13 range_increment
  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_OR           shift, and go to state 175
    T_AND          shift, and go to state 176
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    T_NMATCH       [reduce using rule 128 ($@13)]
    T_NE           [reduce using rule 128 ($@13)]
    T_EQ           [reduce using rule 128 ($@13)]
    T_SHIFT_LEFT   [reduce using rule 128 ($@13)]
    T_SHIFT_RIGHT  [reduce using rule 128 ($@13)]
    T_OR           [reduce using rule 128 ($@13)]
    T_AND          [reduce using rule 128 ($@13)]
    T_LE           [reduce using rule 128 ($@13)]
    T_GE           [reduce using rule 128 ($@13)]
    T_POWER_TO     [reduce using rule 128 ($@13)]
    '&'            [reduce using rule 128 ($@13)]
    '|'            [reduce using rule 128 ($@13)]
    '^'            [reduce using rule 128 ($@13)]
    '~'            [reduce using rule 128 ($@13)]
    '<'            [reduce using rule 128 ($@13)]
    '>'            [reduce using rule 128 ($@13)]
    '+'            [reduce using rule 128 ($@13)]
    '-'            [reduce using rule 128 ($@13)]
    '*'            [reduce using rule 128 ($@13)]
    '/'            [reduce using rule 128 ($@13)]
    '%'            [reduce using rule 128 ($@13)]
    '['            [reduce using rule 128 ($@13)]
    '.'            [reduce using rule 128 ($@13)]
    $default       reduce using rule 128 ($@13)

    $@13  go to state 327


State 257

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  149                  | binary_expression T_NMATCH binary_expression .
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 149 (binary_expression)


State 258

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression
  168                  | binary_expression T_NE binary_expression .

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 168 (binary_expression)


State 259

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  167                  | binary_expression T_EQ binary_expression .
  168                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 167 (binary_expression)


State 260

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  158                  | binary_expression T_SHIFT_LEFT binary_expression .
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 179
    '+'         shift, and go to state 186
    '-'         shift, and go to state 187
    '*'         shift, and go to state 188
    '/'         shift, and go to state 189
    '%'         shift, and go to state 190
    '['         shift, and go to state 191
    '.'         shift, and go to state 192

    $default  reduce using rule 158 (binary_expression)


State 261

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  159                  | binary_expression T_SHIFT_RIGHT binary_expression .
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 179
    '+'         shift, and go to state 186
    '-'         shift, and go to state 187
    '*'         shift, and go to state 188
    '/'         shift, and go to state 189
    '%'         shift, and go to state 190
    '['         shift, and go to state 191
    '.'         shift, and go to state 192

    $default  reduce using rule 159 (binary_expression)


State 262

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  162                  | binary_expression T_OR binary_expression .
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 162 (binary_expression)


State 263

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  161                  | binary_expression T_AND binary_expression .
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 161 (binary_expression)


State 264

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  165                  | binary_expression T_LE binary_expression .
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_POWER_TO     shift, and go to state 179
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 165 (binary_expression)


State 265

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  166                  | binary_expression T_GE binary_expression .
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_POWER_TO     shift, and go to state 179
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 166 (binary_expression)


State 266

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  160                  | binary_expression T_POWER_TO binary_expression .
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 191
    '.'  shift, and go to state 192

    $default  reduce using rule 160 (binary_expression)


State 267

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  150                  | binary_expression '&' binary_expression .
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 150 (binary_expression)


State 268

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  151                  | binary_expression '|' binary_expression .
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 151 (binary_expression)


State 269

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  153                  | binary_expression '^' binary_expression .
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 153 (binary_expression)


State 270

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  148                  | binary_expression '~' binary_expression .
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    T_NMATCH  error (nonassociative)
    T_NE      error (nonassociative)
    T_EQ      error (nonassociative)
    '~'       error (nonassociative)

    $default  reduce using rule 148 (binary_expression)


State 271

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  163                  | binary_expression '<' binary_expression .
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_POWER_TO     shift, and go to state 179
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 163 (binary_expression)


State 272

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  164                  | binary_expression '>' binary_expression .
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_POWER_TO     shift, and go to state 179
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 164 (binary_expression)


State 273

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  152                  | binary_expression '+' binary_expression .
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 179
    '*'         shift, and go to state 188
    '/'         shift, and go to state 189
    '%'         shift, and go to state 190
    '['         shift, and go to state 191
    '.'         shift, and go to state 192

    $default  reduce using rule 152 (binary_expression)


State 274

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  154                  | binary_expression '-' binary_expression .
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 179
    '*'         shift, and go to state 188
    '/'         shift, and go to state 189
    '%'         shift, and go to state 190
    '['         shift, and go to state 191
    '.'         shift, and go to state 192

    $default  reduce using rule 154 (binary_expression)


State 275

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  155                  | binary_expression '*' binary_expression .
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 191
    '.'  shift, and go to state 192

    $default  reduce using rule 155 (binary_expression)


State 276

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  156                  | binary_expression '/' binary_expression .
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 191
    '.'  shift, and go to state 192

    $default  reduce using rule 156 (binary_expression)


State 277

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  157                  | binary_expression '%' binary_expression .
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 191
    '.'  shift, and go to state 192

    $default  reduce using rule 157 (binary_expression)


State 278

  147 binary_expression: binary_expression '[' expression . ']'

    ']'  shift, and go to state 328


State 279

  145 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 145 (binary_expression)


State 280

  232 call_expression: function_id_or_pointer '(' @27 . parameter_list closing_paren

    error                    shift, and go to state 244
    T_NEW                    shift, and go to state 113
    T_ELLIPSIS               shift, and go to state 245
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    ','  reduce using rule 127 (range_expression)
    ')'  reduce using rule 71 (parameter_list)
    ')'  [reduce using rule 127 (range_expression)]

    variable_reference      go to state 126
    parameter_list          go to state 329
    non_empty_parameters    go to state 247
    expression              go to state 248
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    parameter               go to state 249
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 281

   41 opt_enum_assignment: T_ASSIGN '-' T_NUM .

    $default  reduce using rule 41 (opt_enum_assignment)


State 282

   61 macrostart: macro_type macro_declaration '(' argument_list ')' . optional_description

    T_STRING  shift, and go to state 330

    $default  reduce using rule 65 (optional_description)

    optional_description  go to state 331


State 283

   70 non_empty_arguments: non_empty_arguments ',' . argument_declaration

    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_ELLIPSIS         shift, and go to state 206

    argument_declaration  go to state 332
    type_name             go to state 210


State 284

   76 argument_declaration: type_name variable_identifier .

    $default  reduce using rule 76 (argument_declaration)


State 285

  110 statement: error ';' .

    $default  reduce using rule 110 (statement)


State 286

  211 for_clause: error .

    $default  reduce using rule 211 (for_clause)


State 287

  205 for_to_clause: '(' . opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment $@18 ')'
  213 in_clause: '(' . type_name variable_identifier $@20 ':' expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 206 (opt_for_initializer)

    opt_for_initializer  go to state 333
    type_name            go to state 334


State 288

  209 for_clause: for_to_clause .

    $default  reduce using rule 209 (for_clause)


State 289

  199 for_loop_expression: T_FOR for_clause . $@15 local_block

    $default  reduce using rule 198 ($@15)

    $@15  go to state 335


State 290

  210 for_clause: in_clause .

    $default  reduce using rule 210 (for_clause)


State 291

  194 label: T_IDENT ':' .

    $default  reduce using rule 194 (label)


State 292

  171 condition: '(' . binary_expression ')'
  172          | '(' . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 336
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 293

  222 if_expression: T_IF condition . $@23 local_block $@24 else_clause

    $default  reduce using rule 220 ($@23)

    $@23  go to state 337


State 294

  216 while: T_WHILE $@21 . condition $@22 local_block

    '('  shift, and go to state 292

    condition  go to state 338


State 295

  195 goto_expression: T_GOTO T_IDENT .

    $default  reduce using rule 195 (goto_expression)


State 296

  197 switch_expression: T_SWITCH '(' . value ')' $@14 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 339
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_VARIABLE               shift, and go to state 196
    '-'                      shift, and go to state 93

    value              go to state 340
    string             go to state 134
    boolean_literal    go to state 95
    float_literal      go to state 96
    integer_literal    go to state 97
    character_literal  go to state 98
    simple_literal     go to state 140


State 297

  185 opt_num: T_NUM .

    $default  reduce using rule 185 (opt_num)


State 298

  179 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 341


State 299

  180 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 342


State 300

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression
  183 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_OR           shift, and go to state 175
    T_AND          shift, and go to state 176
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192

    $default  reduce using rule 183 (optional_bterm)


State 301

  181 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 181 (return_expression)


State 302

  133 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 133 (minusminus_plusplus)


State 303

  132 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 132 (minusminus_plusplus)


State 304

  117 shorthand_assignment: variable_reference $@12 . shorthand_assignment_operator expression

    T_SH_ASSIGN_PLUS   shift, and go to state 343
    T_SH_ASSIGN_MINUS  shift, and go to state 344
    T_SH_ASSIGN_MULT   shift, and go to state 345
    T_SH_ASSIGN_DIV    shift, and go to state 346
    T_SH_ASSIGN_MOD    shift, and go to state 347

    shorthand_assignment_operator  go to state 348


State 305

  111 assignment: variable_reference assignment_expression .

    $default  reduce using rule 111 (assignment)


State 306

  134 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 134 (increment_expression)


State 307

   94 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 94 (var_decls)


State 308

  109 statement: var_decl .

    $default  reduce using rule 109 (statement)


State 309

  227 stmntlist: statement stmntlist .

    $default  reduce using rule 227 (stmntlist)


State 310

   97 statement: assignment ';' .

    $default  reduce using rule 97 (statement)


State 311

  114 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 349
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 312

  113 assignment: assignment_target '.' . T_IDENT $@11 assignment_expression

    T_IDENT  shift, and go to state 350


State 313

  107 statement: increment_expression ';' .

    $default  reduce using rule 107 (statement)


State 314

  104 statement: return_expression ';' .

    $default  reduce using rule 104 (statement)


State 315

  105 statement: goto_expression ';' .

    $default  reduce using rule 105 (statement)


State 316

  219 closing_brace: '}' .

    $default  reduce using rule 219 (closing_brace)


State 317

   92 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 92 (block)


State 318

   96 statement: call_expression ';' .

    $default  reduce using rule 96 (statement)


State 319

  138 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 138 (constructor_expression)


State 320

  230 call_expression: T_FUNC '(' @26 parameter_list . closing_paren

    ')'  shift, and go to state 351

    closing_paren  go to state 352


State 321

  248 parameter: T_ELLIPSIS expression .

    $default  reduce using rule 248 (parameter)


State 322

  236 array_constructor: '[' @28 parameter_list ']' .

    $default  reduce using rule 236 (array_constructor)


State 323

   74 non_empty_parameters: non_empty_parameters ',' . parameter

    T_NEW                    shift, and go to state 113
    T_ELLIPSIS               shift, and go to state 245
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    $default  reduce using rule 127 (range_expression)

    variable_reference      go to state 126
    expression              go to state 248
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    parameter               go to state 353
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 324

  244 map_associate: T_STRING ':' . @30 value

    $default  reduce using rule 243 (@30)

    @30  go to state 354


State 325

  238 map_constructor: '{' @29 optional_map_associates '}' .

    $default  reduce using rule 238 (map_constructor)


State 326

  242 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 250

    map_associate  go to state 355


State 327

  129 range_expression: binary_expression T_DOTDOT binary_expression $@13 . range_increment

    T_DOTDOT  shift, and go to state 356

    T_DOTDOT  [reduce using rule 130 (range_increment)]
    $default  reduce using rule 130 (range_increment)

    range_increment  go to state 357


State 328

  147 binary_expression: binary_expression '[' expression ']' .

    $default  reduce using rule 147 (binary_expression)


State 329

  232 call_expression: function_id_or_pointer '(' @27 parameter_list . closing_paren

    ')'  shift, and go to state 351

    closing_paren  go to state 358


State 330

   66 optional_description: T_STRING .

    $default  reduce using rule 66 (optional_description)


State 331

   61 macrostart: macro_type macro_declaration '(' argument_list ')' optional_description .

    $default  reduce using rule 61 (macrostart)


State 332

   70 non_empty_arguments: non_empty_arguments ',' argument_declaration .

    $default  reduce using rule 70 (non_empty_arguments)


State 333

  205 for_to_clause: '(' opt_for_initializer . $@16 ';' binary_expression ';' $@17 for_increment $@18 ')'

    $default  reduce using rule 202 ($@16)

    $@16  go to state 359


State 334

  208 opt_for_initializer: type_name . variable_identifier $@19 assignment_expression
  213 in_clause: '(' type_name . variable_identifier $@20 ':' expression ')'

    T_IDENT   shift, and go to state 48
    T_NUM     shift, and go to state 49
    T_STRING  shift, and go to state 50

    variable_identifier  go to state 360


State 335

  199 for_loop_expression: T_FOR for_clause $@15 . local_block

    error              shift, and go to state 211
    T_FOR              shift, and go to state 212
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 213
    T_FUNC             shift, and go to state 116
    T_IF               shift, and go to state 214
    T_WHILE            shift, and go to state 215
    T_GOTO             shift, and go to state 216
    T_SWITCH           shift, and go to state 217
    T_BREAK            shift, and go to state 218
    T_CONTINUE         shift, and go to state 219
    T_RETURN           shift, and go to state 220
    T_VARIABLE         shift, and go to state 161
    '*'                shift, and go to state 122
    '['                shift, and go to state 123
    ';'                shift, and go to state 221
    '{'                shift, and go to state 361

    variable_reference      go to state 223
    var_decl                go to state 308
    block                   go to state 225
    statement               go to state 362
    assignment              go to state 227
    shorthand_assignment    go to state 228
    assignment_target       go to state 229
    increment_expression    go to state 230
    break                   go to state 231
    continue                go to state 232
    return_expression       go to state 233
    label                   go to state 234
    goto_expression         go to state 235
    switch_expression       go to state 236
    for_loop_expression     go to state 237
    while                   go to state 238
    local_block             go to state 363
    if_expression           go to state 239
    call_expression         go to state 241
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_name               go to state 40


State 336

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression
  171 condition: '(' binary_expression . ')'
  172          | '(' binary_expression .

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_OR           shift, and go to state 175
    T_AND          shift, and go to state 176
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192
    ')'            shift, and go to state 364

    '*'       [reduce using rule 172 (condition)]
    '['       [reduce using rule 172 (condition)]
    $default  reduce using rule 172 (condition)


State 337

  222 if_expression: T_IF condition $@23 . local_block $@24 else_clause

    error              shift, and go to state 211
    T_FOR              shift, and go to state 212
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 213
    T_FUNC             shift, and go to state 116
    T_IF               shift, and go to state 214
    T_WHILE            shift, and go to state 215
    T_GOTO             shift, and go to state 216
    T_SWITCH           shift, and go to state 217
    T_BREAK            shift, and go to state 218
    T_CONTINUE         shift, and go to state 219
    T_RETURN           shift, and go to state 220
    T_VARIABLE         shift, and go to state 161
    '*'                shift, and go to state 122
    '['                shift, and go to state 123
    ';'                shift, and go to state 221
    '{'                shift, and go to state 361

    variable_reference      go to state 223
    var_decl                go to state 308
    block                   go to state 225
    statement               go to state 362
    assignment              go to state 227
    shorthand_assignment    go to state 228
    assignment_target       go to state 229
    increment_expression    go to state 230
    break                   go to state 231
    continue                go to state 232
    return_expression       go to state 233
    label                   go to state 234
    goto_expression         go to state 235
    switch_expression       go to state 236
    for_loop_expression     go to state 237
    while                   go to state 238
    local_block             go to state 365
    if_expression           go to state 239
    call_expression         go to state 241
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_name               go to state 40


State 338

  216 while: T_WHILE $@21 condition . $@22 local_block

    $default  reduce using rule 215 ($@22)

    $@22  go to state 366


State 339

  176 value: T_IDENT .

    $default  reduce using rule 176 (value)


State 340

  197 switch_expression: T_SWITCH '(' value . ')' $@14 '{' case_clauses '}'

    ')'  shift, and go to state 367


State 341

  179 break: T_BREAK opt_num ';' .

    $default  reduce using rule 179 (break)


State 342

  180 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 180 (continue)


State 343

  122 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 122 (shorthand_assignment_operator)


State 344

  123 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 123 (shorthand_assignment_operator)


State 345

  119 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 119 (shorthand_assignment_operator)


State 346

  120 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 120 (shorthand_assignment_operator)


State 347

  121 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 121 (shorthand_assignment_operator)


State 348

  117 shorthand_assignment: variable_reference $@12 shorthand_assignment_operator . expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    $default  reduce using rule 127 (range_expression)

    variable_reference      go to state 126
    expression              go to state 368
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 349

  114 assignment: assignment_target '[' binary_expression . ']' assignment_expression
  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_OR           shift, and go to state 175
    T_AND          shift, and go to state 176
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192
    ']'            shift, and go to state 369


State 350

  113 assignment: assignment_target '.' T_IDENT . $@11 assignment_expression

    $default  reduce using rule 112 ($@11)

    $@11  go to state 370


State 351

  228 closing_paren: ')' .

    $default  reduce using rule 228 (closing_paren)


State 352

  230 call_expression: T_FUNC '(' @26 parameter_list closing_paren .

    $default  reduce using rule 230 (call_expression)


State 353

   74 non_empty_parameters: non_empty_parameters ',' parameter .

    $default  reduce using rule 74 (non_empty_parameters)


State 354

  244 map_associate: T_STRING ':' @30 . value

    T_IDENT                  shift, and go to state 339
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_VARIABLE               shift, and go to state 196
    '-'                      shift, and go to state 93

    value              go to state 371
    string             go to state 134
    boolean_literal    go to state 95
    float_literal      go to state 96
    integer_literal    go to state 97
    character_literal  go to state 98
    simple_literal     go to state 140


State 355

  242 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 242 (map_associates)


State 356

  131 range_increment: T_DOTDOT . binary_expression

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 372
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 357

  129 range_expression: binary_expression T_DOTDOT binary_expression $@13 range_increment .

    $default  reduce using rule 129 (range_expression)


State 358

  232 call_expression: function_id_or_pointer '(' @27 parameter_list closing_paren .

    $default  reduce using rule 232 (call_expression)


State 359

  205 for_to_clause: '(' opt_for_initializer $@16 . ';' binary_expression ';' $@17 for_increment $@18 ')'

    ';'  shift, and go to state 373


State 360

  208 opt_for_initializer: type_name variable_identifier . $@19 assignment_expression
  213 in_clause: '(' type_name variable_identifier . $@20 ':' expression ')'

    ':'       reduce using rule 212 ($@20)
    $default  reduce using rule 207 ($@19)

    $@19  go to state 374
    $@20  go to state 375


State 361

   92 block: '{' . var_decls stmntlist closing_brace
  218 local_block: '{' . stmntlist closing_brace
  238 map_constructor: '{' . @29 optional_map_associates '}'

    error              shift, and go to state 211
    T_FOR              shift, and go to state 212
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 213
    T_FUNC             shift, and go to state 116
    T_IF               shift, and go to state 214
    T_WHILE            shift, and go to state 215
    T_GOTO             shift, and go to state 216
    T_SWITCH           shift, and go to state 217
    T_BREAK            shift, and go to state 218
    T_CONTINUE         shift, and go to state 219
    T_RETURN           shift, and go to state 220
    T_VARIABLE         shift, and go to state 161
    '*'                shift, and go to state 122
    '['                shift, and go to state 123
    ';'                shift, and go to state 221
    '{'                shift, and go to state 222

    error              [reduce using rule 93 (var_decls)]
    T_FOR              [reduce using rule 93 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 93 (var_decls)]
    T_IDENT            [reduce using rule 93 (var_decls)]
    T_STRING           reduce using rule 237 (@29)
    T_FUNC             [reduce using rule 93 (var_decls)]
    T_IF               [reduce using rule 93 (var_decls)]
    T_WHILE            [reduce using rule 93 (var_decls)]
    T_GOTO             [reduce using rule 93 (var_decls)]
    T_SWITCH           [reduce using rule 93 (var_decls)]
    T_BREAK            [reduce using rule 93 (var_decls)]
    T_CONTINUE         [reduce using rule 93 (var_decls)]
    T_RETURN           [reduce using rule 93 (var_decls)]
    T_VARIABLE         [reduce using rule 93 (var_decls)]
    '*'                [reduce using rule 93 (var_decls)]
    '['                [reduce using rule 93 (var_decls)]
    ';'                [reduce using rule 93 (var_decls)]
    '{'                [reduce using rule 93 (var_decls)]
    '}'                reduce using rule 93 (var_decls)
    '}'                [reduce using rule 226 (stmntlist)]
    '}'                [reduce using rule 237 (@29)]

    variable_reference      go to state 223
    var_decl                go to state 308
    block                   go to state 225
    var_decls               go to state 154
    statement               go to state 226
    assignment              go to state 227
    shorthand_assignment    go to state 228
    assignment_target       go to state 229
    increment_expression    go to state 230
    break                   go to state 231
    continue                go to state 232
    return_expression       go to state 233
    label                   go to state 234
    goto_expression         go to state 235
    switch_expression       go to state 236
    for_loop_expression     go to state 237
    while                   go to state 238
    if_expression           go to state 239
    stmntlist               go to state 376
    call_expression         go to state 241
    array_constructor       go to state 136
    map_constructor         go to state 137
    @29                     go to state 165
    function_id_or_pointer  go to state 138
    type_name               go to state 40


State 362

  217 local_block: statement .

    $default  reduce using rule 217 (local_block)


State 363

  199 for_loop_expression: T_FOR for_clause $@15 local_block .

    $default  reduce using rule 199 (for_loop_expression)


State 364

  171 condition: '(' binary_expression ')' .

    $default  reduce using rule 171 (condition)


State 365

  222 if_expression: T_IF condition $@23 local_block . $@24 else_clause

    $default  reduce using rule 221 ($@24)

    $@24  go to state 377


State 366

  216 while: T_WHILE $@21 condition $@22 . local_block

    error              shift, and go to state 211
    T_FOR              shift, and go to state 212
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 213
    T_FUNC             shift, and go to state 116
    T_IF               shift, and go to state 214
    T_WHILE            shift, and go to state 215
    T_GOTO             shift, and go to state 216
    T_SWITCH           shift, and go to state 217
    T_BREAK            shift, and go to state 218
    T_CONTINUE         shift, and go to state 219
    T_RETURN           shift, and go to state 220
    T_VARIABLE         shift, and go to state 161
    '*'                shift, and go to state 122
    '['                shift, and go to state 123
    ';'                shift, and go to state 221
    '{'                shift, and go to state 361

    variable_reference      go to state 223
    var_decl                go to state 308
    block                   go to state 225
    statement               go to state 362
    assignment              go to state 227
    shorthand_assignment    go to state 228
    assignment_target       go to state 229
    increment_expression    go to state 230
    break                   go to state 231
    continue                go to state 232
    return_expression       go to state 233
    label                   go to state 234
    goto_expression         go to state 235
    switch_expression       go to state 236
    for_loop_expression     go to state 237
    while                   go to state 238
    local_block             go to state 378
    if_expression           go to state 239
    call_expression         go to state 241
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_name               go to state 40


State 367

  197 switch_expression: T_SWITCH '(' value ')' . $@14 '{' case_clauses '}'

    $default  reduce using rule 196 ($@14)

    $@14  go to state 379


State 368

  117 shorthand_assignment: variable_reference $@12 shorthand_assignment_operator expression .

    $default  reduce using rule 117 (shorthand_assignment)


State 369

  114 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 78

    assignment_expression  go to state 380


State 370

  113 assignment: assignment_target '.' T_IDENT $@11 . assignment_expression

    T_ASSIGN  shift, and go to state 78

    assignment_expression  go to state 381


State 371

  244 map_associate: T_STRING ':' @30 value .

    $default  reduce using rule 244 (map_associate)


State 372

  131 range_increment: T_DOTDOT binary_expression .
  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 131 (range_increment)


State 373

  205 for_to_clause: '(' opt_for_initializer $@16 ';' . binary_expression ';' $@17 for_increment $@18 ')'

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    variable_reference      go to state 126
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 382
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 374

  208 opt_for_initializer: type_name variable_identifier $@19 . assignment_expression

    T_ASSIGN  shift, and go to state 78

    assignment_expression  go to state 383


State 375

  213 in_clause: '(' type_name variable_identifier $@20 . ':' expression ')'

    ':'  shift, and go to state 384


State 376

  218 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 316

    closing_brace  go to state 385


State 377

  222 if_expression: T_IF condition $@23 local_block $@24 . else_clause

    T_ELSE  shift, and go to state 386

    T_ELSE    [reduce using rule 223 (else_clause)]
    $default  reduce using rule 223 (else_clause)

    else_clause  go to state 387


State 378

  216 while: T_WHILE $@21 condition $@22 local_block .

    $default  reduce using rule 216 (while)


State 379

  197 switch_expression: T_SWITCH '(' value ')' $@14 . '{' case_clauses '}'

    '{'  shift, and go to state 388


State 380

  114 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 114 (assignment)


State 381

  113 assignment: assignment_target '.' T_IDENT $@11 assignment_expression .

    $default  reduce using rule 113 (assignment)


State 382

  145 binary_expression: binary_expression . '.' T_IDENT
  147                  | binary_expression . '[' expression ']'
  148                  | binary_expression . '~' binary_expression
  149                  | binary_expression . T_NMATCH binary_expression
  150                  | binary_expression . '&' binary_expression
  151                  | binary_expression . '|' binary_expression
  152                  | binary_expression . '+' binary_expression
  153                  | binary_expression . '^' binary_expression
  154                  | binary_expression . '-' binary_expression
  155                  | binary_expression . '*' binary_expression
  156                  | binary_expression . '/' binary_expression
  157                  | binary_expression . '%' binary_expression
  158                  | binary_expression . T_SHIFT_LEFT binary_expression
  159                  | binary_expression . T_SHIFT_RIGHT binary_expression
  160                  | binary_expression . T_POWER_TO binary_expression
  161                  | binary_expression . T_AND binary_expression
  162                  | binary_expression . T_OR binary_expression
  163                  | binary_expression . '<' binary_expression
  164                  | binary_expression . '>' binary_expression
  165                  | binary_expression . T_LE binary_expression
  166                  | binary_expression . T_GE binary_expression
  167                  | binary_expression . T_EQ binary_expression
  168                  | binary_expression . T_NE binary_expression
  205 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression . ';' $@17 for_increment $@18 ')'

    T_NMATCH       shift, and go to state 170
    T_NE           shift, and go to state 171
    T_EQ           shift, and go to state 172
    T_SHIFT_LEFT   shift, and go to state 173
    T_SHIFT_RIGHT  shift, and go to state 174
    T_OR           shift, and go to state 175
    T_AND          shift, and go to state 176
    T_LE           shift, and go to state 177
    T_GE           shift, and go to state 178
    T_POWER_TO     shift, and go to state 179
    '&'            shift, and go to state 180
    '|'            shift, and go to state 181
    '^'            shift, and go to state 182
    '~'            shift, and go to state 183
    '<'            shift, and go to state 184
    '>'            shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '*'            shift, and go to state 188
    '/'            shift, and go to state 189
    '%'            shift, and go to state 190
    '['            shift, and go to state 191
    '.'            shift, and go to state 192
    ';'            shift, and go to state 389


State 383

  208 opt_for_initializer: type_name variable_identifier $@19 assignment_expression .

    $default  reduce using rule 208 (opt_for_initializer)


State 384

  213 in_clause: '(' type_name variable_identifier $@20 ':' . expression ')'

    T_NEW                    shift, and go to state 113
    T_IDENT                  shift, and go to state 114
    T_NUM                    shift, and go to state 87
    T_FLOATING_POINT_NUMBER  shift, and go to state 88
    T_STRING                 shift, and go to state 115
    T_CHARACTER              shift, and go to state 90
    T_TRUE                   shift, and go to state 91
    T_FALSE                  shift, and go to state 92
    T_FUNC                   shift, and go to state 116
    T_VARIABLE               shift, and go to state 117
    '!'                      shift, and go to state 118
    '~'                      shift, and go to state 119
    '+'                      shift, and go to state 120
    '-'                      shift, and go to state 121
    '*'                      shift, and go to state 122
    '['                      shift, and go to state 123
    '{'                      shift, and go to state 124
    '('                      shift, and go to state 125

    $default  reduce using rule 127 (range_expression)

    variable_reference      go to state 126
    expression              go to state 390
    range_expression        go to state 128
    simple_term             go to state 129
    constructor_expression  go to state 130
    unary_expression        go to state 131
    binary_expression       go to state 132
    value                   go to state 133
    string                  go to state 134
    call_expression         go to state 135
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_cast               go to state 139
    boolean_literal         go to state 95
    float_literal           go to state 96
    integer_literal         go to state 97
    character_literal       go to state 98
    simple_literal          go to state 140


State 385

  218 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 218 (local_block)


State 386

  225 else_clause: T_ELSE . $@25 local_block

    $default  reduce using rule 224 ($@25)

    $@25  go to state 391


State 387

  222 if_expression: T_IF condition $@23 local_block $@24 else_clause .

    $default  reduce using rule 222 (if_expression)


State 388

  197 switch_expression: T_SWITCH '(' value ')' $@14 '{' . case_clauses '}'

    T_CASE     shift, and go to state 392
    T_DEFAULT  shift, and go to state 393

    $default  reduce using rule 186 (case_clauses)

    case_clauses   go to state 394
    case_clause    go to state 395
    case_selector  go to state 396


State 389

  205 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' . $@17 for_increment $@18 ')'

    $default  reduce using rule 203 ($@17)

    $@17  go to state 397


State 390

  213 in_clause: '(' type_name variable_identifier $@20 ':' expression . ')'

    ')'  shift, and go to state 398


State 391

  225 else_clause: T_ELSE $@25 . local_block

    error              shift, and go to state 211
    T_FOR              shift, and go to state 212
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 213
    T_FUNC             shift, and go to state 116
    T_IF               shift, and go to state 214
    T_WHILE            shift, and go to state 215
    T_GOTO             shift, and go to state 216
    T_SWITCH           shift, and go to state 217
    T_BREAK            shift, and go to state 218
    T_CONTINUE         shift, and go to state 219
    T_RETURN           shift, and go to state 220
    T_VARIABLE         shift, and go to state 161
    '*'                shift, and go to state 122
    '['                shift, and go to state 123
    ';'                shift, and go to state 221
    '{'                shift, and go to state 361

    variable_reference      go to state 223
    var_decl                go to state 308
    block                   go to state 225
    statement               go to state 362
    assignment              go to state 227
    shorthand_assignment    go to state 228
    assignment_target       go to state 229
    increment_expression    go to state 230
    break                   go to state 231
    continue                go to state 232
    return_expression       go to state 233
    label                   go to state 234
    goto_expression         go to state 235
    switch_expression       go to state 236
    for_loop_expression     go to state 237
    while                   go to state 238
    local_block             go to state 399
    if_expression           go to state 239
    call_expression         go to state 241
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_name               go to state 40


State 392

  189 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 400
    T_STRING  shift, and go to state 401
    '-'       shift, and go to state 93

    case_condition   go to state 402
    integer_literal  go to state 403


State 393

  190 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 404


State 394

  197 switch_expression: T_SWITCH '(' value ')' $@14 '{' case_clauses . '}'

    '}'  shift, and go to state 405


State 395

  187 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 392
    T_DEFAULT  shift, and go to state 393

    $default  reduce using rule 186 (case_clauses)

    case_clauses   go to state 406
    case_clause    go to state 395
    case_selector  go to state 396


State 396

  188 case_clause: case_selector . stmntlist

    error              shift, and go to state 211
    T_FOR              shift, and go to state 212
    T_TYPE_IDENTIFIER  shift, and go to state 38
    T_IDENT            shift, and go to state 213
    T_FUNC             shift, and go to state 116
    T_IF               shift, and go to state 214
    T_WHILE            shift, and go to state 215
    T_GOTO             shift, and go to state 216
    T_SWITCH           shift, and go to state 217
    T_BREAK            shift, and go to state 218
    T_CONTINUE         shift, and go to state 219
    T_RETURN           shift, and go to state 220
    T_VARIABLE         shift, and go to state 161
    '*'                shift, and go to state 122
    '['                shift, and go to state 123
    ';'                shift, and go to state 221
    '{'                shift, and go to state 222

    T_CASE     reduce using rule 226 (stmntlist)
    T_DEFAULT  reduce using rule 226 (stmntlist)
    '}'        reduce using rule 226 (stmntlist)

    variable_reference      go to state 223
    var_decl                go to state 308
    block                   go to state 225
    statement               go to state 226
    assignment              go to state 227
    shorthand_assignment    go to state 228
    assignment_target       go to state 229
    increment_expression    go to state 230
    break                   go to state 231
    continue                go to state 232
    return_expression       go to state 233
    label                   go to state 234
    goto_expression         go to state 235
    switch_expression       go to state 236
    for_loop_expression     go to state 237
    while                   go to state 238
    if_expression           go to state 239
    stmntlist               go to state 407
    call_expression         go to state 241
    array_constructor       go to state 136
    map_constructor         go to state 137
    function_id_or_pointer  go to state 138
    type_name               go to state 40


State 397

  205 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 . for_increment $@18 ')'

    T_IDENT     shift, and go to state 160
    T_VARIABLE  shift, and go to state 161

    variable_reference    go to state 408
    shorthand_assignment  go to state 409
    increment_expression  go to state 410
    for_increment         go to state 411


State 398

  213 in_clause: '(' type_name variable_identifier $@20 ':' expression ')' .

    $default  reduce using rule 213 (in_clause)


State 399

  225 else_clause: T_ELSE $@25 local_block .

    $default  reduce using rule 225 (else_clause)


State 400

  193 case_condition: T_NUM . T_DOTDOT T_NUM
  257 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 412

    $default  reduce using rule 257 (integer_literal)


State 401

  192 case_condition: T_STRING .

    $default  reduce using rule 192 (case_condition)


State 402

  189 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 413


State 403

  191 case_condition: integer_literal .

    $default  reduce using rule 191 (case_condition)


State 404

  190 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 190 (case_selector)


State 405

  197 switch_expression: T_SWITCH '(' value ')' $@14 '{' case_clauses '}' .

    $default  reduce using rule 197 (switch_expression)


State 406

  187 case_clauses: case_clause case_clauses .

    $default  reduce using rule 187 (case_clauses)


State 407

  188 case_clause: case_selector stmntlist .

    $default  reduce using rule 188 (case_clause)


State 408

  117 shorthand_assignment: variable_reference . $@12 shorthand_assignment_operator expression
  134 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 302
    T_MINUSMINUS  shift, and go to state 303

    $default  reduce using rule 116 ($@12)

    $@12                 go to state 304
    minusminus_plusplus  go to state 306


State 409

  201 for_increment: shorthand_assignment .

    $default  reduce using rule 201 (for_increment)


State 410

  200 for_increment: increment_expression .

    $default  reduce using rule 200 (for_increment)


State 411

  205 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment . $@18 ')'

    $default  reduce using rule 204 ($@18)

    $@18  go to state 414


State 412

  193 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 415


State 413

  189 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 189 (case_selector)


State 414

  205 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment $@18 . ')'

    ')'  shift, and go to state 416


State 415

  193 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 193 (case_condition)


State 416

  205 for_to_clause: '(' opt_for_initializer $@16 ';' binary_expression ';' $@17 for_increment $@18 ')' .

    $default  reduce using rule 205 (for_to_clause)
