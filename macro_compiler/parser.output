State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 49 conflicts: 10 shift/reduce
State 91 conflicts: 24 shift/reduce
State 102 conflicts: 1 reduce/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 114 conflicts: 23 shift/reduce
State 165 conflicts: 6 shift/reduce
State 168 conflicts: 1 shift/reduce
State 187 conflicts: 1 reduce/reduce
State 203 conflicts: 23 shift/reduce
State 204 conflicts: 1 shift/reduce
State 205 conflicts: 1 shift/reduce
State 206 conflicts: 1 shift/reduce
State 207 conflicts: 1 shift/reduce
State 208 conflicts: 1 shift/reduce
State 209 conflicts: 1 shift/reduce
State 210 conflicts: 1 shift/reduce
State 211 conflicts: 1 shift/reduce
State 212 conflicts: 1 shift/reduce
State 213 conflicts: 1 shift/reduce
State 214 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 216 conflicts: 1 shift/reduce
State 217 conflicts: 1 shift/reduce
State 218 conflicts: 1 shift/reduce
State 219 conflicts: 1 shift/reduce
State 220 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 222 conflicts: 1 shift/reduce
State 223 conflicts: 1 shift/reduce
State 224 conflicts: 1 shift/reduce
State 229 conflicts: 1 reduce/reduce
State 249 conflicts: 1 shift/reduce
State 271 conflicts: 1 shift/reduce
State 281 conflicts: 1 shift/reduce
State 309 conflicts: 16 shift/reduce, 1 reduce/reduce
State 319 conflicts: 1 shift/reduce
State 324 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | macro_definition macro_definitions

    8 namespace: %empty
    9          | T_NAMESPACE T_IDENT ';'

   10 prerequisites: %empty
   11              | prerequisites require

   12 require: T_REQUIRE T_STRING ';'

   13 global_declarations: %empty
   14                    | global_declarations constants ';'
   15                    | global_declarations global_var ';'

   16 scope: %empty
   17      | T_STATIC

   18 constants: T_CONST constant_list

   19 constant_list: constdef
   20              | constant_list ',' constdef

   21 $@3: %empty

   22 $@4: %empty

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   24 constant_literal: simple_literal
   25                 | T_STRING

   26 variable_identifier: T_IDENT
   27                    | T_NUM
   28                    | T_STRING

   29 variable_reference: T_VARIABLE
   30                   | T_IDENT

   31 macro_declaration: T_IDENT
   32                  | T_FUNC

   33 macro_type: scope T_VOID
   34           | scope type_name

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description

   36 global_var: scope var_decl

   37 var_decl: type_name variable_identifier assignment_expression
   38         | type_name variable_identifier

   39 optional_description: %empty
   40                     | T_STRING

   41 parameter_list: %empty
   42               | non_empty_pardecl

   43 non_empty_pardecl: par_decl
   44                  | non_empty_pardecl ',' par_decl

   45 par_decl: type_name variable_identifier

   46 $@5: %empty

   47 macro_definition: $@5 macrostart block

   48 block: '{' var_decls stmntlist closing_brace

   49 var_decls: %empty
   50          | var_decls var_decl ';'

   51 statement: ';'
   52          | call_expression ';'
   53          | assignment ';'
   54          | if_expression
   55          | while
   56          | for_loop_expression
   57          | switch_expression
   58          | break
   59          | continue
   60          | return_expression
   61          | goto
   62          | block
   63          | increment_expression
   64          | label
   65          | var_decl
   66          | error ';'

   67 assignment: variable_reference assignment_expression

   68 $@6: %empty

   69 assignment: assignment_target '.' T_IDENT $@6 assignment_expression
   70           | assignment_target '[' binary_expression ']' assignment_expression
   71           | shorthand_assignment

   72 $@7: %empty

   73 shorthand_assignment: variable_reference $@7 shorthand_assignment_operator simple_expression

   74 assignment_target: variable_reference

   75 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   76                              | T_SH_ASSIGN_DIV
   77                              | T_SH_ASSIGN_MOD
   78                              | T_SH_ASSIGN_PLUS
   79                              | T_SH_ASSIGN_MINUS

   80 assignment_expression: T_ASSIGN simple_expression

   81 simple_expression: binary_expression
   82                  | range_expression

   83 binary_expression_or_range: binary_expression
   84                           | range_expression

   85 range_expression: %empty

   86 $@8: %empty

   87 range_expression: binary_expression T_DOTDOT binary_expression $@8 range_increment

   88 range_increment: %empty
   89                | T_DOTDOT binary_expression

   90 minusminus_plusplus: T_MINUSMINUS
   91                    | T_PLUSPLUS

   92 increment_expression: variable_reference minusminus_plusplus

   93 s_bterm: value
   94        | call_expression
   95        | constructor_expression

   96 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')'

   97 binary_expression: s_bterm
   98                  | type_cast s_bterm
   99                  | binary_expression '.' T_IDENT
  100                  | binary_expression '[' binary_expression_or_range ']'
  101                  | '!' binary_expression
  102                  | '~' binary_expression
  103                  | '+' binary_expression
  104                  | '-' variable_reference
  105                  | binary_expression '~' binary_expression
  106                  | binary_expression T_NMATCH binary_expression
  107                  | binary_expression '&' binary_expression
  108                  | binary_expression '|' binary_expression
  109                  | binary_expression '+' binary_expression
  110                  | binary_expression '^' binary_expression
  111                  | binary_expression '-' binary_expression
  112                  | binary_expression '*' binary_expression
  113                  | binary_expression '/' binary_expression
  114                  | binary_expression '%' binary_expression
  115                  | binary_expression T_SHIFT_LEFT binary_expression
  116                  | binary_expression T_SHIFT_RIGHT binary_expression
  117                  | binary_expression T_POWER_TO binary_expression
  118                  | binary_expression T_AND binary_expression
  119                  | binary_expression T_OR binary_expression
  120                  | binary_expression '<' binary_expression
  121                  | binary_expression '>' binary_expression
  122                  | binary_expression T_LE binary_expression
  123                  | binary_expression T_GE binary_expression
  124                  | binary_expression T_EQ binary_expression
  125                  | binary_expression T_NE binary_expression
  126                  | '(' binary_expression ')'
  127                  | variable_reference assignment_expression

  128 condition: '(' binary_expression ')'
  129          | '(' binary_expression

  130 value: T_VARIABLE
  131      | string
  132      | simple_literal
  133      | map_literal
  134      | array_literal
  135      | T_IDENT

  136 $@9: %empty

  137 map_literal: '{' $@9 optional_map_associates closing_brace

  138 optional_map_associates: %empty
  139                        | map_associates

  140 map_associates: map_associate
  141               | map_associates ',' map_associate

  142 map_associate: T_STRING T_ASSOC_ARROW simple_literal
  143              | T_STRING T_ASSOC_ARROW T_STRING

  144 $@10: %empty

  145 array_literal: '[' $@10 ']'

  146 $@11: %empty

  147 array_literal: '[' $@11 array_elements ']'

  148 array_elements: array_elements ',' array_element
  149               | array_element

  150 array_element: simple_array_element
  151              | T_STRING

  152 simple_array_element: integer_literal
  153                     | T_CHARACTER
  154                     | T_TRUE
  155                     | T_FALSE

  156 string: T_STRING
  157       | string T_STRING

  158 break: T_BREAK opt_num ';'

  159 continue: T_CONTINUE opt_num ';'

  160 return_expression: T_RETURN optional_bterm

  161 optional_bterm: %empty
  162               | binary_expression

  163 opt_num: %empty
  164        | T_NUM

  165 case_clauses: %empty
  166             | case_clause case_clauses

  167 case_clause: case_selector stmntlist

  168 case_selector: T_CASE case_condition ':'
  169              | T_DEFAULT ':'

  170 case_condition: integer_literal
  171               | T_STRING
  172               | T_NUM T_DOTDOT T_NUM

  173 label: T_IDENT ':'

  174 goto: T_GOTO T_IDENT

  175 $@12: %empty

  176 switch_expression: T_SWITCH '(' value ')' $@12 '{' case_clauses '}'

  177 $@13: %empty

  178 for_loop_expression: T_FOR for_clause $@13 local_block

  179 for_increment: increment_expression
  180              | shorthand_assignment

  181 $@14: %empty

  182 $@15: %empty

  183 $@16: %empty

  184 for_to_clause: '(' opt_for_initializer $@14 ';' binary_expression ';' $@15 for_increment $@16 ')'

  185 opt_for_initializer: %empty

  186 $@17: %empty

  187 opt_for_initializer: type_name variable_identifier $@17 assignment_expression

  188 for_clause: for_to_clause
  189           | in_clause
  190           | error

  191 $@18: %empty

  192 in_clause: '(' type_name variable_identifier $@18 ':' simple_expression ')'

  193 $@19: %empty

  194 $@20: %empty

  195 while: T_WHILE $@19 condition $@20 local_block

  196 local_block: statement
  197            | '{' stmntlist closing_brace

  198 closing_brace: '}'

  199 $@21: %empty

  200 $@22: %empty

  201 if_expression: T_IF condition $@21 local_block $@22 else_clause

  202 else_clause: %empty

  203 $@23: %empty

  204 else_clause: T_ELSE $@23 local_block

  205 stmntlist: %empty

  206 $@24: %empty

  207 stmntlist: statement $@24 stmntlist

  208 closing_paren: ')'

  209 @25: %empty

  210 call_expression: T_FUNC '(' @25 parameter_list closing_paren

  211 @26: %empty

  212 call_expression: function_id_or_pointer '(' @26 parameter_list closing_paren

  213 function_id_or_pointer: '*' variable_reference
  214                       | T_IDENT
  215                       | error

  216 parameter_list: nonempty_parameters

  217 nonempty_parameters: parameter
  218                    | nonempty_parameters ',' parameter
  219                    | error

  220 parameter: simple_expression

  221 type_cast: '(' type_name ')'

  222 type_name: T_TYPE_IDENTIFIER
  223          | T_TYPE_IDENTIFIER array_size

  224 array_size: '[' ']'
  225           | '[' T_NUM ']'

  226 boolean_literal: T_TRUE
  227                | T_FALSE

  228 float_literal: T_FLOATING_POINT_NUMBER

  229 integer_literal: T_NUM
  230                | '-' T_NUM

  231 character_literal: T_CHARACTER

  232 simple_literal: integer_literal
  233               | float_literal
  234               | character_literal
  235               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 101
    '%' (37) 114
    '&' (38) 107
    '(' (40) 35 96 126 128 129 176 184 192 210 212 221
    ')' (41) 35 96 126 128 176 184 192 208 221
    '*' (42) 112 213
    '+' (43) 103 109
    ',' (44) 20 44 141 148 218
    '-' (45) 104 111 230
    '.' (46) 69 99
    '/' (47) 113
    ':' (58) 168 169 173 192
    ';' (59) 9 12 14 15 50 51 52 53 66 158 159 184
    '<' (60) 120
    '>' (62) 121
    '[' (91) 70 100 145 147 224 225
    ']' (93) 70 100 145 147 224 225
    '^' (94) 110
    '{' (123) 48 137 176 197
    '|' (124) 108
    '}' (125) 176 198
    '~' (126) 102 105
    error (256) 66 190 215 219
    T_NAMESPACE (258) 9
    T_REQUIRE (259) 12
    T_FOR (260) 178
    T_NEW (261) 96
    T_STATIC (262) 17
    T_VOID (263) 33
    T_TYPE_IDENTIFIER (264) 96 222 223
    T_IDENT (265) 9 26 30 31 69 99 135 173 174 214
    T_NUM (266) 27 164 172 225 229 230
    T_FLOATING_POINT_NUMBER (267) 228
    T_STRING (268) 12 25 28 40 142 143 151 156 157 171
    T_CHARACTER (269) 153 231
    T_CONST (270) 18
    T_TRUE (271) 154 226
    T_FALSE (272) 155 227
    T_FUNC (273) 32 210
    T_DOTDOT (274) 87 89 172
    T_PLUSPLUS (275) 91
    T_MINUSMINUS (276) 90
    T_IF (277) 201
    T_ELSE (278) 204
    T_WHILE (279) 195
    T_GOTO (280) 174
    T_SH_ASSIGN_PLUS (281) 78
    T_SH_ASSIGN_MINUS (282) 79
    T_SH_ASSIGN_MULT (283) 75
    T_SH_ASSIGN_DIV (284) 76
    T_SH_ASSIGN_MOD (285) 77
    T_SWITCH (286) 176
    T_CASE (287) 168
    T_DEFAULT (288) 169
    T_BREAK (289) 158
    T_CONTINUE (290) 159
    T_RETURN (291) 160
    T_VARIABLE (292) 29 130
    T_ASSOC_ARROW (293) 142 143
    T_NMATCH (294) 106
    T_ASSIGN (295) 23 80
    T_NE (296) 125
    T_EQ (297) 124
    T_SHIFT_LEFT (298) 115
    T_SHIFT_RIGHT (299) 116
    T_OR (300) 119
    T_AND (301) 118
    T_LE (302) 122
    T_GE (303) 123
    T_POWER_TO (304) 117


Nonterminals, with rules where they appear

    $accept (72)
        on left: 0
    file_structure (73)
        on left: 3
        on right: 0
    $@1 (74)
        on left: 1
        on right: 3
    $@2 (75)
        on left: 2
        on right: 3
    header_delimiter (76)
        on left: 4 5
        on right: 3
    macro_definitions (77)
        on left: 6 7
        on right: 3 7
    namespace (78)
        on left: 8 9
        on right: 3
    prerequisites (79)
        on left: 10 11
        on right: 3 11
    require (80)
        on left: 12
        on right: 11
    global_declarations (81)
        on left: 13 14 15
        on right: 3 14 15
    scope (82)
        on left: 16 17
        on right: 33 34 36
    constants (83)
        on left: 18
        on right: 14
    constant_list (84)
        on left: 19 20
        on right: 18 20
    constdef (85)
        on left: 23
        on right: 19 20
    $@3 (86)
        on left: 21
        on right: 23
    $@4 (87)
        on left: 22
        on right: 23
    constant_literal (88)
        on left: 24 25
        on right: 23
    variable_identifier (89)
        on left: 26 27 28
        on right: 23 37 38 45 187 192
    variable_reference (90)
        on left: 29 30
        on right: 67 73 74 92 104 127 213
    macro_declaration (91)
        on left: 31 32
        on right: 35
    macro_type (92)
        on left: 33 34
        on right: 35
    macrostart (93)
        on left: 35
        on right: 47
    global_var (94)
        on left: 36
        on right: 15
    var_decl (95)
        on left: 37 38
        on right: 36 50 65
    optional_description (96)
        on left: 39 40
        on right: 35
    parameter_list (97)
        on left: 41 42 216
        on right: 35 210 212
    non_empty_pardecl (98)
        on left: 43 44
        on right: 42 44
    par_decl (99)
        on left: 45
        on right: 43 44
    macro_definition (100)
        on left: 47
        on right: 7
    $@5 (101)
        on left: 46
        on right: 47
    block (102)
        on left: 48
        on right: 47 62
    var_decls (103)
        on left: 49 50
        on right: 48 50
    statement (104)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
        on right: 196 207
    assignment (105)
        on left: 67 69 70 71
        on right: 53
    $@6 (106)
        on left: 68
        on right: 69
    shorthand_assignment (107)
        on left: 73
        on right: 71 180
    $@7 (108)
        on left: 72
        on right: 73
    assignment_target (109)
        on left: 74
        on right: 69 70
    shorthand_assignment_operator (110)
        on left: 75 76 77 78 79
        on right: 73
    assignment_expression (111)
        on left: 80
        on right: 37 67 69 70 127 187
    simple_expression (112)
        on left: 81 82
        on right: 73 80 192 220
    binary_expression_or_range (113)
        on left: 83 84
        on right: 100
    range_expression (114)
        on left: 85 87
        on right: 82 84
    $@8 (115)
        on left: 86
        on right: 87
    range_increment (116)
        on left: 88 89
        on right: 87
    minusminus_plusplus (117)
        on left: 90 91
        on right: 92
    increment_expression (118)
        on left: 92
        on right: 63 179
    s_bterm (119)
        on left: 93 94 95
        on right: 97 98
    constructor_expression (120)
        on left: 96
        on right: 95
    binary_expression (121)
        on left: 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127
        on right: 70 81 83 87 89 99 100 101 102 103 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 128 129 162 184
    condition (122)
        on left: 128 129
        on right: 195 201
    value (123)
        on left: 130 131 132 133 134 135
        on right: 93 176
    map_literal (124)
        on left: 137
        on right: 133
    $@9 (125)
        on left: 136
        on right: 137
    optional_map_associates (126)
        on left: 138 139
        on right: 137
    map_associates (127)
        on left: 140 141
        on right: 139 141
    map_associate (128)
        on left: 142 143
        on right: 140 141
    array_literal (129)
        on left: 145 147
        on right: 134
    $@10 (130)
        on left: 144
        on right: 145
    $@11 (131)
        on left: 146
        on right: 147
    array_elements (132)
        on left: 148 149
        on right: 147 148
    array_element (133)
        on left: 150 151
        on right: 148 149
    simple_array_element (134)
        on left: 152 153 154 155
        on right: 150
    string (135)
        on left: 156 157
        on right: 131 157
    break (136)
        on left: 158
        on right: 58
    continue (137)
        on left: 159
        on right: 59
    return_expression (138)
        on left: 160
        on right: 60
    optional_bterm (139)
        on left: 161 162
        on right: 160
    opt_num (140)
        on left: 163 164
        on right: 158 159
    case_clauses (141)
        on left: 165 166
        on right: 166 176
    case_clause (142)
        on left: 167
        on right: 166
    case_selector (143)
        on left: 168 169
        on right: 167
    case_condition (144)
        on left: 170 171 172
        on right: 168
    label (145)
        on left: 173
        on right: 64
    goto (146)
        on left: 174
        on right: 61
    switch_expression (147)
        on left: 176
        on right: 57
    $@12 (148)
        on left: 175
        on right: 176
    for_loop_expression (149)
        on left: 178
        on right: 56
    $@13 (150)
        on left: 177
        on right: 178
    for_increment (151)
        on left: 179 180
        on right: 184
    for_to_clause (152)
        on left: 184
        on right: 188
    $@14 (153)
        on left: 181
        on right: 184
    $@15 (154)
        on left: 182
        on right: 184
    $@16 (155)
        on left: 183
        on right: 184
    opt_for_initializer (156)
        on left: 185 187
        on right: 184
    $@17 (157)
        on left: 186
        on right: 187
    for_clause (158)
        on left: 188 189 190
        on right: 178
    in_clause (159)
        on left: 192
        on right: 189
    $@18 (160)
        on left: 191
        on right: 192
    while (161)
        on left: 195
        on right: 55
    $@19 (162)
        on left: 193
        on right: 195
    $@20 (163)
        on left: 194
        on right: 195
    local_block (164)
        on left: 196 197
        on right: 178 195 201 204
    closing_brace (165)
        on left: 198
        on right: 48 137 197
    if_expression (166)
        on left: 201
        on right: 54
    $@21 (167)
        on left: 199
        on right: 201
    $@22 (168)
        on left: 200
        on right: 201
    else_clause (169)
        on left: 202 204
        on right: 201
    $@23 (170)
        on left: 203
        on right: 204
    stmntlist (171)
        on left: 205 207
        on right: 48 167 197 207
    $@24 (172)
        on left: 206
        on right: 207
    closing_paren (173)
        on left: 208
        on right: 210 212
    call_expression (174)
        on left: 210 212
        on right: 52 94
    @25 (175)
        on left: 209
        on right: 210
    @26 (176)
        on left: 211
        on right: 212
    function_id_or_pointer (177)
        on left: 213 214 215
        on right: 212
    nonempty_parameters (178)
        on left: 217 218 219
        on right: 216 218
    parameter (179)
        on left: 220
        on right: 217 218
    type_cast (180)
        on left: 221
        on right: 98
    type_name (181)
        on left: 222 223
        on right: 34 37 38 45 187 192 221
    array_size (182)
        on left: 224 225
        on right: 223
    boolean_literal (183)
        on left: 226 227
        on right: 235
    float_literal (184)
        on left: 228
        on right: 233
    integer_literal (185)
        on left: 229 230
        on right: 152 170 232
    character_literal (186)
        on left: 231
        on right: 234
    simple_literal (187)
        on left: 232 233 234 235
        on right: 24 132 142


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 8 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

    9 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites global_declarations $@2 header_delimiter macro_definitions

    $default  reduce using rule 10 (prerequisites)

    prerequisites  go to state 7


State 6

    9 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . global_declarations $@2 header_delimiter macro_definitions
   11 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 13 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

    9 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 9 (namespace)


State 9

   12 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   11 prerequisites: prerequisites require .

    $default  reduce using rule 11 (prerequisites)


State 11

    3 file_structure: $@1 namespace prerequisites global_declarations . $@2 header_delimiter macro_definitions
   14 global_declarations: global_declarations . constants ';'
   15                    | global_declarations . global_var ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14

    T_STATIC           [reduce using rule 2 ($@2)]
    T_TYPE_IDENTIFIER  reduce using rule 2 ($@2)
    T_TYPE_IDENTIFIER  [reduce using rule 16 (scope)]
    $default           reduce using rule 2 ($@2)

    $@2         go to state 15
    scope       go to state 16
    constants   go to state 17
    global_var  go to state 18


State 12

   12 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 19


State 13

   17 scope: T_STATIC .

    $default  reduce using rule 17 (scope)


State 14

   18 constants: T_CONST . constant_list

    $default  reduce using rule 21 ($@3)

    constant_list  go to state 20
    constdef       go to state 21
    $@3            go to state 22


State 15

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 . header_delimiter macro_definitions

    '!'  shift, and go to state 23

    $default  reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 24


State 16

   36 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    var_decl   go to state 26
    type_name  go to state 27


State 17

   14 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 28


State 18

   15 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 29


State 19

   12 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 12 (require)


State 20

   18 constants: T_CONST constant_list .
   20 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 30

    $default  reduce using rule 18 (constants)


State 21

   19 constant_list: constdef .

    $default  reduce using rule 19 (constant_list)


State 22

   23 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 34


State 23

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 24

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 46 ($@5)

    macro_definitions  go to state 35
    macro_definition   go to state 36
    $@5                go to state 37


State 25

  222 type_name: T_TYPE_IDENTIFIER .
  223          | T_TYPE_IDENTIFIER . array_size

    '['  shift, and go to state 38

    $default  reduce using rule 222 (type_name)

    array_size  go to state 39


State 26

   36 global_var: scope var_decl .

    $default  reduce using rule 36 (global_var)


State 27

   37 var_decl: type_name . variable_identifier assignment_expression
   38         | type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 40


State 28

   14 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 14 (global_declarations)


State 29

   15 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 15 (global_declarations)


State 30

   20 constant_list: constant_list ',' . constdef

    $default  reduce using rule 21 ($@3)

    constdef  go to state 41
    $@3       go to state 22


State 31

   26 variable_identifier: T_IDENT .

    $default  reduce using rule 26 (variable_identifier)


State 32

   27 variable_identifier: T_NUM .

    $default  reduce using rule 27 (variable_identifier)


State 33

   28 variable_identifier: T_STRING .

    $default  reduce using rule 28 (variable_identifier)


State 34

   23 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 42


State 35

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 36

    7 macro_definitions: macro_definition . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 46 ($@5)

    macro_definitions  go to state 43
    macro_definition   go to state 36
    $@5                go to state 37


State 37

   47 macro_definition: $@5 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 16 (scope)

    scope       go to state 44
    macro_type  go to state 45
    macrostart  go to state 46


State 38

  224 array_size: '[' . ']'
  225           | '[' . T_NUM ']'

    T_NUM  shift, and go to state 47
    ']'    shift, and go to state 48


State 39

  223 type_name: T_TYPE_IDENTIFIER array_size .

    $default  reduce using rule 223 (type_name)


State 40

   37 var_decl: type_name variable_identifier . assignment_expression
   38         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 49

    $default  reduce using rule 38 (var_decl)

    assignment_expression  go to state 50


State 41

   20 constant_list: constant_list ',' constdef .

    $default  reduce using rule 20 (constant_list)


State 42

   23 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 53
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    '-'                      shift, and go to state 57

    constant_literal   go to state 58
    boolean_literal    go to state 59
    float_literal      go to state 60
    integer_literal    go to state 61
    character_literal  go to state 62
    simple_literal     go to state 63


State 43

    7 macro_definitions: macro_definition macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 44

   33 macro_type: scope . T_VOID
   34           | scope . type_name

    T_VOID             shift, and go to state 64
    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 65


State 45

   35 macrostart: macro_type . macro_declaration '(' parameter_list ')' optional_description

    T_IDENT  shift, and go to state 66
    T_FUNC   shift, and go to state 67

    macro_declaration  go to state 68


State 46

   47 macro_definition: $@5 macrostart . block

    '{'  shift, and go to state 69

    block  go to state 70


State 47

  225 array_size: '[' T_NUM . ']'

    ']'  shift, and go to state 71


State 48

  224 array_size: '[' ']' .

    $default  reduce using rule 224 (array_size)


State 49

   80 assignment_expression: T_ASSIGN . simple_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    error              [reduce using rule 85 (range_expression)]
    T_FOR              reduce using rule 85 (range_expression)
    T_TYPE_IDENTIFIER  reduce using rule 85 (range_expression)
    T_IDENT            [reduce using rule 85 (range_expression)]
    T_FUNC             [reduce using rule 85 (range_expression)]
    T_DOTDOT           reduce using rule 85 (range_expression)
    T_IF               reduce using rule 85 (range_expression)
    T_ELSE             reduce using rule 85 (range_expression)
    T_WHILE            reduce using rule 85 (range_expression)
    T_GOTO             reduce using rule 85 (range_expression)
    T_SWITCH           reduce using rule 85 (range_expression)
    T_CASE             reduce using rule 85 (range_expression)
    T_DEFAULT          reduce using rule 85 (range_expression)
    T_BREAK            reduce using rule 85 (range_expression)
    T_CONTINUE         reduce using rule 85 (range_expression)
    T_RETURN           reduce using rule 85 (range_expression)
    T_VARIABLE         [reduce using rule 85 (range_expression)]
    T_NMATCH           reduce using rule 85 (range_expression)
    T_NE               reduce using rule 85 (range_expression)
    T_EQ               reduce using rule 85 (range_expression)
    T_SHIFT_LEFT       reduce using rule 85 (range_expression)
    T_SHIFT_RIGHT      reduce using rule 85 (range_expression)
    T_OR               reduce using rule 85 (range_expression)
    T_AND              reduce using rule 85 (range_expression)
    T_LE               reduce using rule 85 (range_expression)
    T_GE               reduce using rule 85 (range_expression)
    T_POWER_TO         reduce using rule 85 (range_expression)
    '&'                reduce using rule 85 (range_expression)
    '|'                reduce using rule 85 (range_expression)
    '^'                reduce using rule 85 (range_expression)
    '~'                [reduce using rule 85 (range_expression)]
    '<'                reduce using rule 85 (range_expression)
    '>'                reduce using rule 85 (range_expression)
    '+'                [reduce using rule 85 (range_expression)]
    '-'                [reduce using rule 85 (range_expression)]
    '*'                [reduce using rule 85 (range_expression)]
    '/'                reduce using rule 85 (range_expression)
    '%'                reduce using rule 85 (range_expression)
    '['                [reduce using rule 85 (range_expression)]
    ';'                reduce using rule 85 (range_expression)
    ','                reduce using rule 85 (range_expression)
    ')'                reduce using rule 85 (range_expression)
    '{'                [reduce using rule 85 (range_expression)]
    '.'                reduce using rule 85 (range_expression)
    ']'                reduce using rule 85 (range_expression)
    '}'                reduce using rule 85 (range_expression)

    variable_reference      go to state 86
    simple_expression       go to state 87
    range_expression        go to state 88
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 91
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 50

   37 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 37 (var_decl)


State 51

  229 integer_literal: T_NUM .

    $default  reduce using rule 229 (integer_literal)


State 52

  228 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 228 (float_literal)


State 53

   25 constant_literal: T_STRING .

    $default  reduce using rule 25 (constant_literal)


State 54

  231 character_literal: T_CHARACTER .

    $default  reduce using rule 231 (character_literal)


State 55

  226 boolean_literal: T_TRUE .

    $default  reduce using rule 226 (boolean_literal)


State 56

  227 boolean_literal: T_FALSE .

    $default  reduce using rule 227 (boolean_literal)


State 57

  230 integer_literal: '-' . T_NUM

    T_NUM  shift, and go to state 100


State 58

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 22 ($@4)

    $@4  go to state 101


State 59

  235 simple_literal: boolean_literal .

    $default  reduce using rule 235 (simple_literal)


State 60

  233 simple_literal: float_literal .

    $default  reduce using rule 233 (simple_literal)


State 61

  232 simple_literal: integer_literal .

    $default  reduce using rule 232 (simple_literal)


State 62

  234 simple_literal: character_literal .

    $default  reduce using rule 234 (simple_literal)


State 63

   24 constant_literal: simple_literal .

    $default  reduce using rule 24 (constant_literal)


State 64

   33 macro_type: scope T_VOID .

    $default  reduce using rule 33 (macro_type)


State 65

   34 macro_type: scope type_name .

    $default  reduce using rule 34 (macro_type)


State 66

   31 macro_declaration: T_IDENT .

    $default  reduce using rule 31 (macro_declaration)


State 67

   32 macro_declaration: T_FUNC .

    $default  reduce using rule 32 (macro_declaration)


State 68

   35 macrostart: macro_type macro_declaration . '(' parameter_list ')' optional_description

    '('  shift, and go to state 102


State 69

   48 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 49 (var_decls)

    var_decls  go to state 103


State 70

   47 macro_definition: $@5 macrostart block .

    $default  reduce using rule 47 (macro_definition)


State 71

  225 array_size: '[' T_NUM ']' .

    $default  reduce using rule 225 (array_size)


State 72

  215 function_id_or_pointer: error .

    $default  reduce using rule 215 (function_id_or_pointer)


State 73

   96 constructor_expression: T_NEW . T_TYPE_IDENTIFIER '(' ')'

    T_TYPE_IDENTIFIER  shift, and go to state 104


State 74

   30 variable_reference: T_IDENT .
  135 value: T_IDENT .
  214 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 30 (variable_reference)
    '('       reduce using rule 214 (function_id_or_pointer)
    $default  reduce using rule 135 (value)


State 75

  156 string: T_STRING .

    $default  reduce using rule 156 (string)


State 76

  210 call_expression: T_FUNC . '(' @25 parameter_list closing_paren

    '('  shift, and go to state 105


State 77

   29 variable_reference: T_VARIABLE .
  130 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 29 (variable_reference)
    $default  reduce using rule 130 (value)


State 78

  102 binary_expression: '~' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 106
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 79

  103 binary_expression: '+' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 107
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 80

  104 binary_expression: '-' . variable_reference
  230 integer_literal: '-' . T_NUM

    T_IDENT     shift, and go to state 108
    T_NUM       shift, and go to state 100
    T_VARIABLE  shift, and go to state 109

    variable_reference  go to state 110


State 81

  213 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 108
    T_VARIABLE  shift, and go to state 109

    variable_reference  go to state 111


State 82

  145 array_literal: '[' . $@10 ']'
  147              | '[' . $@11 array_elements ']'

    ']'       reduce using rule 144 ($@10)
    $default  reduce using rule 146 ($@11)

    $@10  go to state 112
    $@11  go to state 113


State 83

  101 binary_expression: '!' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 114
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 84

  126 binary_expression: '(' . binary_expression ')'
  221 type_cast: '(' . type_name ')'

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 115
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    type_name               go to state 116
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 85

  137 map_literal: '{' . $@9 optional_map_associates closing_brace

    $default  reduce using rule 136 ($@9)

    $@9  go to state 117


State 86

  127 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 118


State 87

   80 assignment_expression: T_ASSIGN simple_expression .

    $default  reduce using rule 80 (assignment_expression)


State 88

   82 simple_expression: range_expression .

    $default  reduce using rule 82 (simple_expression)


State 89

   97 binary_expression: s_bterm .

    $default  reduce using rule 97 (binary_expression)


State 90

   95 s_bterm: constructor_expression .

    $default  reduce using rule 95 (s_bterm)


State 91

   81 simple_expression: binary_expression .
   87 range_expression: binary_expression . T_DOTDOT binary_expression $@8 range_increment
   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 119
    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    T_DOTDOT       [reduce using rule 81 (simple_expression)]
    T_NMATCH       [reduce using rule 81 (simple_expression)]
    T_NE           [reduce using rule 81 (simple_expression)]
    T_EQ           [reduce using rule 81 (simple_expression)]
    T_SHIFT_LEFT   [reduce using rule 81 (simple_expression)]
    T_SHIFT_RIGHT  [reduce using rule 81 (simple_expression)]
    T_OR           [reduce using rule 81 (simple_expression)]
    T_AND          [reduce using rule 81 (simple_expression)]
    T_LE           [reduce using rule 81 (simple_expression)]
    T_GE           [reduce using rule 81 (simple_expression)]
    T_POWER_TO     [reduce using rule 81 (simple_expression)]
    '&'            [reduce using rule 81 (simple_expression)]
    '|'            [reduce using rule 81 (simple_expression)]
    '^'            [reduce using rule 81 (simple_expression)]
    '~'            [reduce using rule 81 (simple_expression)]
    '<'            [reduce using rule 81 (simple_expression)]
    '>'            [reduce using rule 81 (simple_expression)]
    '+'            [reduce using rule 81 (simple_expression)]
    '-'            [reduce using rule 81 (simple_expression)]
    '*'            [reduce using rule 81 (simple_expression)]
    '/'            [reduce using rule 81 (simple_expression)]
    '%'            [reduce using rule 81 (simple_expression)]
    '['            [reduce using rule 81 (simple_expression)]
    '.'            [reduce using rule 81 (simple_expression)]
    $default       reduce using rule 81 (simple_expression)


State 92

   93 s_bterm: value .

    $default  reduce using rule 93 (s_bterm)


State 93

  133 value: map_literal .

    $default  reduce using rule 133 (value)


State 94

  134 value: array_literal .

    $default  reduce using rule 134 (value)


State 95

  131 value: string .
  157 string: string . T_STRING

    T_STRING  shift, and go to state 143

    $default  reduce using rule 131 (value)


State 96

   94 s_bterm: call_expression .

    $default  reduce using rule 94 (s_bterm)


State 97

  212 call_expression: function_id_or_pointer . '(' @26 parameter_list closing_paren

    '('  shift, and go to state 144


State 98

   98 binary_expression: type_cast . s_bterm

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 145
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 146
    '-'                      shift, and go to state 57
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '{'                      shift, and go to state 85

    s_bterm                 go to state 147
    constructor_expression  go to state 90
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 99

  132 value: simple_literal .

    $default  reduce using rule 132 (value)


State 100

  230 integer_literal: '-' T_NUM .

    $default  reduce using rule 230 (integer_literal)


State 101

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 23 (constdef)


State 102

   35 macrostart: macro_type macro_declaration '(' . parameter_list ')' optional_description

    error                    shift, and go to state 148
    T_NEW                    shift, and go to state 73
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    ','  reduce using rule 85 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 85 (range_expression)]

    variable_reference      go to state 86
    parameter_list          go to state 149
    non_empty_pardecl       go to state 150
    par_decl                go to state 151
    simple_expression       go to state 152
    range_expression        go to state 88
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 91
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 153
    parameter               go to state 154
    type_cast               go to state 98
    type_name               go to state 155
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 103

   48 block: '{' var_decls . stmntlist closing_brace
   50 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 156
    T_FOR              shift, and go to state 157
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 158
    T_FUNC             shift, and go to state 76
    T_IF               shift, and go to state 159
    T_WHILE            shift, and go to state 160
    T_GOTO             shift, and go to state 161
    T_SWITCH           shift, and go to state 162
    T_BREAK            shift, and go to state 163
    T_CONTINUE         shift, and go to state 164
    T_RETURN           shift, and go to state 165
    T_VARIABLE         shift, and go to state 109
    '*'                shift, and go to state 81
    ';'                shift, and go to state 166
    '{'                shift, and go to state 69

    '}'  reduce using rule 205 (stmntlist)

    variable_reference      go to state 167
    var_decl                go to state 168
    block                   go to state 169
    statement               go to state 170
    assignment              go to state 171
    shorthand_assignment    go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    for_loop_expression     go to state 181
    while                   go to state 182
    if_expression           go to state 183
    stmntlist               go to state 184
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 104

   96 constructor_expression: T_NEW T_TYPE_IDENTIFIER . '(' ')'

    '('  shift, and go to state 186


State 105

  210 call_expression: T_FUNC '(' . @25 parameter_list closing_paren

    $default  reduce using rule 209 (@25)

    @25  go to state 187


State 106

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  102                  | '~' binary_expression .
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 102 (binary_expression)]
    $default  reduce using rule 102 (binary_expression)


State 107

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  103                  | '+' binary_expression .
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 129
    '*'         shift, and go to state 138
    '/'         shift, and go to state 139
    '%'         shift, and go to state 140
    '['         shift, and go to state 141
    '.'         shift, and go to state 142

    '.'       [reduce using rule 103 (binary_expression)]
    $default  reduce using rule 103 (binary_expression)


State 108

   30 variable_reference: T_IDENT .

    $default  reduce using rule 30 (variable_reference)


State 109

   29 variable_reference: T_VARIABLE .

    $default  reduce using rule 29 (variable_reference)


State 110

  104 binary_expression: '-' variable_reference .

    $default  reduce using rule 104 (binary_expression)


State 111

  213 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 213 (function_id_or_pointer)


State 112

  145 array_literal: '[' $@10 . ']'

    ']'  shift, and go to state 188


State 113

  147 array_literal: '[' $@11 . array_elements ']'

    T_NUM        shift, and go to state 51
    T_STRING     shift, and go to state 189
    T_CHARACTER  shift, and go to state 190
    T_TRUE       shift, and go to state 191
    T_FALSE      shift, and go to state 192
    '-'          shift, and go to state 57

    array_elements        go to state 193
    array_element         go to state 194
    simple_array_element  go to state 195
    integer_literal       go to state 196


State 114

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  101                  | '!' binary_expression .
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    T_NMATCH       [reduce using rule 101 (binary_expression)]
    T_NE           [reduce using rule 101 (binary_expression)]
    T_EQ           [reduce using rule 101 (binary_expression)]
    T_SHIFT_LEFT   [reduce using rule 101 (binary_expression)]
    T_SHIFT_RIGHT  [reduce using rule 101 (binary_expression)]
    T_OR           [reduce using rule 101 (binary_expression)]
    T_AND          [reduce using rule 101 (binary_expression)]
    T_LE           [reduce using rule 101 (binary_expression)]
    T_GE           [reduce using rule 101 (binary_expression)]
    T_POWER_TO     [reduce using rule 101 (binary_expression)]
    '&'            [reduce using rule 101 (binary_expression)]
    '|'            [reduce using rule 101 (binary_expression)]
    '^'            [reduce using rule 101 (binary_expression)]
    '~'            [reduce using rule 101 (binary_expression)]
    '<'            [reduce using rule 101 (binary_expression)]
    '>'            [reduce using rule 101 (binary_expression)]
    '+'            [reduce using rule 101 (binary_expression)]
    '-'            [reduce using rule 101 (binary_expression)]
    '*'            [reduce using rule 101 (binary_expression)]
    '/'            [reduce using rule 101 (binary_expression)]
    '%'            [reduce using rule 101 (binary_expression)]
    '['            [reduce using rule 101 (binary_expression)]
    '.'            [reduce using rule 101 (binary_expression)]
    $default       reduce using rule 101 (binary_expression)


State 115

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression
  126                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    ')'            shift, and go to state 197
    '.'            shift, and go to state 142


State 116

  221 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 198


State 117

  137 map_literal: '{' $@9 . optional_map_associates closing_brace

    T_STRING  shift, and go to state 199

    $default  reduce using rule 138 (optional_map_associates)

    optional_map_associates  go to state 200
    map_associates           go to state 201
    map_associate            go to state 202


State 118

  127 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 127 (binary_expression)


State 119

   87 range_expression: binary_expression T_DOTDOT . binary_expression $@8 range_increment

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 203
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 120

  106 binary_expression: binary_expression T_NMATCH . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 204
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 121

  125 binary_expression: binary_expression T_NE . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 205
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 122

  124 binary_expression: binary_expression T_EQ . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 206
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 123

  115 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 207
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 124

  116 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 208
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 125

  119 binary_expression: binary_expression T_OR . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 209
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 126

  118 binary_expression: binary_expression T_AND . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 210
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 127

  122 binary_expression: binary_expression T_LE . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 211
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 128

  123 binary_expression: binary_expression T_GE . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 212
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 129

  117 binary_expression: binary_expression T_POWER_TO . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 213
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 130

  107 binary_expression: binary_expression '&' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 214
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 131

  108 binary_expression: binary_expression '|' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 215
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 132

  110 binary_expression: binary_expression '^' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 216
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 133

  105 binary_expression: binary_expression '~' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 217
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 134

  120 binary_expression: binary_expression '<' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 218
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 135

  121 binary_expression: binary_expression '>' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 219
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 136

  109 binary_expression: binary_expression '+' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 220
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 137

  111 binary_expression: binary_expression '-' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 221
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 138

  112 binary_expression: binary_expression '*' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 222
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 139

  113 binary_expression: binary_expression '/' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 223
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 140

  114 binary_expression: binary_expression '%' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 224
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 141

  100 binary_expression: binary_expression '[' . binary_expression_or_range ']'

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    ']'  reduce using rule 85 (range_expression)

    variable_reference          go to state 86
    binary_expression_or_range  go to state 225
    range_expression            go to state 226
    s_bterm                     go to state 89
    constructor_expression      go to state 90
    binary_expression           go to state 227
    value                       go to state 92
    map_literal                 go to state 93
    array_literal               go to state 94
    string                      go to state 95
    call_expression             go to state 96
    function_id_or_pointer      go to state 97
    type_cast                   go to state 98
    boolean_literal             go to state 59
    float_literal               go to state 60
    integer_literal             go to state 61
    character_literal           go to state 62
    simple_literal              go to state 99


State 142

   99 binary_expression: binary_expression '.' . T_IDENT

    T_IDENT  shift, and go to state 228


State 143

  157 string: string T_STRING .

    $default  reduce using rule 157 (string)


State 144

  212 call_expression: function_id_or_pointer '(' . @26 parameter_list closing_paren

    $default  reduce using rule 211 (@26)

    @26  go to state 229


State 145

  135 value: T_IDENT .
  214 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 214 (function_id_or_pointer)
    $default  reduce using rule 135 (value)


State 146

  130 value: T_VARIABLE .

    $default  reduce using rule 130 (value)


State 147

   98 binary_expression: type_cast s_bterm .

    $default  reduce using rule 98 (binary_expression)


State 148

  215 function_id_or_pointer: error .
  219 nonempty_parameters: error .

    '('       reduce using rule 215 (function_id_or_pointer)
    $default  reduce using rule 219 (nonempty_parameters)


State 149

   35 macrostart: macro_type macro_declaration '(' parameter_list . ')' optional_description

    ')'  shift, and go to state 230


State 150

   42 parameter_list: non_empty_pardecl .
   44 non_empty_pardecl: non_empty_pardecl . ',' par_decl

    ','  shift, and go to state 231

    $default  reduce using rule 42 (parameter_list)


State 151

   43 non_empty_pardecl: par_decl .

    $default  reduce using rule 43 (non_empty_pardecl)


State 152

  220 parameter: simple_expression .

    $default  reduce using rule 220 (parameter)


State 153

  216 parameter_list: nonempty_parameters .
  218 nonempty_parameters: nonempty_parameters . ',' parameter

    ','  shift, and go to state 232

    $default  reduce using rule 216 (parameter_list)


State 154

  217 nonempty_parameters: parameter .

    $default  reduce using rule 217 (nonempty_parameters)


State 155

   45 par_decl: type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 233


State 156

   66 statement: error . ';'
  215 function_id_or_pointer: error .

    ';'  shift, and go to state 234

    $default  reduce using rule 215 (function_id_or_pointer)


State 157

  178 for_loop_expression: T_FOR . for_clause $@13 local_block

    error  shift, and go to state 235
    '('    shift, and go to state 236

    for_to_clause  go to state 237
    for_clause     go to state 238
    in_clause      go to state 239


State 158

   30 variable_reference: T_IDENT .
  173 label: T_IDENT . ':'
  214 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 240

    '('       reduce using rule 214 (function_id_or_pointer)
    $default  reduce using rule 30 (variable_reference)


State 159

  201 if_expression: T_IF . condition $@21 local_block $@22 else_clause

    '('  shift, and go to state 241

    condition  go to state 242


State 160

  195 while: T_WHILE . $@19 condition $@20 local_block

    $default  reduce using rule 193 ($@19)

    $@19  go to state 243


State 161

  174 goto: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 244


State 162

  176 switch_expression: T_SWITCH . '(' value ')' $@12 '{' case_clauses '}'

    '('  shift, and go to state 245


State 163

  158 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 246

    $default  reduce using rule 163 (opt_num)

    opt_num  go to state 247


State 164

  159 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 246

    $default  reduce using rule 163 (opt_num)

    opt_num  go to state 248


State 165

  160 return_expression: T_RETURN . optional_bterm

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    error              [reduce using rule 161 (optional_bterm)]
    T_FOR              reduce using rule 161 (optional_bterm)
    T_TYPE_IDENTIFIER  reduce using rule 161 (optional_bterm)
    T_IDENT            [reduce using rule 161 (optional_bterm)]
    T_FUNC             [reduce using rule 161 (optional_bterm)]
    T_IF               reduce using rule 161 (optional_bterm)
    T_ELSE             reduce using rule 161 (optional_bterm)
    T_WHILE            reduce using rule 161 (optional_bterm)
    T_GOTO             reduce using rule 161 (optional_bterm)
    T_SWITCH           reduce using rule 161 (optional_bterm)
    T_CASE             reduce using rule 161 (optional_bterm)
    T_DEFAULT          reduce using rule 161 (optional_bterm)
    T_BREAK            reduce using rule 161 (optional_bterm)
    T_CONTINUE         reduce using rule 161 (optional_bterm)
    T_RETURN           reduce using rule 161 (optional_bterm)
    T_VARIABLE         [reduce using rule 161 (optional_bterm)]
    '*'                [reduce using rule 161 (optional_bterm)]
    ';'                reduce using rule 161 (optional_bterm)
    '{'                [reduce using rule 161 (optional_bterm)]
    '}'                reduce using rule 161 (optional_bterm)

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 249
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    optional_bterm          go to state 250
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 166

   51 statement: ';' .

    $default  reduce using rule 51 (statement)


State 167

   67 assignment: variable_reference . assignment_expression
   73 shorthand_assignment: variable_reference . $@7 shorthand_assignment_operator simple_expression
   74 assignment_target: variable_reference .
   92 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 251
    T_MINUSMINUS  shift, and go to state 252
    T_ASSIGN      shift, and go to state 49

    '['       reduce using rule 74 (assignment_target)
    '.'       reduce using rule 74 (assignment_target)
    $default  reduce using rule 72 ($@7)

    $@7                    go to state 253
    assignment_expression  go to state 254
    minusminus_plusplus    go to state 255


State 168

   50 var_decls: var_decls var_decl . ';'
   65 statement: var_decl .

    ';'  shift, and go to state 256

    ';'       [reduce using rule 65 (statement)]
    $default  reduce using rule 65 (statement)


State 169

   62 statement: block .

    $default  reduce using rule 62 (statement)


State 170

  207 stmntlist: statement . $@24 stmntlist

    $default  reduce using rule 206 ($@24)

    $@24  go to state 257


State 171

   53 statement: assignment . ';'

    ';'  shift, and go to state 258


State 172

   71 assignment: shorthand_assignment .

    $default  reduce using rule 71 (assignment)


State 173

   69 assignment: assignment_target . '.' T_IDENT $@6 assignment_expression
   70           | assignment_target . '[' binary_expression ']' assignment_expression

    '['  shift, and go to state 259
    '.'  shift, and go to state 260


State 174

   63 statement: increment_expression .

    $default  reduce using rule 63 (statement)


State 175

   58 statement: break .

    $default  reduce using rule 58 (statement)


State 176

   59 statement: continue .

    $default  reduce using rule 59 (statement)


State 177

   60 statement: return_expression .

    $default  reduce using rule 60 (statement)


State 178

   64 statement: label .

    $default  reduce using rule 64 (statement)


State 179

   61 statement: goto .

    $default  reduce using rule 61 (statement)


State 180

   57 statement: switch_expression .

    $default  reduce using rule 57 (statement)


State 181

   56 statement: for_loop_expression .

    $default  reduce using rule 56 (statement)


State 182

   55 statement: while .

    $default  reduce using rule 55 (statement)


State 183

   54 statement: if_expression .

    $default  reduce using rule 54 (statement)


State 184

   48 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 261

    closing_brace  go to state 262


State 185

   52 statement: call_expression . ';'

    ';'  shift, and go to state 263


State 186

   96 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' . ')'

    ')'  shift, and go to state 264


State 187

  210 call_expression: T_FUNC '(' @25 . parameter_list closing_paren

    error                    shift, and go to state 148
    T_NEW                    shift, and go to state 73
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    ','  reduce using rule 85 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 85 (range_expression)]

    variable_reference      go to state 86
    parameter_list          go to state 265
    non_empty_pardecl       go to state 150
    par_decl                go to state 151
    simple_expression       go to state 152
    range_expression        go to state 88
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 91
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 153
    parameter               go to state 154
    type_cast               go to state 98
    type_name               go to state 155
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 188

  145 array_literal: '[' $@10 ']' .

    $default  reduce using rule 145 (array_literal)


State 189

  151 array_element: T_STRING .

    $default  reduce using rule 151 (array_element)


State 190

  153 simple_array_element: T_CHARACTER .

    $default  reduce using rule 153 (simple_array_element)


State 191

  154 simple_array_element: T_TRUE .

    $default  reduce using rule 154 (simple_array_element)


State 192

  155 simple_array_element: T_FALSE .

    $default  reduce using rule 155 (simple_array_element)


State 193

  147 array_literal: '[' $@11 array_elements . ']'
  148 array_elements: array_elements . ',' array_element

    ','  shift, and go to state 266
    ']'  shift, and go to state 267


State 194

  149 array_elements: array_element .

    $default  reduce using rule 149 (array_elements)


State 195

  150 array_element: simple_array_element .

    $default  reduce using rule 150 (array_element)


State 196

  152 simple_array_element: integer_literal .

    $default  reduce using rule 152 (simple_array_element)


State 197

  126 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 126 (binary_expression)


State 198

  221 type_cast: '(' type_name ')' .

    $default  reduce using rule 221 (type_cast)


State 199

  142 map_associate: T_STRING . T_ASSOC_ARROW simple_literal
  143              | T_STRING . T_ASSOC_ARROW T_STRING

    T_ASSOC_ARROW  shift, and go to state 268


State 200

  137 map_literal: '{' $@9 optional_map_associates . closing_brace

    '}'  shift, and go to state 261

    closing_brace  go to state 269


State 201

  139 optional_map_associates: map_associates .
  141 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 270

    $default  reduce using rule 139 (optional_map_associates)


State 202

  140 map_associates: map_associate .

    $default  reduce using rule 140 (map_associates)


State 203

   87 range_expression: binary_expression T_DOTDOT binary_expression . $@8 range_increment
   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    T_NMATCH       [reduce using rule 86 ($@8)]
    T_NE           [reduce using rule 86 ($@8)]
    T_EQ           [reduce using rule 86 ($@8)]
    T_SHIFT_LEFT   [reduce using rule 86 ($@8)]
    T_SHIFT_RIGHT  [reduce using rule 86 ($@8)]
    T_OR           [reduce using rule 86 ($@8)]
    T_AND          [reduce using rule 86 ($@8)]
    T_LE           [reduce using rule 86 ($@8)]
    T_GE           [reduce using rule 86 ($@8)]
    T_POWER_TO     [reduce using rule 86 ($@8)]
    '&'            [reduce using rule 86 ($@8)]
    '|'            [reduce using rule 86 ($@8)]
    '^'            [reduce using rule 86 ($@8)]
    '~'            [reduce using rule 86 ($@8)]
    '<'            [reduce using rule 86 ($@8)]
    '>'            [reduce using rule 86 ($@8)]
    '+'            [reduce using rule 86 ($@8)]
    '-'            [reduce using rule 86 ($@8)]
    '*'            [reduce using rule 86 ($@8)]
    '/'            [reduce using rule 86 ($@8)]
    '%'            [reduce using rule 86 ($@8)]
    '['            [reduce using rule 86 ($@8)]
    '.'            [reduce using rule 86 ($@8)]
    $default       reduce using rule 86 ($@8)

    $@8  go to state 271


State 204

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  106                  | binary_expression T_NMATCH binary_expression .
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 106 (binary_expression)]
    $default  reduce using rule 106 (binary_expression)


State 205

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression
  125                  | binary_expression T_NE binary_expression .

    T_NMATCH       shift, and go to state 120
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    '.'       [reduce using rule 125 (binary_expression)]
    $default  reduce using rule 125 (binary_expression)


State 206

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  124                  | binary_expression T_EQ binary_expression .
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    '.'       [reduce using rule 124 (binary_expression)]
    $default  reduce using rule 124 (binary_expression)


State 207

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  115                  | binary_expression T_SHIFT_LEFT binary_expression .
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 129
    '+'         shift, and go to state 136
    '-'         shift, and go to state 137
    '*'         shift, and go to state 138
    '/'         shift, and go to state 139
    '%'         shift, and go to state 140
    '['         shift, and go to state 141
    '.'         shift, and go to state 142

    '.'       [reduce using rule 115 (binary_expression)]
    $default  reduce using rule 115 (binary_expression)


State 208

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  116                  | binary_expression T_SHIFT_RIGHT binary_expression .
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 129
    '+'         shift, and go to state 136
    '-'         shift, and go to state 137
    '*'         shift, and go to state 138
    '/'         shift, and go to state 139
    '%'         shift, and go to state 140
    '['         shift, and go to state 141
    '.'         shift, and go to state 142

    '.'       [reduce using rule 116 (binary_expression)]
    $default  reduce using rule 116 (binary_expression)


State 209

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  119                  | binary_expression T_OR binary_expression .
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 119 (binary_expression)]
    $default  reduce using rule 119 (binary_expression)


State 210

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  118                  | binary_expression T_AND binary_expression .
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 118 (binary_expression)]
    $default  reduce using rule 118 (binary_expression)


State 211

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  122                  | binary_expression T_LE binary_expression .
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_POWER_TO     shift, and go to state 129
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 122 (binary_expression)]
    $default  reduce using rule 122 (binary_expression)


State 212

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  123                  | binary_expression T_GE binary_expression .
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_POWER_TO     shift, and go to state 129
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 123 (binary_expression)]
    $default  reduce using rule 123 (binary_expression)


State 213

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  117                  | binary_expression T_POWER_TO binary_expression .
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 141
    '.'  shift, and go to state 142

    '.'       [reduce using rule 117 (binary_expression)]
    $default  reduce using rule 117 (binary_expression)


State 214

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  107                  | binary_expression '&' binary_expression .
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 107 (binary_expression)]
    $default  reduce using rule 107 (binary_expression)


State 215

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  108                  | binary_expression '|' binary_expression .
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 108 (binary_expression)]
    $default  reduce using rule 108 (binary_expression)


State 216

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  110                  | binary_expression '^' binary_expression .
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 110 (binary_expression)]
    $default  reduce using rule 110 (binary_expression)


State 217

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  105                  | binary_expression '~' binary_expression .
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 105 (binary_expression)]
    $default  reduce using rule 105 (binary_expression)


State 218

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  120                  | binary_expression '<' binary_expression .
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_POWER_TO     shift, and go to state 129
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 120 (binary_expression)]
    $default  reduce using rule 120 (binary_expression)


State 219

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  121                  | binary_expression '>' binary_expression .
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_POWER_TO     shift, and go to state 129
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '.'       [reduce using rule 121 (binary_expression)]
    $default  reduce using rule 121 (binary_expression)


State 220

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  109                  | binary_expression '+' binary_expression .
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 129
    '*'         shift, and go to state 138
    '/'         shift, and go to state 139
    '%'         shift, and go to state 140
    '['         shift, and go to state 141
    '.'         shift, and go to state 142

    '.'       [reduce using rule 109 (binary_expression)]
    $default  reduce using rule 109 (binary_expression)


State 221

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  111                  | binary_expression '-' binary_expression .
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 129
    '*'         shift, and go to state 138
    '/'         shift, and go to state 139
    '%'         shift, and go to state 140
    '['         shift, and go to state 141
    '.'         shift, and go to state 142

    '.'       [reduce using rule 111 (binary_expression)]
    $default  reduce using rule 111 (binary_expression)


State 222

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  112                  | binary_expression '*' binary_expression .
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 141
    '.'  shift, and go to state 142

    '.'       [reduce using rule 112 (binary_expression)]
    $default  reduce using rule 112 (binary_expression)


State 223

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  113                  | binary_expression '/' binary_expression .
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 141
    '.'  shift, and go to state 142

    '.'       [reduce using rule 113 (binary_expression)]
    $default  reduce using rule 113 (binary_expression)


State 224

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  114                  | binary_expression '%' binary_expression .
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 141
    '.'  shift, and go to state 142

    '.'       [reduce using rule 114 (binary_expression)]
    $default  reduce using rule 114 (binary_expression)


State 225

  100 binary_expression: binary_expression '[' binary_expression_or_range . ']'

    ']'  shift, and go to state 272


State 226

   84 binary_expression_or_range: range_expression .

    $default  reduce using rule 84 (binary_expression_or_range)


State 227

   83 binary_expression_or_range: binary_expression .
   87 range_expression: binary_expression . T_DOTDOT binary_expression $@8 range_increment
   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 119
    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    $default  reduce using rule 83 (binary_expression_or_range)


State 228

   99 binary_expression: binary_expression '.' T_IDENT .

    $default  reduce using rule 99 (binary_expression)


State 229

  212 call_expression: function_id_or_pointer '(' @26 . parameter_list closing_paren

    error                    shift, and go to state 148
    T_NEW                    shift, and go to state 73
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    ','  reduce using rule 85 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 85 (range_expression)]

    variable_reference      go to state 86
    parameter_list          go to state 273
    non_empty_pardecl       go to state 150
    par_decl                go to state 151
    simple_expression       go to state 152
    range_expression        go to state 88
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 91
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    nonempty_parameters     go to state 153
    parameter               go to state 154
    type_cast               go to state 98
    type_name               go to state 155
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 230

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' . optional_description

    T_STRING  shift, and go to state 274

    $default  reduce using rule 39 (optional_description)

    optional_description  go to state 275


State 231

   44 non_empty_pardecl: non_empty_pardecl ',' . par_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    par_decl   go to state 276
    type_name  go to state 155


State 232

  218 nonempty_parameters: nonempty_parameters ',' . parameter

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    ','  reduce using rule 85 (range_expression)
    ')'  reduce using rule 85 (range_expression)

    variable_reference      go to state 86
    simple_expression       go to state 152
    range_expression        go to state 88
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 91
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    parameter               go to state 277
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 233

   45 par_decl: type_name variable_identifier .

    $default  reduce using rule 45 (par_decl)


State 234

   66 statement: error ';' .

    $default  reduce using rule 66 (statement)


State 235

  190 for_clause: error .

    $default  reduce using rule 190 (for_clause)


State 236

  184 for_to_clause: '(' . opt_for_initializer $@14 ';' binary_expression ';' $@15 for_increment $@16 ')'
  192 in_clause: '(' . type_name variable_identifier $@18 ':' simple_expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 25

    $default  reduce using rule 185 (opt_for_initializer)

    opt_for_initializer  go to state 278
    type_name            go to state 279


State 237

  188 for_clause: for_to_clause .

    $default  reduce using rule 188 (for_clause)


State 238

  178 for_loop_expression: T_FOR for_clause . $@13 local_block

    $default  reduce using rule 177 ($@13)

    $@13  go to state 280


State 239

  189 for_clause: in_clause .

    $default  reduce using rule 189 (for_clause)


State 240

  173 label: T_IDENT ':' .

    $default  reduce using rule 173 (label)


State 241

  128 condition: '(' . binary_expression ')'
  129          | '(' . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 281
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 242

  201 if_expression: T_IF condition . $@21 local_block $@22 else_clause

    $default  reduce using rule 199 ($@21)

    $@21  go to state 282


State 243

  195 while: T_WHILE $@19 . condition $@20 local_block

    '('  shift, and go to state 241

    condition  go to state 283


State 244

  174 goto: T_GOTO T_IDENT .

    $default  reduce using rule 174 (goto)


State 245

  176 switch_expression: T_SWITCH '(' . value ')' $@12 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 284
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_VARIABLE               shift, and go to state 146
    '-'                      shift, and go to state 57
    '['                      shift, and go to state 82
    '{'                      shift, and go to state 85

    value              go to state 285
    map_literal        go to state 93
    array_literal      go to state 94
    string             go to state 95
    boolean_literal    go to state 59
    float_literal      go to state 60
    integer_literal    go to state 61
    character_literal  go to state 62
    simple_literal     go to state 99


State 246

  164 opt_num: T_NUM .

    $default  reduce using rule 164 (opt_num)


State 247

  158 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 286


State 248

  159 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 287


State 249

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression
  162 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142

    '*'       [reduce using rule 162 (optional_bterm)]
    $default  reduce using rule 162 (optional_bterm)


State 250

  160 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 160 (return_expression)


State 251

   91 minusminus_plusplus: T_PLUSPLUS .

    $default  reduce using rule 91 (minusminus_plusplus)


State 252

   90 minusminus_plusplus: T_MINUSMINUS .

    $default  reduce using rule 90 (minusminus_plusplus)


State 253

   73 shorthand_assignment: variable_reference $@7 . shorthand_assignment_operator simple_expression

    T_SH_ASSIGN_PLUS   shift, and go to state 288
    T_SH_ASSIGN_MINUS  shift, and go to state 289
    T_SH_ASSIGN_MULT   shift, and go to state 290
    T_SH_ASSIGN_DIV    shift, and go to state 291
    T_SH_ASSIGN_MOD    shift, and go to state 292

    shorthand_assignment_operator  go to state 293


State 254

   67 assignment: variable_reference assignment_expression .

    $default  reduce using rule 67 (assignment)


State 255

   92 increment_expression: variable_reference minusminus_plusplus .

    $default  reduce using rule 92 (increment_expression)


State 256

   50 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 50 (var_decls)


State 257

  207 stmntlist: statement $@24 . stmntlist

    error              shift, and go to state 156
    T_FOR              shift, and go to state 157
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 158
    T_FUNC             shift, and go to state 76
    T_IF               shift, and go to state 159
    T_WHILE            shift, and go to state 160
    T_GOTO             shift, and go to state 161
    T_SWITCH           shift, and go to state 162
    T_BREAK            shift, and go to state 163
    T_CONTINUE         shift, and go to state 164
    T_RETURN           shift, and go to state 165
    T_VARIABLE         shift, and go to state 109
    '*'                shift, and go to state 81
    ';'                shift, and go to state 166
    '{'                shift, and go to state 69

    T_CASE     reduce using rule 205 (stmntlist)
    T_DEFAULT  reduce using rule 205 (stmntlist)
    '}'        reduce using rule 205 (stmntlist)

    variable_reference      go to state 167
    var_decl                go to state 294
    block                   go to state 169
    statement               go to state 170
    assignment              go to state 171
    shorthand_assignment    go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    for_loop_expression     go to state 181
    while                   go to state 182
    if_expression           go to state 183
    stmntlist               go to state 295
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 258

   53 statement: assignment ';' .

    $default  reduce using rule 53 (statement)


State 259

   70 assignment: assignment_target '[' . binary_expression ']' assignment_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 296
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 260

   69 assignment: assignment_target '.' . T_IDENT $@6 assignment_expression

    T_IDENT  shift, and go to state 297


State 261

  198 closing_brace: '}' .

    $default  reduce using rule 198 (closing_brace)


State 262

   48 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 48 (block)


State 263

   52 statement: call_expression ';' .

    $default  reduce using rule 52 (statement)


State 264

   96 constructor_expression: T_NEW T_TYPE_IDENTIFIER '(' ')' .

    $default  reduce using rule 96 (constructor_expression)


State 265

  210 call_expression: T_FUNC '(' @25 parameter_list . closing_paren

    ')'  shift, and go to state 298

    closing_paren  go to state 299


State 266

  148 array_elements: array_elements ',' . array_element

    T_NUM        shift, and go to state 51
    T_STRING     shift, and go to state 189
    T_CHARACTER  shift, and go to state 190
    T_TRUE       shift, and go to state 191
    T_FALSE      shift, and go to state 192
    '-'          shift, and go to state 57

    array_element         go to state 300
    simple_array_element  go to state 195
    integer_literal       go to state 196


State 267

  147 array_literal: '[' $@11 array_elements ']' .

    $default  reduce using rule 147 (array_literal)


State 268

  142 map_associate: T_STRING T_ASSOC_ARROW . simple_literal
  143              | T_STRING T_ASSOC_ARROW . T_STRING

    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 301
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    '-'                      shift, and go to state 57

    boolean_literal    go to state 59
    float_literal      go to state 60
    integer_literal    go to state 61
    character_literal  go to state 62
    simple_literal     go to state 302


State 269

  137 map_literal: '{' $@9 optional_map_associates closing_brace .

    $default  reduce using rule 137 (map_literal)


State 270

  141 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 199

    map_associate  go to state 303


State 271

   87 range_expression: binary_expression T_DOTDOT binary_expression $@8 . range_increment

    T_DOTDOT  shift, and go to state 304

    T_DOTDOT  [reduce using rule 88 (range_increment)]
    $default  reduce using rule 88 (range_increment)

    range_increment  go to state 305


State 272

  100 binary_expression: binary_expression '[' binary_expression_or_range ']' .

    $default  reduce using rule 100 (binary_expression)


State 273

  212 call_expression: function_id_or_pointer '(' @26 parameter_list . closing_paren

    ')'  shift, and go to state 298

    closing_paren  go to state 306


State 274

   40 optional_description: T_STRING .

    $default  reduce using rule 40 (optional_description)


State 275

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description .

    $default  reduce using rule 35 (macrostart)


State 276

   44 non_empty_pardecl: non_empty_pardecl ',' par_decl .

    $default  reduce using rule 44 (non_empty_pardecl)


State 277

  218 nonempty_parameters: nonempty_parameters ',' parameter .

    $default  reduce using rule 218 (nonempty_parameters)


State 278

  184 for_to_clause: '(' opt_for_initializer . $@14 ';' binary_expression ';' $@15 for_increment $@16 ')'

    $default  reduce using rule 181 ($@14)

    $@14  go to state 307


State 279

  187 opt_for_initializer: type_name . variable_identifier $@17 assignment_expression
  192 in_clause: '(' type_name . variable_identifier $@18 ':' simple_expression ')'

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 308


State 280

  178 for_loop_expression: T_FOR for_clause $@13 . local_block

    error              shift, and go to state 156
    T_FOR              shift, and go to state 157
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 158
    T_FUNC             shift, and go to state 76
    T_IF               shift, and go to state 159
    T_WHILE            shift, and go to state 160
    T_GOTO             shift, and go to state 161
    T_SWITCH           shift, and go to state 162
    T_BREAK            shift, and go to state 163
    T_CONTINUE         shift, and go to state 164
    T_RETURN           shift, and go to state 165
    T_VARIABLE         shift, and go to state 109
    '*'                shift, and go to state 81
    ';'                shift, and go to state 166
    '{'                shift, and go to state 309

    variable_reference      go to state 167
    var_decl                go to state 294
    block                   go to state 169
    statement               go to state 310
    assignment              go to state 171
    shorthand_assignment    go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    for_loop_expression     go to state 181
    while                   go to state 182
    local_block             go to state 311
    if_expression           go to state 183
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 281

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression
  128 condition: '(' binary_expression . ')'
  129          | '(' binary_expression .

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    ')'            shift, and go to state 312
    '.'            shift, and go to state 142

    '*'       [reduce using rule 129 (condition)]
    $default  reduce using rule 129 (condition)


State 282

  201 if_expression: T_IF condition $@21 . local_block $@22 else_clause

    error              shift, and go to state 156
    T_FOR              shift, and go to state 157
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 158
    T_FUNC             shift, and go to state 76
    T_IF               shift, and go to state 159
    T_WHILE            shift, and go to state 160
    T_GOTO             shift, and go to state 161
    T_SWITCH           shift, and go to state 162
    T_BREAK            shift, and go to state 163
    T_CONTINUE         shift, and go to state 164
    T_RETURN           shift, and go to state 165
    T_VARIABLE         shift, and go to state 109
    '*'                shift, and go to state 81
    ';'                shift, and go to state 166
    '{'                shift, and go to state 309

    variable_reference      go to state 167
    var_decl                go to state 294
    block                   go to state 169
    statement               go to state 310
    assignment              go to state 171
    shorthand_assignment    go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    for_loop_expression     go to state 181
    while                   go to state 182
    local_block             go to state 313
    if_expression           go to state 183
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 283

  195 while: T_WHILE $@19 condition . $@20 local_block

    $default  reduce using rule 194 ($@20)

    $@20  go to state 314


State 284

  135 value: T_IDENT .

    $default  reduce using rule 135 (value)


State 285

  176 switch_expression: T_SWITCH '(' value . ')' $@12 '{' case_clauses '}'

    ')'  shift, and go to state 315


State 286

  158 break: T_BREAK opt_num ';' .

    $default  reduce using rule 158 (break)


State 287

  159 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 159 (continue)


State 288

   78 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 78 (shorthand_assignment_operator)


State 289

   79 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 79 (shorthand_assignment_operator)


State 290

   75 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 75 (shorthand_assignment_operator)


State 291

   76 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 76 (shorthand_assignment_operator)


State 292

   77 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 77 (shorthand_assignment_operator)


State 293

   73 shorthand_assignment: variable_reference $@7 shorthand_assignment_operator . simple_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    ';'  reduce using rule 85 (range_expression)
    ')'  reduce using rule 85 (range_expression)

    variable_reference      go to state 86
    simple_expression       go to state 316
    range_expression        go to state 88
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 91
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 294

   65 statement: var_decl .

    $default  reduce using rule 65 (statement)


State 295

  207 stmntlist: statement $@24 stmntlist .

    $default  reduce using rule 207 (stmntlist)


State 296

   70 assignment: assignment_target '[' binary_expression . ']' assignment_expression
   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    '.'            shift, and go to state 142
    ']'            shift, and go to state 317


State 297

   69 assignment: assignment_target '.' T_IDENT . $@6 assignment_expression

    $default  reduce using rule 68 ($@6)

    $@6  go to state 318


State 298

  208 closing_paren: ')' .

    $default  reduce using rule 208 (closing_paren)


State 299

  210 call_expression: T_FUNC '(' @25 parameter_list closing_paren .

    $default  reduce using rule 210 (call_expression)


State 300

  148 array_elements: array_elements ',' array_element .

    $default  reduce using rule 148 (array_elements)


State 301

  143 map_associate: T_STRING T_ASSOC_ARROW T_STRING .

    $default  reduce using rule 143 (map_associate)


State 302

  142 map_associate: T_STRING T_ASSOC_ARROW simple_literal .

    $default  reduce using rule 142 (map_associate)


State 303

  141 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 141 (map_associates)


State 304

   89 range_increment: T_DOTDOT . binary_expression

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 319
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 305

   87 range_expression: binary_expression T_DOTDOT binary_expression $@8 range_increment .

    $default  reduce using rule 87 (range_expression)


State 306

  212 call_expression: function_id_or_pointer '(' @26 parameter_list closing_paren .

    $default  reduce using rule 212 (call_expression)


State 307

  184 for_to_clause: '(' opt_for_initializer $@14 . ';' binary_expression ';' $@15 for_increment $@16 ')'

    ';'  shift, and go to state 320


State 308

  187 opt_for_initializer: type_name variable_identifier . $@17 assignment_expression
  192 in_clause: '(' type_name variable_identifier . $@18 ':' simple_expression ')'

    ':'       reduce using rule 191 ($@18)
    $default  reduce using rule 186 ($@17)

    $@17  go to state 321
    $@18  go to state 322


State 309

   48 block: '{' . var_decls stmntlist closing_brace
  197 local_block: '{' . stmntlist closing_brace

    error              shift, and go to state 156
    T_FOR              shift, and go to state 157
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 158
    T_FUNC             shift, and go to state 76
    T_IF               shift, and go to state 159
    T_WHILE            shift, and go to state 160
    T_GOTO             shift, and go to state 161
    T_SWITCH           shift, and go to state 162
    T_BREAK            shift, and go to state 163
    T_CONTINUE         shift, and go to state 164
    T_RETURN           shift, and go to state 165
    T_VARIABLE         shift, and go to state 109
    '*'                shift, and go to state 81
    ';'                shift, and go to state 166
    '{'                shift, and go to state 69

    error              [reduce using rule 49 (var_decls)]
    T_FOR              [reduce using rule 49 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 49 (var_decls)]
    T_IDENT            [reduce using rule 49 (var_decls)]
    T_FUNC             [reduce using rule 49 (var_decls)]
    T_IF               [reduce using rule 49 (var_decls)]
    T_WHILE            [reduce using rule 49 (var_decls)]
    T_GOTO             [reduce using rule 49 (var_decls)]
    T_SWITCH           [reduce using rule 49 (var_decls)]
    T_BREAK            [reduce using rule 49 (var_decls)]
    T_CONTINUE         [reduce using rule 49 (var_decls)]
    T_RETURN           [reduce using rule 49 (var_decls)]
    T_VARIABLE         [reduce using rule 49 (var_decls)]
    '*'                [reduce using rule 49 (var_decls)]
    ';'                [reduce using rule 49 (var_decls)]
    '{'                [reduce using rule 49 (var_decls)]
    '}'                reduce using rule 49 (var_decls)
    '}'                [reduce using rule 205 (stmntlist)]

    variable_reference      go to state 167
    var_decl                go to state 294
    block                   go to state 169
    var_decls               go to state 103
    statement               go to state 170
    assignment              go to state 171
    shorthand_assignment    go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    for_loop_expression     go to state 181
    while                   go to state 182
    if_expression           go to state 183
    stmntlist               go to state 323
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 310

  196 local_block: statement .

    $default  reduce using rule 196 (local_block)


State 311

  178 for_loop_expression: T_FOR for_clause $@13 local_block .

    $default  reduce using rule 178 (for_loop_expression)


State 312

  128 condition: '(' binary_expression ')' .

    $default  reduce using rule 128 (condition)


State 313

  201 if_expression: T_IF condition $@21 local_block . $@22 else_clause

    $default  reduce using rule 200 ($@22)

    $@22  go to state 324


State 314

  195 while: T_WHILE $@19 condition $@20 . local_block

    error              shift, and go to state 156
    T_FOR              shift, and go to state 157
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 158
    T_FUNC             shift, and go to state 76
    T_IF               shift, and go to state 159
    T_WHILE            shift, and go to state 160
    T_GOTO             shift, and go to state 161
    T_SWITCH           shift, and go to state 162
    T_BREAK            shift, and go to state 163
    T_CONTINUE         shift, and go to state 164
    T_RETURN           shift, and go to state 165
    T_VARIABLE         shift, and go to state 109
    '*'                shift, and go to state 81
    ';'                shift, and go to state 166
    '{'                shift, and go to state 309

    variable_reference      go to state 167
    var_decl                go to state 294
    block                   go to state 169
    statement               go to state 310
    assignment              go to state 171
    shorthand_assignment    go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    for_loop_expression     go to state 181
    while                   go to state 182
    local_block             go to state 325
    if_expression           go to state 183
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 315

  176 switch_expression: T_SWITCH '(' value ')' . $@12 '{' case_clauses '}'

    $default  reduce using rule 175 ($@12)

    $@12  go to state 326


State 316

   73 shorthand_assignment: variable_reference $@7 shorthand_assignment_operator simple_expression .

    $default  reduce using rule 73 (shorthand_assignment)


State 317

   70 assignment: assignment_target '[' binary_expression ']' . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 327


State 318

   69 assignment: assignment_target '.' T_IDENT $@6 . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 328


State 319

   89 range_increment: T_DOTDOT binary_expression .
   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression

    '.'  shift, and go to state 142

    '.'       [reduce using rule 89 (range_increment)]
    $default  reduce using rule 89 (range_increment)


State 320

  184 for_to_clause: '(' opt_for_initializer $@14 ';' . binary_expression ';' $@15 for_increment $@16 ')'

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    variable_reference      go to state 86
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 329
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 321

  187 opt_for_initializer: type_name variable_identifier $@17 . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 330


State 322

  192 in_clause: '(' type_name variable_identifier $@18 . ':' simple_expression ')'

    ':'  shift, and go to state 331


State 323

  197 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 261

    closing_brace  go to state 332


State 324

  201 if_expression: T_IF condition $@21 local_block $@22 . else_clause

    T_ELSE  shift, and go to state 333

    T_ELSE    [reduce using rule 202 (else_clause)]
    $default  reduce using rule 202 (else_clause)

    else_clause  go to state 334


State 325

  195 while: T_WHILE $@19 condition $@20 local_block .

    $default  reduce using rule 195 (while)


State 326

  176 switch_expression: T_SWITCH '(' value ')' $@12 . '{' case_clauses '}'

    '{'  shift, and go to state 335


State 327

   70 assignment: assignment_target '[' binary_expression ']' assignment_expression .

    $default  reduce using rule 70 (assignment)


State 328

   69 assignment: assignment_target '.' T_IDENT $@6 assignment_expression .

    $default  reduce using rule 69 (assignment)


State 329

   99 binary_expression: binary_expression . '.' T_IDENT
  100                  | binary_expression . '[' binary_expression_or_range ']'
  105                  | binary_expression . '~' binary_expression
  106                  | binary_expression . T_NMATCH binary_expression
  107                  | binary_expression . '&' binary_expression
  108                  | binary_expression . '|' binary_expression
  109                  | binary_expression . '+' binary_expression
  110                  | binary_expression . '^' binary_expression
  111                  | binary_expression . '-' binary_expression
  112                  | binary_expression . '*' binary_expression
  113                  | binary_expression . '/' binary_expression
  114                  | binary_expression . '%' binary_expression
  115                  | binary_expression . T_SHIFT_LEFT binary_expression
  116                  | binary_expression . T_SHIFT_RIGHT binary_expression
  117                  | binary_expression . T_POWER_TO binary_expression
  118                  | binary_expression . T_AND binary_expression
  119                  | binary_expression . T_OR binary_expression
  120                  | binary_expression . '<' binary_expression
  121                  | binary_expression . '>' binary_expression
  122                  | binary_expression . T_LE binary_expression
  123                  | binary_expression . T_GE binary_expression
  124                  | binary_expression . T_EQ binary_expression
  125                  | binary_expression . T_NE binary_expression
  184 for_to_clause: '(' opt_for_initializer $@14 ';' binary_expression . ';' $@15 for_increment $@16 ')'

    T_NMATCH       shift, and go to state 120
    T_NE           shift, and go to state 121
    T_EQ           shift, and go to state 122
    T_SHIFT_LEFT   shift, and go to state 123
    T_SHIFT_RIGHT  shift, and go to state 124
    T_OR           shift, and go to state 125
    T_AND          shift, and go to state 126
    T_LE           shift, and go to state 127
    T_GE           shift, and go to state 128
    T_POWER_TO     shift, and go to state 129
    '&'            shift, and go to state 130
    '|'            shift, and go to state 131
    '^'            shift, and go to state 132
    '~'            shift, and go to state 133
    '<'            shift, and go to state 134
    '>'            shift, and go to state 135
    '+'            shift, and go to state 136
    '-'            shift, and go to state 137
    '*'            shift, and go to state 138
    '/'            shift, and go to state 139
    '%'            shift, and go to state 140
    '['            shift, and go to state 141
    ';'            shift, and go to state 336
    '.'            shift, and go to state 142


State 330

  187 opt_for_initializer: type_name variable_identifier $@17 assignment_expression .

    $default  reduce using rule 187 (opt_for_initializer)


State 331

  192 in_clause: '(' type_name variable_identifier $@18 ':' . simple_expression ')'

    error                    shift, and go to state 72
    T_NEW                    shift, and go to state 73
    T_IDENT                  shift, and go to state 74
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 75
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 76
    T_VARIABLE               shift, and go to state 77
    '~'                      shift, and go to state 78
    '+'                      shift, and go to state 79
    '-'                      shift, and go to state 80
    '*'                      shift, and go to state 81
    '['                      shift, and go to state 82
    '!'                      shift, and go to state 83
    '('                      shift, and go to state 84
    '{'                      shift, and go to state 85

    ')'  reduce using rule 85 (range_expression)

    variable_reference      go to state 86
    simple_expression       go to state 337
    range_expression        go to state 88
    s_bterm                 go to state 89
    constructor_expression  go to state 90
    binary_expression       go to state 91
    value                   go to state 92
    map_literal             go to state 93
    array_literal           go to state 94
    string                  go to state 95
    call_expression         go to state 96
    function_id_or_pointer  go to state 97
    type_cast               go to state 98
    boolean_literal         go to state 59
    float_literal           go to state 60
    integer_literal         go to state 61
    character_literal       go to state 62
    simple_literal          go to state 99


State 332

  197 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 197 (local_block)


State 333

  204 else_clause: T_ELSE . $@23 local_block

    $default  reduce using rule 203 ($@23)

    $@23  go to state 338


State 334

  201 if_expression: T_IF condition $@21 local_block $@22 else_clause .

    $default  reduce using rule 201 (if_expression)


State 335

  176 switch_expression: T_SWITCH '(' value ')' $@12 '{' . case_clauses '}'

    T_CASE     shift, and go to state 339
    T_DEFAULT  shift, and go to state 340

    $default  reduce using rule 165 (case_clauses)

    case_clauses   go to state 341
    case_clause    go to state 342
    case_selector  go to state 343


State 336

  184 for_to_clause: '(' opt_for_initializer $@14 ';' binary_expression ';' . $@15 for_increment $@16 ')'

    $default  reduce using rule 182 ($@15)

    $@15  go to state 344


State 337

  192 in_clause: '(' type_name variable_identifier $@18 ':' simple_expression . ')'

    ')'  shift, and go to state 345


State 338

  204 else_clause: T_ELSE $@23 . local_block

    error              shift, and go to state 156
    T_FOR              shift, and go to state 157
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 158
    T_FUNC             shift, and go to state 76
    T_IF               shift, and go to state 159
    T_WHILE            shift, and go to state 160
    T_GOTO             shift, and go to state 161
    T_SWITCH           shift, and go to state 162
    T_BREAK            shift, and go to state 163
    T_CONTINUE         shift, and go to state 164
    T_RETURN           shift, and go to state 165
    T_VARIABLE         shift, and go to state 109
    '*'                shift, and go to state 81
    ';'                shift, and go to state 166
    '{'                shift, and go to state 309

    variable_reference      go to state 167
    var_decl                go to state 294
    block                   go to state 169
    statement               go to state 310
    assignment              go to state 171
    shorthand_assignment    go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    for_loop_expression     go to state 181
    while                   go to state 182
    local_block             go to state 346
    if_expression           go to state 183
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 339

  168 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 347
    T_STRING  shift, and go to state 348
    '-'       shift, and go to state 57

    case_condition   go to state 349
    integer_literal  go to state 350


State 340

  169 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 351


State 341

  176 switch_expression: T_SWITCH '(' value ')' $@12 '{' case_clauses . '}'

    '}'  shift, and go to state 352


State 342

  166 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 339
    T_DEFAULT  shift, and go to state 340

    $default  reduce using rule 165 (case_clauses)

    case_clauses   go to state 353
    case_clause    go to state 342
    case_selector  go to state 343


State 343

  167 case_clause: case_selector . stmntlist

    error              shift, and go to state 156
    T_FOR              shift, and go to state 157
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 158
    T_FUNC             shift, and go to state 76
    T_IF               shift, and go to state 159
    T_WHILE            shift, and go to state 160
    T_GOTO             shift, and go to state 161
    T_SWITCH           shift, and go to state 162
    T_BREAK            shift, and go to state 163
    T_CONTINUE         shift, and go to state 164
    T_RETURN           shift, and go to state 165
    T_VARIABLE         shift, and go to state 109
    '*'                shift, and go to state 81
    ';'                shift, and go to state 166
    '{'                shift, and go to state 69

    T_CASE     reduce using rule 205 (stmntlist)
    T_DEFAULT  reduce using rule 205 (stmntlist)
    '}'        reduce using rule 205 (stmntlist)

    variable_reference      go to state 167
    var_decl                go to state 294
    block                   go to state 169
    statement               go to state 170
    assignment              go to state 171
    shorthand_assignment    go to state 172
    assignment_target       go to state 173
    increment_expression    go to state 174
    break                   go to state 175
    continue                go to state 176
    return_expression       go to state 177
    label                   go to state 178
    goto                    go to state 179
    switch_expression       go to state 180
    for_loop_expression     go to state 181
    while                   go to state 182
    if_expression           go to state 183
    stmntlist               go to state 354
    call_expression         go to state 185
    function_id_or_pointer  go to state 97
    type_name               go to state 27


State 344

  184 for_to_clause: '(' opt_for_initializer $@14 ';' binary_expression ';' $@15 . for_increment $@16 ')'

    T_IDENT     shift, and go to state 108
    T_VARIABLE  shift, and go to state 109

    variable_reference    go to state 355
    shorthand_assignment  go to state 356
    increment_expression  go to state 357
    for_increment         go to state 358


State 345

  192 in_clause: '(' type_name variable_identifier $@18 ':' simple_expression ')' .

    $default  reduce using rule 192 (in_clause)


State 346

  204 else_clause: T_ELSE $@23 local_block .

    $default  reduce using rule 204 (else_clause)


State 347

  172 case_condition: T_NUM . T_DOTDOT T_NUM
  229 integer_literal: T_NUM .

    T_DOTDOT  shift, and go to state 359

    $default  reduce using rule 229 (integer_literal)


State 348

  171 case_condition: T_STRING .

    $default  reduce using rule 171 (case_condition)


State 349

  168 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 360


State 350

  170 case_condition: integer_literal .

    $default  reduce using rule 170 (case_condition)


State 351

  169 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 169 (case_selector)


State 352

  176 switch_expression: T_SWITCH '(' value ')' $@12 '{' case_clauses '}' .

    $default  reduce using rule 176 (switch_expression)


State 353

  166 case_clauses: case_clause case_clauses .

    $default  reduce using rule 166 (case_clauses)


State 354

  167 case_clause: case_selector stmntlist .

    $default  reduce using rule 167 (case_clause)


State 355

   73 shorthand_assignment: variable_reference . $@7 shorthand_assignment_operator simple_expression
   92 increment_expression: variable_reference . minusminus_plusplus

    T_PLUSPLUS    shift, and go to state 251
    T_MINUSMINUS  shift, and go to state 252

    $default  reduce using rule 72 ($@7)

    $@7                  go to state 253
    minusminus_plusplus  go to state 255


State 356

  180 for_increment: shorthand_assignment .

    $default  reduce using rule 180 (for_increment)


State 357

  179 for_increment: increment_expression .

    $default  reduce using rule 179 (for_increment)


State 358

  184 for_to_clause: '(' opt_for_initializer $@14 ';' binary_expression ';' $@15 for_increment . $@16 ')'

    $default  reduce using rule 183 ($@16)

    $@16  go to state 361


State 359

  172 case_condition: T_NUM T_DOTDOT . T_NUM

    T_NUM  shift, and go to state 362


State 360

  168 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 168 (case_selector)


State 361

  184 for_to_clause: '(' opt_for_initializer $@14 ';' binary_expression ';' $@15 for_increment $@16 . ')'

    ')'  shift, and go to state 363


State 362

  172 case_condition: T_NUM T_DOTDOT T_NUM .

    $default  reduce using rule 172 (case_condition)


State 363

  184 for_to_clause: '(' opt_for_initializer $@14 ';' binary_expression ';' $@15 for_increment $@16 ')' .

    $default  reduce using rule 184 (for_to_clause)
