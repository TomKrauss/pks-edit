State 11 conflicts: 1 shift/reduce, 1 reduce/reduce
State 49 conflicts: 10 shift/reduce
State 88 conflicts: 23 shift/reduce
State 98 conflicts: 1 reduce/reduce
State 103 conflicts: 45 reduce/reduce
State 110 conflicts: 22 shift/reduce
State 160 conflicts: 6 shift/reduce
State 163 conflicts: 1 shift/reduce
State 179 conflicts: 1 reduce/reduce
State 194 conflicts: 22 shift/reduce
State 219 conflicts: 1 reduce/reduce
State 235 conflicts: 1 shift/reduce
State 254 conflicts: 1 shift/reduce
State 263 conflicts: 1 shift/reduce
State 291 conflicts: 16 shift/reduce, 1 reduce/reduce
State 302 conflicts: 1 shift/reduce


Grammar

    0 $accept: file_structure $end

    1 $@1: %empty

    2 $@2: %empty

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    4 header_delimiter: %empty
    5                 | '!'

    6 macro_definitions: %empty
    7                  | macro_definition macro_definitions

    8 namespace: %empty
    9          | T_NAMESPACE T_IDENT ';'

   10 prerequisites: %empty
   11              | prerequisites require

   12 require: T_REQUIRE T_STRING ';'

   13 global_declarations: %empty
   14                    | global_declarations constants ';'
   15                    | global_declarations global_var ';'

   16 scope: %empty
   17      | T_STATIC

   18 constants: T_CONST constant_list

   19 constant_list: constdef
   20              | constant_list ',' constdef

   21 $@3: %empty

   22 $@4: %empty

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4

   24 constant_literal: simple_literal
   25                 | T_STRING

   26 variable_identifier: T_IDENT
   27                    | T_NUM
   28                    | T_STRING

   29 variable_reference: T_VARIABLE
   30                   | T_IDENT

   31 macro_declaration: T_IDENT
   32                  | T_FUNC

   33 macro_type: scope T_VOID
   34           | scope type_name

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description

   36 global_var: scope var_decl

   37 var_decl: type_name variable_identifier assignment_expression
   38         | type_name variable_identifier

   39 optional_description: %empty
   40                     | T_STRING

   41 parameter_list: %empty
   42               | non_empty_pardecl

   43 non_empty_pardecl: par_decl
   44                  | non_empty_pardecl ',' par_decl

   45 par_decl: type_name variable_identifier

   46 $@5: %empty

   47 macro_definition: $@5 macrostart block

   48 block: '{' var_decls stmntlist closing_brace

   49 var_decls: %empty
   50          | var_decls var_decl ';'

   51 statement: ';'
   52          | call_expression ';'
   53          | assignment ';'
   54          | if_expression
   55          | while
   56          | foreach
   57          | switch_expression
   58          | break
   59          | continue
   60          | return_expression
   61          | goto
   62          | block
   63          | increment_expression
   64          | label
   65          | var_decl
   66          | error ';'

   67 assignment: variable_reference assignment_expression
   68           | variable_reference '[' value ']' assignment_expression

   69 $@6: %empty

   70 assignment: variable_reference $@6 shorthand_assignment_operator simple_expression

   71 shorthand_assignment_operator: T_SH_ASSIGN_MULT
   72                              | T_SH_ASSIGN_DIV
   73                              | T_SH_ASSIGN_MOD
   74                              | T_SH_ASSIGN_PLUS
   75                              | T_SH_ASSIGN_MINUS

   76 assignment_expression: T_ASSIGN simple_expression

   77 simple_expression: binary_expression
   78                  | range_expression

   79 binary_expression_or_range: binary_expression
   80                           | range_expression

   81 range_expression: %empty

   82 $@7: %empty

   83 range_expression: binary_expression T_DOTDOT binary_expression $@7 range_increment

   84 range_increment: %empty
   85                | T_DOTDOT binary_expression

   86 increment_expression: variable_reference T_MINUSMINUS
   87                     | variable_reference T_PLUSPLUS

   88 s_bterm: value
   89        | call_expression

   90 binary_expression: s_bterm
   91                  | type_cast s_bterm
   92                  | '-' T_NUM
   93                  | binary_expression '[' binary_expression_or_range ']'
   94                  | '!' binary_expression
   95                  | '~' binary_expression
   96                  | '+' binary_expression
   97                  | '-' binary_expression
   98                  | binary_expression '~' binary_expression
   99                  | binary_expression T_NMATCH binary_expression
  100                  | binary_expression '&' binary_expression
  101                  | binary_expression '|' binary_expression
  102                  | binary_expression '+' binary_expression
  103                  | binary_expression '^' binary_expression
  104                  | binary_expression '-' binary_expression
  105                  | binary_expression '*' binary_expression
  106                  | binary_expression '/' binary_expression
  107                  | binary_expression '%' binary_expression
  108                  | binary_expression T_SHIFT_LEFT binary_expression
  109                  | binary_expression T_SHIFT_RIGHT binary_expression
  110                  | binary_expression T_POWER_TO binary_expression
  111                  | binary_expression T_AND binary_expression
  112                  | binary_expression T_OR binary_expression
  113                  | binary_expression '<' binary_expression
  114                  | binary_expression '>' binary_expression
  115                  | binary_expression T_LE binary_expression
  116                  | binary_expression T_GE binary_expression
  117                  | binary_expression T_EQ binary_expression
  118                  | binary_expression T_NE binary_expression
  119                  | '(' binary_expression ')'
  120                  | variable_reference assignment_expression

  121 condition: '(' binary_expression ')'
  122          | '(' binary_expression

  123 value: T_VARIABLE
  124      | string
  125      | simple_literal
  126      | map_literal
  127      | array_literal
  128      | T_IDENT

  129 $@8: %empty

  130 map_literal: '{' $@8 map_associates closing_brace

  131 map_associates: map_associate
  132               | map_associates ',' map_associate

  133 map_associate: T_STRING T_ASSOC_ARROW simple_literal
  134              | T_STRING T_ASSOC_ARROW T_STRING

  135 $@9: %empty

  136 array_literal: '[' $@9 ']'

  137 $@10: %empty

  138 array_literal: '[' $@10 array_elements ']'

  139 array_elements: array_elements ',' array_element
  140               | array_element

  141 array_element: simple_array_element
  142              | T_STRING

  143 simple_array_element: T_NUM
  144                     | T_CHARACTER
  145                     | T_TRUE
  146                     | T_FALSE

  147 string: T_STRING
  148       | string T_STRING

  149 break: T_BREAK opt_num ';'

  150 continue: T_CONTINUE opt_num ';'

  151 return_expression: T_RETURN optional_bterm

  152 optional_bterm: %empty
  153               | binary_expression

  154 opt_num: %empty
  155        | T_NUM

  156 case_clauses: %empty
  157             | case_clause case_clauses

  158 case_clause: case_selector stmntlist

  159 case_selector: T_CASE case_condition ':'
  160              | T_DEFAULT ':'

  161 case_condition: T_NUM
  162               | T_STRING

  163 label: T_IDENT ':'

  164 goto: T_GOTO T_IDENT

  165 $@11: %empty

  166 in_clause: '(' type_name variable_identifier $@11 ':' simple_expression ')'

  167 $@12: %empty

  168 switch_expression: T_SWITCH '(' value ')' $@12 '{' case_clauses '}'

  169 $@13: %empty

  170 $@14: %empty

  171 foreach: T_FOR $@13 in_clause $@14 local_block

  172 $@15: %empty

  173 $@16: %empty

  174 while: T_WHILE $@15 condition $@16 local_block

  175 local_block: statement
  176            | '{' stmntlist closing_brace

  177 closing_brace: '}'

  178 $@17: %empty

  179 $@18: %empty

  180 if_expression: T_IF condition $@17 local_block $@18 else_clause

  181 else_clause: %empty

  182 $@19: %empty

  183 else_clause: T_ELSE $@19 local_block

  184 stmntlist: %empty

  185 $@20: %empty

  186 stmntlist: statement $@20 stmntlist

  187 closing_paren: ')'

  188 @21: %empty

  189 call_expression: T_FUNC '(' @21 parameter_list closing_paren

  190 @22: %empty

  191 call_expression: function_id_or_pointer '(' @22 parameter_list closing_paren

  192 function_id_or_pointer: '*' variable_reference
  193                       | T_IDENT
  194                       | error

  195 parameter_list: nonempty_parameters

  196 nonempty_parameters: parameter
  197                    | nonempty_parameters ',' parameter
  198                    | error

  199 parameter: simple_expression

  200 type_cast: '(' type_name ')'

  201 type_name: T_TYPE_IDENTIFIER
  202          | T_TYPE_IDENTIFIER array_dimension

  203 array_dimension: '[' ']'
  204                | '[' T_NUM ']'

  205 boolean_literal: T_TRUE
  206                | T_FALSE

  207 float_literal: T_FLOATING_POINT_NUMBER

  208 integer_literal: T_NUM

  209 character_literal: T_CHARACTER

  210 simple_literal: integer_literal
  211               | float_literal
  212               | character_literal
  213               | boolean_literal


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 5 94
    '%' (37) 107
    '&' (38) 100
    '(' (40) 35 119 121 122 166 168 189 191 200
    ')' (41) 35 119 121 166 168 187 200
    '*' (42) 105 192
    '+' (43) 96 102
    ',' (44) 20 44 132 139 197
    '-' (45) 92 97 104
    '/' (47) 106
    ':' (58) 159 160 163 166
    ';' (59) 9 12 14 15 50 51 52 53 66 149 150
    '<' (60) 113
    '>' (62) 114
    '[' (91) 68 93 136 138 203 204
    ']' (93) 68 93 136 138 203 204
    '^' (94) 103
    '{' (123) 48 130 168 176
    '|' (124) 101
    '}' (125) 168 177
    '~' (126) 95 98
    error (256) 66 194 198
    T_NAMESPACE (258) 9
    T_REQUIRE (259) 12
    T_FOR (260) 171
    T_STATIC (261) 17
    T_VOID (262) 33
    T_TYPE_IDENTIFIER (263) 201 202
    T_IDENT (264) 9 26 30 31 128 163 164 193
    T_NUM (265) 27 92 143 155 161 204 208
    T_FLOATING_POINT_NUMBER (266) 207
    T_STRING (267) 12 25 28 40 133 134 142 147 148 162
    T_CHARACTER (268) 144 209
    T_CONST (269) 18
    T_TRUE (270) 145 205
    T_FALSE (271) 146 206
    T_FUNC (272) 32 189
    T_DOTDOT (273) 83 85
    T_PLUSPLUS (274) 87
    T_MINUSMINUS (275) 86
    T_IF (276) 180
    T_ELSE (277) 183
    T_WHILE (278) 174
    T_GOTO (279) 164
    T_SH_ASSIGN_PLUS (280) 74
    T_SH_ASSIGN_MINUS (281) 75
    T_SH_ASSIGN_MULT (282) 71
    T_SH_ASSIGN_DIV (283) 72
    T_SH_ASSIGN_MOD (284) 73
    T_SWITCH (285) 168
    T_CASE (286) 159
    T_DEFAULT (287) 160
    T_BREAK (288) 149
    T_CONTINUE (289) 150
    T_RETURN (290) 151
    T_VARIABLE (291) 29 123
    T_ASSOC_ARROW (292) 133 134
    T_NMATCH (293) 99
    T_ASSIGN (294) 23 76
    T_NE (295) 118
    T_EQ (296) 117
    T_SHIFT_LEFT (297) 108
    T_SHIFT_RIGHT (298) 109
    T_OR (299) 112
    T_AND (300) 111
    T_LE (301) 115
    T_GE (302) 116
    T_POWER_TO (303) 110


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    file_structure (71)
        on left: 3
        on right: 0
    $@1 (72)
        on left: 1
        on right: 3
    $@2 (73)
        on left: 2
        on right: 3
    header_delimiter (74)
        on left: 4 5
        on right: 3
    macro_definitions (75)
        on left: 6 7
        on right: 3 7
    namespace (76)
        on left: 8 9
        on right: 3
    prerequisites (77)
        on left: 10 11
        on right: 3 11
    require (78)
        on left: 12
        on right: 11
    global_declarations (79)
        on left: 13 14 15
        on right: 3 14 15
    scope (80)
        on left: 16 17
        on right: 33 34 36
    constants (81)
        on left: 18
        on right: 14
    constant_list (82)
        on left: 19 20
        on right: 18 20
    constdef (83)
        on left: 23
        on right: 19 20
    $@3 (84)
        on left: 21
        on right: 23
    $@4 (85)
        on left: 22
        on right: 23
    constant_literal (86)
        on left: 24 25
        on right: 23
    variable_identifier (87)
        on left: 26 27 28
        on right: 23 37 38 45 166
    variable_reference (88)
        on left: 29 30
        on right: 67 68 70 86 87 120 192
    macro_declaration (89)
        on left: 31 32
        on right: 35
    macro_type (90)
        on left: 33 34
        on right: 35
    macrostart (91)
        on left: 35
        on right: 47
    global_var (92)
        on left: 36
        on right: 15
    var_decl (93)
        on left: 37 38
        on right: 36 50 65
    optional_description (94)
        on left: 39 40
        on right: 35
    parameter_list (95)
        on left: 41 42 195
        on right: 35 189 191
    non_empty_pardecl (96)
        on left: 43 44
        on right: 42 44
    par_decl (97)
        on left: 45
        on right: 43 44
    macro_definition (98)
        on left: 47
        on right: 7
    $@5 (99)
        on left: 46
        on right: 47
    block (100)
        on left: 48
        on right: 47 62
    var_decls (101)
        on left: 49 50
        on right: 48 50
    statement (102)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
        on right: 175 186
    assignment (103)
        on left: 67 68 70
        on right: 53
    $@6 (104)
        on left: 69
        on right: 70
    shorthand_assignment_operator (105)
        on left: 71 72 73 74 75
        on right: 70
    assignment_expression (106)
        on left: 76
        on right: 37 67 68 120
    simple_expression (107)
        on left: 77 78
        on right: 70 76 166 199
    binary_expression_or_range (108)
        on left: 79 80
        on right: 93
    range_expression (109)
        on left: 81 83
        on right: 78 80
    $@7 (110)
        on left: 82
        on right: 83
    range_increment (111)
        on left: 84 85
        on right: 83
    increment_expression (112)
        on left: 86 87
        on right: 63
    s_bterm (113)
        on left: 88 89
        on right: 90 91
    binary_expression (114)
        on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
        on right: 77 79 83 85 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 121 122 153
    condition (115)
        on left: 121 122
        on right: 174 180
    value (116)
        on left: 123 124 125 126 127 128
        on right: 68 88 168
    map_literal (117)
        on left: 130
        on right: 126
    $@8 (118)
        on left: 129
        on right: 130
    map_associates (119)
        on left: 131 132
        on right: 130 132
    map_associate (120)
        on left: 133 134
        on right: 131 132
    array_literal (121)
        on left: 136 138
        on right: 127
    $@9 (122)
        on left: 135
        on right: 136
    $@10 (123)
        on left: 137
        on right: 138
    array_elements (124)
        on left: 139 140
        on right: 138 139
    array_element (125)
        on left: 141 142
        on right: 139 140
    simple_array_element (126)
        on left: 143 144 145 146
        on right: 141
    string (127)
        on left: 147 148
        on right: 124 148
    break (128)
        on left: 149
        on right: 58
    continue (129)
        on left: 150
        on right: 59
    return_expression (130)
        on left: 151
        on right: 60
    optional_bterm (131)
        on left: 152 153
        on right: 151
    opt_num (132)
        on left: 154 155
        on right: 149 150
    case_clauses (133)
        on left: 156 157
        on right: 157 168
    case_clause (134)
        on left: 158
        on right: 157
    case_selector (135)
        on left: 159 160
        on right: 158
    case_condition (136)
        on left: 161 162
        on right: 159
    label (137)
        on left: 163
        on right: 64
    goto (138)
        on left: 164
        on right: 61
    in_clause (139)
        on left: 166
        on right: 171
    $@11 (140)
        on left: 165
        on right: 166
    switch_expression (141)
        on left: 168
        on right: 57
    $@12 (142)
        on left: 167
        on right: 168
    foreach (143)
        on left: 171
        on right: 56
    $@13 (144)
        on left: 169
        on right: 171
    $@14 (145)
        on left: 170
        on right: 171
    while (146)
        on left: 174
        on right: 55
    $@15 (147)
        on left: 172
        on right: 174
    $@16 (148)
        on left: 173
        on right: 174
    local_block (149)
        on left: 175 176
        on right: 171 174 180 183
    closing_brace (150)
        on left: 177
        on right: 48 130 176
    if_expression (151)
        on left: 180
        on right: 54
    $@17 (152)
        on left: 178
        on right: 180
    $@18 (153)
        on left: 179
        on right: 180
    else_clause (154)
        on left: 181 183
        on right: 180
    $@19 (155)
        on left: 182
        on right: 183
    stmntlist (156)
        on left: 184 186
        on right: 48 158 176 186
    $@20 (157)
        on left: 185
        on right: 186
    closing_paren (158)
        on left: 187
        on right: 189 191
    call_expression (159)
        on left: 189 191
        on right: 52 89
    @21 (160)
        on left: 188
        on right: 189
    @22 (161)
        on left: 190
        on right: 191
    function_id_or_pointer (162)
        on left: 192 193 194
        on right: 191
    nonempty_parameters (163)
        on left: 196 197 198
        on right: 195 197
    parameter (164)
        on left: 199
        on right: 196 197
    type_cast (165)
        on left: 200
        on right: 91
    type_name (166)
        on left: 201 202
        on right: 34 37 38 45 166 200
    array_dimension (167)
        on left: 203 204
        on right: 202
    boolean_literal (168)
        on left: 205 206
        on right: 213
    float_literal (169)
        on left: 207
        on right: 211
    integer_literal (170)
        on left: 208
        on right: 210
    character_literal (171)
        on left: 209
        on right: 212
    simple_literal (172)
        on left: 210 211 212 213
        on right: 24 125 133


State 0

    0 $accept: . file_structure $end

    $default  reduce using rule 1 ($@1)

    file_structure  go to state 1
    $@1             go to state 2


State 1

    0 $accept: file_structure . $end

    $end  shift, and go to state 3


State 2

    3 file_structure: $@1 . namespace prerequisites global_declarations $@2 header_delimiter macro_definitions

    T_NAMESPACE  shift, and go to state 4

    $default  reduce using rule 8 (namespace)

    namespace  go to state 5


State 3

    0 $accept: file_structure $end .

    $default  accept


State 4

    9 namespace: T_NAMESPACE . T_IDENT ';'

    T_IDENT  shift, and go to state 6


State 5

    3 file_structure: $@1 namespace . prerequisites global_declarations $@2 header_delimiter macro_definitions

    $default  reduce using rule 10 (prerequisites)

    prerequisites  go to state 7


State 6

    9 namespace: T_NAMESPACE T_IDENT . ';'

    ';'  shift, and go to state 8


State 7

    3 file_structure: $@1 namespace prerequisites . global_declarations $@2 header_delimiter macro_definitions
   11 prerequisites: prerequisites . require

    T_REQUIRE  shift, and go to state 9

    $default  reduce using rule 13 (global_declarations)

    require              go to state 10
    global_declarations  go to state 11


State 8

    9 namespace: T_NAMESPACE T_IDENT ';' .

    $default  reduce using rule 9 (namespace)


State 9

   12 require: T_REQUIRE . T_STRING ';'

    T_STRING  shift, and go to state 12


State 10

   11 prerequisites: prerequisites require .

    $default  reduce using rule 11 (prerequisites)


State 11

    3 file_structure: $@1 namespace prerequisites global_declarations . $@2 header_delimiter macro_definitions
   14 global_declarations: global_declarations . constants ';'
   15                    | global_declarations . global_var ';'

    T_STATIC  shift, and go to state 13
    T_CONST   shift, and go to state 14

    T_STATIC           [reduce using rule 2 ($@2)]
    T_TYPE_IDENTIFIER  reduce using rule 2 ($@2)
    T_TYPE_IDENTIFIER  [reduce using rule 16 (scope)]
    $default           reduce using rule 2 ($@2)

    $@2         go to state 15
    scope       go to state 16
    constants   go to state 17
    global_var  go to state 18


State 12

   12 require: T_REQUIRE T_STRING . ';'

    ';'  shift, and go to state 19


State 13

   17 scope: T_STATIC .

    $default  reduce using rule 17 (scope)


State 14

   18 constants: T_CONST . constant_list

    $default  reduce using rule 21 ($@3)

    constant_list  go to state 20
    constdef       go to state 21
    $@3            go to state 22


State 15

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 . header_delimiter macro_definitions

    '!'  shift, and go to state 23

    $default  reduce using rule 4 (header_delimiter)

    header_delimiter  go to state 24


State 16

   36 global_var: scope . var_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    var_decl   go to state 26
    type_name  go to state 27


State 17

   14 global_declarations: global_declarations constants . ';'

    ';'  shift, and go to state 28


State 18

   15 global_declarations: global_declarations global_var . ';'

    ';'  shift, and go to state 29


State 19

   12 require: T_REQUIRE T_STRING ';' .

    $default  reduce using rule 12 (require)


State 20

   18 constants: T_CONST constant_list .
   20 constant_list: constant_list . ',' constdef

    ','  shift, and go to state 30

    $default  reduce using rule 18 (constants)


State 21

   19 constant_list: constdef .

    $default  reduce using rule 19 (constant_list)


State 22

   23 constdef: $@3 . variable_identifier T_ASSIGN constant_literal $@4

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 34


State 23

    5 header_delimiter: '!' .

    $default  reduce using rule 5 (header_delimiter)


State 24

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 46 ($@5)

    macro_definitions  go to state 35
    macro_definition   go to state 36
    $@5                go to state 37


State 25

  201 type_name: T_TYPE_IDENTIFIER .
  202          | T_TYPE_IDENTIFIER . array_dimension

    '['  shift, and go to state 38

    $default  reduce using rule 201 (type_name)

    array_dimension  go to state 39


State 26

   36 global_var: scope var_decl .

    $default  reduce using rule 36 (global_var)


State 27

   37 var_decl: type_name . variable_identifier assignment_expression
   38         | type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 40


State 28

   14 global_declarations: global_declarations constants ';' .

    $default  reduce using rule 14 (global_declarations)


State 29

   15 global_declarations: global_declarations global_var ';' .

    $default  reduce using rule 15 (global_declarations)


State 30

   20 constant_list: constant_list ',' . constdef

    $default  reduce using rule 21 ($@3)

    constdef  go to state 41
    $@3       go to state 22


State 31

   26 variable_identifier: T_IDENT .

    $default  reduce using rule 26 (variable_identifier)


State 32

   27 variable_identifier: T_NUM .

    $default  reduce using rule 27 (variable_identifier)


State 33

   28 variable_identifier: T_STRING .

    $default  reduce using rule 28 (variable_identifier)


State 34

   23 constdef: $@3 variable_identifier . T_ASSIGN constant_literal $@4

    T_ASSIGN  shift, and go to state 42


State 35

    3 file_structure: $@1 namespace prerequisites global_declarations $@2 header_delimiter macro_definitions .

    $default  reduce using rule 3 (file_structure)


State 36

    7 macro_definitions: macro_definition . macro_definitions

    $end      reduce using rule 6 (macro_definitions)
    $default  reduce using rule 46 ($@5)

    macro_definitions  go to state 43
    macro_definition   go to state 36
    $@5                go to state 37


State 37

   47 macro_definition: $@5 . macrostart block

    T_STATIC  shift, and go to state 13

    $default  reduce using rule 16 (scope)

    scope       go to state 44
    macro_type  go to state 45
    macrostart  go to state 46


State 38

  203 array_dimension: '[' . ']'
  204                | '[' . T_NUM ']'

    T_NUM  shift, and go to state 47
    ']'    shift, and go to state 48


State 39

  202 type_name: T_TYPE_IDENTIFIER array_dimension .

    $default  reduce using rule 202 (type_name)


State 40

   37 var_decl: type_name variable_identifier . assignment_expression
   38         | type_name variable_identifier .

    T_ASSIGN  shift, and go to state 49

    $default  reduce using rule 38 (var_decl)

    assignment_expression  go to state 50


State 41

   20 constant_list: constant_list ',' constdef .

    $default  reduce using rule 20 (constant_list)


State 42

   23 constdef: $@3 variable_identifier T_ASSIGN . constant_literal $@4

    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 53
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56

    constant_literal   go to state 57
    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 62


State 43

    7 macro_definitions: macro_definition macro_definitions .

    $default  reduce using rule 7 (macro_definitions)


State 44

   33 macro_type: scope . T_VOID
   34           | scope . type_name

    T_VOID             shift, and go to state 63
    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 64


State 45

   35 macrostart: macro_type . macro_declaration '(' parameter_list ')' optional_description

    T_IDENT  shift, and go to state 65
    T_FUNC   shift, and go to state 66

    macro_declaration  go to state 67


State 46

   47 macro_definition: $@5 macrostart . block

    '{'  shift, and go to state 68

    block  go to state 69


State 47

  204 array_dimension: '[' T_NUM . ']'

    ']'  shift, and go to state 70


State 48

  203 array_dimension: '[' ']' .

    $default  reduce using rule 203 (array_dimension)


State 49

   76 assignment_expression: T_ASSIGN . simple_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    error              [reduce using rule 81 (range_expression)]
    T_FOR              reduce using rule 81 (range_expression)
    T_TYPE_IDENTIFIER  reduce using rule 81 (range_expression)
    T_IDENT            [reduce using rule 81 (range_expression)]
    T_FUNC             [reduce using rule 81 (range_expression)]
    T_DOTDOT           reduce using rule 81 (range_expression)
    T_IF               reduce using rule 81 (range_expression)
    T_ELSE             reduce using rule 81 (range_expression)
    T_WHILE            reduce using rule 81 (range_expression)
    T_GOTO             reduce using rule 81 (range_expression)
    T_SWITCH           reduce using rule 81 (range_expression)
    T_CASE             reduce using rule 81 (range_expression)
    T_DEFAULT          reduce using rule 81 (range_expression)
    T_BREAK            reduce using rule 81 (range_expression)
    T_CONTINUE         reduce using rule 81 (range_expression)
    T_RETURN           reduce using rule 81 (range_expression)
    T_VARIABLE         [reduce using rule 81 (range_expression)]
    T_NMATCH           reduce using rule 81 (range_expression)
    T_NE               reduce using rule 81 (range_expression)
    T_EQ               reduce using rule 81 (range_expression)
    T_SHIFT_LEFT       reduce using rule 81 (range_expression)
    T_SHIFT_RIGHT      reduce using rule 81 (range_expression)
    T_OR               reduce using rule 81 (range_expression)
    T_AND              reduce using rule 81 (range_expression)
    T_LE               reduce using rule 81 (range_expression)
    T_GE               reduce using rule 81 (range_expression)
    T_POWER_TO         reduce using rule 81 (range_expression)
    '&'                reduce using rule 81 (range_expression)
    '|'                reduce using rule 81 (range_expression)
    '^'                reduce using rule 81 (range_expression)
    '~'                [reduce using rule 81 (range_expression)]
    '<'                reduce using rule 81 (range_expression)
    '>'                reduce using rule 81 (range_expression)
    '+'                [reduce using rule 81 (range_expression)]
    '-'                [reduce using rule 81 (range_expression)]
    '*'                [reduce using rule 81 (range_expression)]
    '/'                reduce using rule 81 (range_expression)
    '%'                reduce using rule 81 (range_expression)
    '['                [reduce using rule 81 (range_expression)]
    ';'                reduce using rule 81 (range_expression)
    ','                reduce using rule 81 (range_expression)
    ')'                reduce using rule 81 (range_expression)
    '{'                [reduce using rule 81 (range_expression)]
    ']'                reduce using rule 81 (range_expression)
    '}'                reduce using rule 81 (range_expression)

    variable_reference      go to state 84
    simple_expression       go to state 85
    range_expression        go to state 86
    s_bterm                 go to state 87
    binary_expression       go to state 88
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 50

   37 var_decl: type_name variable_identifier assignment_expression .

    $default  reduce using rule 37 (var_decl)


State 51

  208 integer_literal: T_NUM .

    $default  reduce using rule 208 (integer_literal)


State 52

  207 float_literal: T_FLOATING_POINT_NUMBER .

    $default  reduce using rule 207 (float_literal)


State 53

   25 constant_literal: T_STRING .

    $default  reduce using rule 25 (constant_literal)


State 54

  209 character_literal: T_CHARACTER .

    $default  reduce using rule 209 (character_literal)


State 55

  205 boolean_literal: T_TRUE .

    $default  reduce using rule 205 (boolean_literal)


State 56

  206 boolean_literal: T_FALSE .

    $default  reduce using rule 206 (boolean_literal)


State 57

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal . $@4

    $default  reduce using rule 22 ($@4)

    $@4  go to state 97


State 58

  213 simple_literal: boolean_literal .

    $default  reduce using rule 213 (simple_literal)


State 59

  211 simple_literal: float_literal .

    $default  reduce using rule 211 (simple_literal)


State 60

  210 simple_literal: integer_literal .

    $default  reduce using rule 210 (simple_literal)


State 61

  212 simple_literal: character_literal .

    $default  reduce using rule 212 (simple_literal)


State 62

   24 constant_literal: simple_literal .

    $default  reduce using rule 24 (constant_literal)


State 63

   33 macro_type: scope T_VOID .

    $default  reduce using rule 33 (macro_type)


State 64

   34 macro_type: scope type_name .

    $default  reduce using rule 34 (macro_type)


State 65

   31 macro_declaration: T_IDENT .

    $default  reduce using rule 31 (macro_declaration)


State 66

   32 macro_declaration: T_FUNC .

    $default  reduce using rule 32 (macro_declaration)


State 67

   35 macrostart: macro_type macro_declaration . '(' parameter_list ')' optional_description

    '('  shift, and go to state 98


State 68

   48 block: '{' . var_decls stmntlist closing_brace

    $default  reduce using rule 49 (var_decls)

    var_decls  go to state 99


State 69

   47 macro_definition: $@5 macrostart block .

    $default  reduce using rule 47 (macro_definition)


State 70

  204 array_dimension: '[' T_NUM ']' .

    $default  reduce using rule 204 (array_dimension)


State 71

  194 function_id_or_pointer: error .

    $default  reduce using rule 194 (function_id_or_pointer)


State 72

   30 variable_reference: T_IDENT .
  128 value: T_IDENT .
  193 function_id_or_pointer: T_IDENT .

    T_ASSIGN  reduce using rule 30 (variable_reference)
    '('       reduce using rule 193 (function_id_or_pointer)
    $default  reduce using rule 128 (value)


State 73

  147 string: T_STRING .

    $default  reduce using rule 147 (string)


State 74

  189 call_expression: T_FUNC . '(' @21 parameter_list closing_paren

    '('  shift, and go to state 100


State 75

   29 variable_reference: T_VARIABLE .
  123 value: T_VARIABLE .

    T_ASSIGN  reduce using rule 29 (variable_reference)
    $default  reduce using rule 123 (value)


State 76

   95 binary_expression: '~' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 101
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 77

   96 binary_expression: '+' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 102
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 78

   92 binary_expression: '-' . T_NUM
   97                  | '-' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 103
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 104
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 79

  192 function_id_or_pointer: '*' . variable_reference

    T_IDENT     shift, and go to state 105
    T_VARIABLE  shift, and go to state 106

    variable_reference  go to state 107


State 80

  136 array_literal: '[' . $@9 ']'
  138              | '[' . $@10 array_elements ']'

    ']'       reduce using rule 135 ($@9)
    $default  reduce using rule 137 ($@10)

    $@9   go to state 108
    $@10  go to state 109


State 81

   94 binary_expression: '!' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 110
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 82

  119 binary_expression: '(' . binary_expression ')'
  200 type_cast: '(' . type_name ')'

    error                    shift, and go to state 71
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 111
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    type_name               go to state 112
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 83

  130 map_literal: '{' . $@8 map_associates closing_brace

    $default  reduce using rule 129 ($@8)

    $@8  go to state 113


State 84

  120 binary_expression: variable_reference . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 114


State 85

   76 assignment_expression: T_ASSIGN simple_expression .

    $default  reduce using rule 76 (assignment_expression)


State 86

   78 simple_expression: range_expression .

    $default  reduce using rule 78 (simple_expression)


State 87

   90 binary_expression: s_bterm .

    $default  reduce using rule 90 (binary_expression)


State 88

   77 simple_expression: binary_expression .
   83 range_expression: binary_expression . T_DOTDOT binary_expression $@7 range_increment
   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 115
    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_OR           shift, and go to state 121
    T_AND          shift, and go to state 122
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    T_DOTDOT       [reduce using rule 77 (simple_expression)]
    T_NMATCH       [reduce using rule 77 (simple_expression)]
    T_NE           [reduce using rule 77 (simple_expression)]
    T_EQ           [reduce using rule 77 (simple_expression)]
    T_SHIFT_LEFT   [reduce using rule 77 (simple_expression)]
    T_SHIFT_RIGHT  [reduce using rule 77 (simple_expression)]
    T_OR           [reduce using rule 77 (simple_expression)]
    T_AND          [reduce using rule 77 (simple_expression)]
    T_LE           [reduce using rule 77 (simple_expression)]
    T_GE           [reduce using rule 77 (simple_expression)]
    T_POWER_TO     [reduce using rule 77 (simple_expression)]
    '&'            [reduce using rule 77 (simple_expression)]
    '|'            [reduce using rule 77 (simple_expression)]
    '^'            [reduce using rule 77 (simple_expression)]
    '~'            [reduce using rule 77 (simple_expression)]
    '<'            [reduce using rule 77 (simple_expression)]
    '>'            [reduce using rule 77 (simple_expression)]
    '+'            [reduce using rule 77 (simple_expression)]
    '-'            [reduce using rule 77 (simple_expression)]
    '*'            [reduce using rule 77 (simple_expression)]
    '/'            [reduce using rule 77 (simple_expression)]
    '%'            [reduce using rule 77 (simple_expression)]
    '['            [reduce using rule 77 (simple_expression)]
    $default       reduce using rule 77 (simple_expression)


State 89

   88 s_bterm: value .

    $default  reduce using rule 88 (s_bterm)


State 90

  126 value: map_literal .

    $default  reduce using rule 126 (value)


State 91

  127 value: array_literal .

    $default  reduce using rule 127 (value)


State 92

  124 value: string .
  148 string: string . T_STRING

    T_STRING  shift, and go to state 138

    $default  reduce using rule 124 (value)


State 93

   89 s_bterm: call_expression .

    $default  reduce using rule 89 (s_bterm)


State 94

  191 call_expression: function_id_or_pointer . '(' @22 parameter_list closing_paren

    '('  shift, and go to state 139


State 95

   91 binary_expression: type_cast . s_bterm

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 140
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 141
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '{'                      shift, and go to state 83

    s_bterm                 go to state 142
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 96

  125 value: simple_literal .

    $default  reduce using rule 125 (value)


State 97

   23 constdef: $@3 variable_identifier T_ASSIGN constant_literal $@4 .

    $default  reduce using rule 23 (constdef)


State 98

   35 macrostart: macro_type macro_declaration '(' . parameter_list ')' optional_description

    error                    shift, and go to state 143
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    ','  reduce using rule 81 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 81 (range_expression)]

    variable_reference      go to state 84
    parameter_list          go to state 144
    non_empty_pardecl       go to state 145
    par_decl                go to state 146
    simple_expression       go to state 147
    range_expression        go to state 86
    s_bterm                 go to state 87
    binary_expression       go to state 88
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    nonempty_parameters     go to state 148
    parameter               go to state 149
    type_cast               go to state 95
    type_name               go to state 150
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 99

   48 block: '{' var_decls . stmntlist closing_brace
   50 var_decls: var_decls . var_decl ';'

    error              shift, and go to state 151
    T_FOR              shift, and go to state 152
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 153
    T_FUNC             shift, and go to state 74
    T_IF               shift, and go to state 154
    T_WHILE            shift, and go to state 155
    T_GOTO             shift, and go to state 156
    T_SWITCH           shift, and go to state 157
    T_BREAK            shift, and go to state 158
    T_CONTINUE         shift, and go to state 159
    T_RETURN           shift, and go to state 160
    T_VARIABLE         shift, and go to state 106
    '*'                shift, and go to state 79
    ';'                shift, and go to state 161
    '{'                shift, and go to state 68

    '}'  reduce using rule 184 (stmntlist)

    variable_reference      go to state 162
    var_decl                go to state 163
    block                   go to state 164
    statement               go to state 165
    assignment              go to state 166
    increment_expression    go to state 167
    break                   go to state 168
    continue                go to state 169
    return_expression       go to state 170
    label                   go to state 171
    goto                    go to state 172
    switch_expression       go to state 173
    foreach                 go to state 174
    while                   go to state 175
    if_expression           go to state 176
    stmntlist               go to state 177
    call_expression         go to state 178
    function_id_or_pointer  go to state 94
    type_name               go to state 27


State 100

  189 call_expression: T_FUNC '(' . @21 parameter_list closing_paren

    $default  reduce using rule 188 (@21)

    @21  go to state 179


State 101

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   95                  | '~' binary_expression .
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 95 (binary_expression)


State 102

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   96                  | '+' binary_expression .
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 125
    '*'         shift, and go to state 134
    '/'         shift, and go to state 135
    '%'         shift, and go to state 136
    '['         shift, and go to state 137

    $default  reduce using rule 96 (binary_expression)


State 103

   92 binary_expression: '-' T_NUM .
  208 integer_literal: T_NUM .

    error              reduce using rule 92 (binary_expression)
    error              [reduce using rule 208 (integer_literal)]
    T_FOR              reduce using rule 92 (binary_expression)
    T_FOR              [reduce using rule 208 (integer_literal)]
    T_TYPE_IDENTIFIER  reduce using rule 92 (binary_expression)
    T_TYPE_IDENTIFIER  [reduce using rule 208 (integer_literal)]
    T_IDENT            reduce using rule 92 (binary_expression)
    T_IDENT            [reduce using rule 208 (integer_literal)]
    T_FUNC             reduce using rule 92 (binary_expression)
    T_FUNC             [reduce using rule 208 (integer_literal)]
    T_DOTDOT           reduce using rule 92 (binary_expression)
    T_DOTDOT           [reduce using rule 208 (integer_literal)]
    T_IF               reduce using rule 92 (binary_expression)
    T_IF               [reduce using rule 208 (integer_literal)]
    T_ELSE             reduce using rule 92 (binary_expression)
    T_ELSE             [reduce using rule 208 (integer_literal)]
    T_WHILE            reduce using rule 92 (binary_expression)
    T_WHILE            [reduce using rule 208 (integer_literal)]
    T_GOTO             reduce using rule 92 (binary_expression)
    T_GOTO             [reduce using rule 208 (integer_literal)]
    T_SWITCH           reduce using rule 92 (binary_expression)
    T_SWITCH           [reduce using rule 208 (integer_literal)]
    T_CASE             reduce using rule 92 (binary_expression)
    T_CASE             [reduce using rule 208 (integer_literal)]
    T_DEFAULT          reduce using rule 92 (binary_expression)
    T_DEFAULT          [reduce using rule 208 (integer_literal)]
    T_BREAK            reduce using rule 92 (binary_expression)
    T_BREAK            [reduce using rule 208 (integer_literal)]
    T_CONTINUE         reduce using rule 92 (binary_expression)
    T_CONTINUE         [reduce using rule 208 (integer_literal)]
    T_RETURN           reduce using rule 92 (binary_expression)
    T_RETURN           [reduce using rule 208 (integer_literal)]
    T_VARIABLE         reduce using rule 92 (binary_expression)
    T_VARIABLE         [reduce using rule 208 (integer_literal)]
    T_NMATCH           reduce using rule 92 (binary_expression)
    T_NMATCH           [reduce using rule 208 (integer_literal)]
    T_NE               reduce using rule 92 (binary_expression)
    T_NE               [reduce using rule 208 (integer_literal)]
    T_EQ               reduce using rule 92 (binary_expression)
    T_EQ               [reduce using rule 208 (integer_literal)]
    T_SHIFT_LEFT       reduce using rule 92 (binary_expression)
    T_SHIFT_LEFT       [reduce using rule 208 (integer_literal)]
    T_SHIFT_RIGHT      reduce using rule 92 (binary_expression)
    T_SHIFT_RIGHT      [reduce using rule 208 (integer_literal)]
    T_OR               reduce using rule 92 (binary_expression)
    T_OR               [reduce using rule 208 (integer_literal)]
    T_AND              reduce using rule 92 (binary_expression)
    T_AND              [reduce using rule 208 (integer_literal)]
    T_LE               reduce using rule 92 (binary_expression)
    T_LE               [reduce using rule 208 (integer_literal)]
    T_GE               reduce using rule 92 (binary_expression)
    T_GE               [reduce using rule 208 (integer_literal)]
    T_POWER_TO         reduce using rule 92 (binary_expression)
    T_POWER_TO         [reduce using rule 208 (integer_literal)]
    '&'                reduce using rule 92 (binary_expression)
    '&'                [reduce using rule 208 (integer_literal)]
    '|'                reduce using rule 92 (binary_expression)
    '|'                [reduce using rule 208 (integer_literal)]
    '^'                reduce using rule 92 (binary_expression)
    '^'                [reduce using rule 208 (integer_literal)]
    '~'                reduce using rule 92 (binary_expression)
    '~'                [reduce using rule 208 (integer_literal)]
    '<'                reduce using rule 92 (binary_expression)
    '<'                [reduce using rule 208 (integer_literal)]
    '>'                reduce using rule 92 (binary_expression)
    '>'                [reduce using rule 208 (integer_literal)]
    '+'                reduce using rule 92 (binary_expression)
    '+'                [reduce using rule 208 (integer_literal)]
    '-'                reduce using rule 92 (binary_expression)
    '-'                [reduce using rule 208 (integer_literal)]
    '*'                reduce using rule 92 (binary_expression)
    '*'                [reduce using rule 208 (integer_literal)]
    '/'                reduce using rule 92 (binary_expression)
    '/'                [reduce using rule 208 (integer_literal)]
    '%'                reduce using rule 92 (binary_expression)
    '%'                [reduce using rule 208 (integer_literal)]
    '['                reduce using rule 92 (binary_expression)
    '['                [reduce using rule 208 (integer_literal)]
    ';'                reduce using rule 92 (binary_expression)
    ';'                [reduce using rule 208 (integer_literal)]
    ','                reduce using rule 92 (binary_expression)
    ','                [reduce using rule 208 (integer_literal)]
    ')'                reduce using rule 92 (binary_expression)
    ')'                [reduce using rule 208 (integer_literal)]
    '{'                reduce using rule 92 (binary_expression)
    '{'                [reduce using rule 208 (integer_literal)]
    ']'                reduce using rule 92 (binary_expression)
    ']'                [reduce using rule 208 (integer_literal)]
    '}'                reduce using rule 92 (binary_expression)
    '}'                [reduce using rule 208 (integer_literal)]
    $default           reduce using rule 92 (binary_expression)


State 104

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   97                  | '-' binary_expression .
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 125
    '*'         shift, and go to state 134
    '/'         shift, and go to state 135
    '%'         shift, and go to state 136
    '['         shift, and go to state 137

    $default  reduce using rule 97 (binary_expression)


State 105

   30 variable_reference: T_IDENT .

    $default  reduce using rule 30 (variable_reference)


State 106

   29 variable_reference: T_VARIABLE .

    $default  reduce using rule 29 (variable_reference)


State 107

  192 function_id_or_pointer: '*' variable_reference .

    $default  reduce using rule 192 (function_id_or_pointer)


State 108

  136 array_literal: '[' $@9 . ']'

    ']'  shift, and go to state 180


State 109

  138 array_literal: '[' $@10 . array_elements ']'

    T_NUM        shift, and go to state 181
    T_STRING     shift, and go to state 182
    T_CHARACTER  shift, and go to state 183
    T_TRUE       shift, and go to state 184
    T_FALSE      shift, and go to state 185

    array_elements        go to state 186
    array_element         go to state 187
    simple_array_element  go to state 188


State 110

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   94                  | '!' binary_expression .
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_OR           shift, and go to state 121
    T_AND          shift, and go to state 122
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    T_NMATCH       [reduce using rule 94 (binary_expression)]
    T_NE           [reduce using rule 94 (binary_expression)]
    T_EQ           [reduce using rule 94 (binary_expression)]
    T_SHIFT_LEFT   [reduce using rule 94 (binary_expression)]
    T_SHIFT_RIGHT  [reduce using rule 94 (binary_expression)]
    T_OR           [reduce using rule 94 (binary_expression)]
    T_AND          [reduce using rule 94 (binary_expression)]
    T_LE           [reduce using rule 94 (binary_expression)]
    T_GE           [reduce using rule 94 (binary_expression)]
    T_POWER_TO     [reduce using rule 94 (binary_expression)]
    '&'            [reduce using rule 94 (binary_expression)]
    '|'            [reduce using rule 94 (binary_expression)]
    '^'            [reduce using rule 94 (binary_expression)]
    '~'            [reduce using rule 94 (binary_expression)]
    '<'            [reduce using rule 94 (binary_expression)]
    '>'            [reduce using rule 94 (binary_expression)]
    '+'            [reduce using rule 94 (binary_expression)]
    '-'            [reduce using rule 94 (binary_expression)]
    '*'            [reduce using rule 94 (binary_expression)]
    '/'            [reduce using rule 94 (binary_expression)]
    '%'            [reduce using rule 94 (binary_expression)]
    '['            [reduce using rule 94 (binary_expression)]
    $default       reduce using rule 94 (binary_expression)


State 111

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression
  119                  | '(' binary_expression . ')'

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_OR           shift, and go to state 121
    T_AND          shift, and go to state 122
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137
    ')'            shift, and go to state 189


State 112

  200 type_cast: '(' type_name . ')'

    ')'  shift, and go to state 190


State 113

  130 map_literal: '{' $@8 . map_associates closing_brace

    T_STRING  shift, and go to state 191

    map_associates  go to state 192
    map_associate   go to state 193


State 114

  120 binary_expression: variable_reference assignment_expression .

    $default  reduce using rule 120 (binary_expression)


State 115

   83 range_expression: binary_expression T_DOTDOT . binary_expression $@7 range_increment

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 194
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 116

   99 binary_expression: binary_expression T_NMATCH . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 195
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 117

  118 binary_expression: binary_expression T_NE . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 196
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 118

  117 binary_expression: binary_expression T_EQ . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 197
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 119

  108 binary_expression: binary_expression T_SHIFT_LEFT . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 198
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 120

  109 binary_expression: binary_expression T_SHIFT_RIGHT . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 199
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 121

  112 binary_expression: binary_expression T_OR . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 200
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 122

  111 binary_expression: binary_expression T_AND . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 201
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 123

  115 binary_expression: binary_expression T_LE . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 202
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 124

  116 binary_expression: binary_expression T_GE . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 203
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 125

  110 binary_expression: binary_expression T_POWER_TO . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 204
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 126

  100 binary_expression: binary_expression '&' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 205
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 127

  101 binary_expression: binary_expression '|' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 206
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 128

  103 binary_expression: binary_expression '^' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 207
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 129

   98 binary_expression: binary_expression '~' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 208
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 130

  113 binary_expression: binary_expression '<' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 209
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 131

  114 binary_expression: binary_expression '>' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 210
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 132

  102 binary_expression: binary_expression '+' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 211
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 133

  104 binary_expression: binary_expression '-' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 212
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 134

  105 binary_expression: binary_expression '*' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 213
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 135

  106 binary_expression: binary_expression '/' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 214
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 136

  107 binary_expression: binary_expression '%' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 215
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 137

   93 binary_expression: binary_expression '[' . binary_expression_or_range ']'

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    ']'  reduce using rule 81 (range_expression)

    variable_reference          go to state 84
    binary_expression_or_range  go to state 216
    range_expression            go to state 217
    s_bterm                     go to state 87
    binary_expression           go to state 218
    value                       go to state 89
    map_literal                 go to state 90
    array_literal               go to state 91
    string                      go to state 92
    call_expression             go to state 93
    function_id_or_pointer      go to state 94
    type_cast                   go to state 95
    boolean_literal             go to state 58
    float_literal               go to state 59
    integer_literal             go to state 60
    character_literal           go to state 61
    simple_literal              go to state 96


State 138

  148 string: string T_STRING .

    $default  reduce using rule 148 (string)


State 139

  191 call_expression: function_id_or_pointer '(' . @22 parameter_list closing_paren

    $default  reduce using rule 190 (@22)

    @22  go to state 219


State 140

  128 value: T_IDENT .
  193 function_id_or_pointer: T_IDENT .

    '('       reduce using rule 193 (function_id_or_pointer)
    $default  reduce using rule 128 (value)


State 141

  123 value: T_VARIABLE .

    $default  reduce using rule 123 (value)


State 142

   91 binary_expression: type_cast s_bterm .

    $default  reduce using rule 91 (binary_expression)


State 143

  194 function_id_or_pointer: error .
  198 nonempty_parameters: error .

    '('       reduce using rule 194 (function_id_or_pointer)
    $default  reduce using rule 198 (nonempty_parameters)


State 144

   35 macrostart: macro_type macro_declaration '(' parameter_list . ')' optional_description

    ')'  shift, and go to state 220


State 145

   42 parameter_list: non_empty_pardecl .
   44 non_empty_pardecl: non_empty_pardecl . ',' par_decl

    ','  shift, and go to state 221

    $default  reduce using rule 42 (parameter_list)


State 146

   43 non_empty_pardecl: par_decl .

    $default  reduce using rule 43 (non_empty_pardecl)


State 147

  199 parameter: simple_expression .

    $default  reduce using rule 199 (parameter)


State 148

  195 parameter_list: nonempty_parameters .
  197 nonempty_parameters: nonempty_parameters . ',' parameter

    ','  shift, and go to state 222

    $default  reduce using rule 195 (parameter_list)


State 149

  196 nonempty_parameters: parameter .

    $default  reduce using rule 196 (nonempty_parameters)


State 150

   45 par_decl: type_name . variable_identifier

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 223


State 151

   66 statement: error . ';'
  194 function_id_or_pointer: error .

    ';'  shift, and go to state 224

    $default  reduce using rule 194 (function_id_or_pointer)


State 152

  171 foreach: T_FOR . $@13 in_clause $@14 local_block

    $default  reduce using rule 169 ($@13)

    $@13  go to state 225


State 153

   30 variable_reference: T_IDENT .
  163 label: T_IDENT . ':'
  193 function_id_or_pointer: T_IDENT .

    ':'  shift, and go to state 226

    '('       reduce using rule 193 (function_id_or_pointer)
    $default  reduce using rule 30 (variable_reference)


State 154

  180 if_expression: T_IF . condition $@17 local_block $@18 else_clause

    '('  shift, and go to state 227

    condition  go to state 228


State 155

  174 while: T_WHILE . $@15 condition $@16 local_block

    $default  reduce using rule 172 ($@15)

    $@15  go to state 229


State 156

  164 goto: T_GOTO . T_IDENT

    T_IDENT  shift, and go to state 230


State 157

  168 switch_expression: T_SWITCH . '(' value ')' $@12 '{' case_clauses '}'

    '('  shift, and go to state 231


State 158

  149 break: T_BREAK . opt_num ';'

    T_NUM  shift, and go to state 232

    $default  reduce using rule 154 (opt_num)

    opt_num  go to state 233


State 159

  150 continue: T_CONTINUE . opt_num ';'

    T_NUM  shift, and go to state 232

    $default  reduce using rule 154 (opt_num)

    opt_num  go to state 234


State 160

  151 return_expression: T_RETURN . optional_bterm

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    error              [reduce using rule 152 (optional_bterm)]
    T_FOR              reduce using rule 152 (optional_bterm)
    T_TYPE_IDENTIFIER  reduce using rule 152 (optional_bterm)
    T_IDENT            [reduce using rule 152 (optional_bterm)]
    T_FUNC             [reduce using rule 152 (optional_bterm)]
    T_IF               reduce using rule 152 (optional_bterm)
    T_ELSE             reduce using rule 152 (optional_bterm)
    T_WHILE            reduce using rule 152 (optional_bterm)
    T_GOTO             reduce using rule 152 (optional_bterm)
    T_SWITCH           reduce using rule 152 (optional_bterm)
    T_CASE             reduce using rule 152 (optional_bterm)
    T_DEFAULT          reduce using rule 152 (optional_bterm)
    T_BREAK            reduce using rule 152 (optional_bterm)
    T_CONTINUE         reduce using rule 152 (optional_bterm)
    T_RETURN           reduce using rule 152 (optional_bterm)
    T_VARIABLE         [reduce using rule 152 (optional_bterm)]
    '*'                [reduce using rule 152 (optional_bterm)]
    ';'                reduce using rule 152 (optional_bterm)
    '{'                [reduce using rule 152 (optional_bterm)]
    '}'                reduce using rule 152 (optional_bterm)

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 235
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    optional_bterm          go to state 236
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 161

   51 statement: ';' .

    $default  reduce using rule 51 (statement)


State 162

   67 assignment: variable_reference . assignment_expression
   68           | variable_reference . '[' value ']' assignment_expression
   70           | variable_reference . $@6 shorthand_assignment_operator simple_expression
   86 increment_expression: variable_reference . T_MINUSMINUS
   87                     | variable_reference . T_PLUSPLUS

    T_PLUSPLUS    shift, and go to state 237
    T_MINUSMINUS  shift, and go to state 238
    T_ASSIGN      shift, and go to state 49
    '['           shift, and go to state 239

    $default  reduce using rule 69 ($@6)

    $@6                    go to state 240
    assignment_expression  go to state 241


State 163

   50 var_decls: var_decls var_decl . ';'
   65 statement: var_decl .

    ';'  shift, and go to state 242

    ';'       [reduce using rule 65 (statement)]
    $default  reduce using rule 65 (statement)


State 164

   62 statement: block .

    $default  reduce using rule 62 (statement)


State 165

  186 stmntlist: statement . $@20 stmntlist

    $default  reduce using rule 185 ($@20)

    $@20  go to state 243


State 166

   53 statement: assignment . ';'

    ';'  shift, and go to state 244


State 167

   63 statement: increment_expression .

    $default  reduce using rule 63 (statement)


State 168

   58 statement: break .

    $default  reduce using rule 58 (statement)


State 169

   59 statement: continue .

    $default  reduce using rule 59 (statement)


State 170

   60 statement: return_expression .

    $default  reduce using rule 60 (statement)


State 171

   64 statement: label .

    $default  reduce using rule 64 (statement)


State 172

   61 statement: goto .

    $default  reduce using rule 61 (statement)


State 173

   57 statement: switch_expression .

    $default  reduce using rule 57 (statement)


State 174

   56 statement: foreach .

    $default  reduce using rule 56 (statement)


State 175

   55 statement: while .

    $default  reduce using rule 55 (statement)


State 176

   54 statement: if_expression .

    $default  reduce using rule 54 (statement)


State 177

   48 block: '{' var_decls stmntlist . closing_brace

    '}'  shift, and go to state 245

    closing_brace  go to state 246


State 178

   52 statement: call_expression . ';'

    ';'  shift, and go to state 247


State 179

  189 call_expression: T_FUNC '(' @21 . parameter_list closing_paren

    error                    shift, and go to state 143
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    ','  reduce using rule 81 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 81 (range_expression)]

    variable_reference      go to state 84
    parameter_list          go to state 248
    non_empty_pardecl       go to state 145
    par_decl                go to state 146
    simple_expression       go to state 147
    range_expression        go to state 86
    s_bterm                 go to state 87
    binary_expression       go to state 88
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    nonempty_parameters     go to state 148
    parameter               go to state 149
    type_cast               go to state 95
    type_name               go to state 150
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 180

  136 array_literal: '[' $@9 ']' .

    $default  reduce using rule 136 (array_literal)


State 181

  143 simple_array_element: T_NUM .

    $default  reduce using rule 143 (simple_array_element)


State 182

  142 array_element: T_STRING .

    $default  reduce using rule 142 (array_element)


State 183

  144 simple_array_element: T_CHARACTER .

    $default  reduce using rule 144 (simple_array_element)


State 184

  145 simple_array_element: T_TRUE .

    $default  reduce using rule 145 (simple_array_element)


State 185

  146 simple_array_element: T_FALSE .

    $default  reduce using rule 146 (simple_array_element)


State 186

  138 array_literal: '[' $@10 array_elements . ']'
  139 array_elements: array_elements . ',' array_element

    ','  shift, and go to state 249
    ']'  shift, and go to state 250


State 187

  140 array_elements: array_element .

    $default  reduce using rule 140 (array_elements)


State 188

  141 array_element: simple_array_element .

    $default  reduce using rule 141 (array_element)


State 189

  119 binary_expression: '(' binary_expression ')' .

    $default  reduce using rule 119 (binary_expression)


State 190

  200 type_cast: '(' type_name ')' .

    $default  reduce using rule 200 (type_cast)


State 191

  133 map_associate: T_STRING . T_ASSOC_ARROW simple_literal
  134              | T_STRING . T_ASSOC_ARROW T_STRING

    T_ASSOC_ARROW  shift, and go to state 251


State 192

  130 map_literal: '{' $@8 map_associates . closing_brace
  132 map_associates: map_associates . ',' map_associate

    ','  shift, and go to state 252
    '}'  shift, and go to state 245

    closing_brace  go to state 253


State 193

  131 map_associates: map_associate .

    $default  reduce using rule 131 (map_associates)


State 194

   83 range_expression: binary_expression T_DOTDOT binary_expression . $@7 range_increment
   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_OR           shift, and go to state 121
    T_AND          shift, and go to state 122
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    T_NMATCH       [reduce using rule 82 ($@7)]
    T_NE           [reduce using rule 82 ($@7)]
    T_EQ           [reduce using rule 82 ($@7)]
    T_SHIFT_LEFT   [reduce using rule 82 ($@7)]
    T_SHIFT_RIGHT  [reduce using rule 82 ($@7)]
    T_OR           [reduce using rule 82 ($@7)]
    T_AND          [reduce using rule 82 ($@7)]
    T_LE           [reduce using rule 82 ($@7)]
    T_GE           [reduce using rule 82 ($@7)]
    T_POWER_TO     [reduce using rule 82 ($@7)]
    '&'            [reduce using rule 82 ($@7)]
    '|'            [reduce using rule 82 ($@7)]
    '^'            [reduce using rule 82 ($@7)]
    '~'            [reduce using rule 82 ($@7)]
    '<'            [reduce using rule 82 ($@7)]
    '>'            [reduce using rule 82 ($@7)]
    '+'            [reduce using rule 82 ($@7)]
    '-'            [reduce using rule 82 ($@7)]
    '*'            [reduce using rule 82 ($@7)]
    '/'            [reduce using rule 82 ($@7)]
    '%'            [reduce using rule 82 ($@7)]
    '['            [reduce using rule 82 ($@7)]
    $default       reduce using rule 82 ($@7)

    $@7  go to state 254


State 195

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
   99                  | binary_expression T_NMATCH binary_expression .
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 99 (binary_expression)


State 196

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression
  118                  | binary_expression T_NE binary_expression .

    T_NMATCH       shift, and go to state 116
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    $default  reduce using rule 118 (binary_expression)


State 197

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  117                  | binary_expression T_EQ binary_expression .
  118                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 116
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    T_NE  error (nonassociative)
    T_EQ  error (nonassociative)

    $default  reduce using rule 117 (binary_expression)


State 198

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  108                  | binary_expression T_SHIFT_LEFT binary_expression .
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 125
    '+'         shift, and go to state 132
    '-'         shift, and go to state 133
    '*'         shift, and go to state 134
    '/'         shift, and go to state 135
    '%'         shift, and go to state 136
    '['         shift, and go to state 137

    $default  reduce using rule 108 (binary_expression)


State 199

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  109                  | binary_expression T_SHIFT_RIGHT binary_expression .
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 125
    '+'         shift, and go to state 132
    '-'         shift, and go to state 133
    '*'         shift, and go to state 134
    '/'         shift, and go to state 135
    '%'         shift, and go to state 136
    '['         shift, and go to state 137

    $default  reduce using rule 109 (binary_expression)


State 200

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  112                  | binary_expression T_OR binary_expression .
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 112 (binary_expression)


State 201

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  111                  | binary_expression T_AND binary_expression .
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 111 (binary_expression)


State 202

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  115                  | binary_expression T_LE binary_expression .
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_POWER_TO     shift, and go to state 125
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 115 (binary_expression)


State 203

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  116                  | binary_expression T_GE binary_expression .
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_POWER_TO     shift, and go to state 125
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 116 (binary_expression)


State 204

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  110                  | binary_expression T_POWER_TO binary_expression .
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 137

    $default  reduce using rule 110 (binary_expression)


State 205

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  100                  | binary_expression '&' binary_expression .
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 100 (binary_expression)


State 206

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  101                  | binary_expression '|' binary_expression .
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 101 (binary_expression)


State 207

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  103                  | binary_expression '^' binary_expression .
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 103 (binary_expression)


State 208

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   98                  | binary_expression '~' binary_expression .
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 98 (binary_expression)


State 209

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  113                  | binary_expression '<' binary_expression .
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_POWER_TO     shift, and go to state 125
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 113 (binary_expression)


State 210

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  114                  | binary_expression '>' binary_expression .
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_POWER_TO     shift, and go to state 125
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 114 (binary_expression)


State 211

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  102                  | binary_expression '+' binary_expression .
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 125
    '*'         shift, and go to state 134
    '/'         shift, and go to state 135
    '%'         shift, and go to state 136
    '['         shift, and go to state 137

    $default  reduce using rule 102 (binary_expression)


State 212

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  104                  | binary_expression '-' binary_expression .
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_POWER_TO  shift, and go to state 125
    '*'         shift, and go to state 134
    '/'         shift, and go to state 135
    '%'         shift, and go to state 136
    '['         shift, and go to state 137

    $default  reduce using rule 104 (binary_expression)


State 213

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  105                  | binary_expression '*' binary_expression .
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 137

    $default  reduce using rule 105 (binary_expression)


State 214

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  106                  | binary_expression '/' binary_expression .
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 137

    $default  reduce using rule 106 (binary_expression)


State 215

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  107                  | binary_expression '%' binary_expression .
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    '['  shift, and go to state 137

    $default  reduce using rule 107 (binary_expression)


State 216

   93 binary_expression: binary_expression '[' binary_expression_or_range . ']'

    ']'  shift, and go to state 255


State 217

   80 binary_expression_or_range: range_expression .

    $default  reduce using rule 80 (binary_expression_or_range)


State 218

   79 binary_expression_or_range: binary_expression .
   83 range_expression: binary_expression . T_DOTDOT binary_expression $@7 range_increment
   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    T_DOTDOT       shift, and go to state 115
    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_OR           shift, and go to state 121
    T_AND          shift, and go to state 122
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    $default  reduce using rule 79 (binary_expression_or_range)


State 219

  191 call_expression: function_id_or_pointer '(' @22 . parameter_list closing_paren

    error                    shift, and go to state 143
    T_TYPE_IDENTIFIER        shift, and go to state 25
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    ','  reduce using rule 81 (range_expression)
    ')'  reduce using rule 41 (parameter_list)
    ')'  [reduce using rule 81 (range_expression)]

    variable_reference      go to state 84
    parameter_list          go to state 256
    non_empty_pardecl       go to state 145
    par_decl                go to state 146
    simple_expression       go to state 147
    range_expression        go to state 86
    s_bterm                 go to state 87
    binary_expression       go to state 88
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    nonempty_parameters     go to state 148
    parameter               go to state 149
    type_cast               go to state 95
    type_name               go to state 150
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 220

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' . optional_description

    T_STRING  shift, and go to state 257

    $default  reduce using rule 39 (optional_description)

    optional_description  go to state 258


State 221

   44 non_empty_pardecl: non_empty_pardecl ',' . par_decl

    T_TYPE_IDENTIFIER  shift, and go to state 25

    par_decl   go to state 259
    type_name  go to state 150


State 222

  197 nonempty_parameters: nonempty_parameters ',' . parameter

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    ','  reduce using rule 81 (range_expression)
    ')'  reduce using rule 81 (range_expression)

    variable_reference      go to state 84
    simple_expression       go to state 147
    range_expression        go to state 86
    s_bterm                 go to state 87
    binary_expression       go to state 88
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    parameter               go to state 260
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 223

   45 par_decl: type_name variable_identifier .

    $default  reduce using rule 45 (par_decl)


State 224

   66 statement: error ';' .

    $default  reduce using rule 66 (statement)


State 225

  171 foreach: T_FOR $@13 . in_clause $@14 local_block

    '('  shift, and go to state 261

    in_clause  go to state 262


State 226

  163 label: T_IDENT ':' .

    $default  reduce using rule 163 (label)


State 227

  121 condition: '(' . binary_expression ')'
  122          | '(' . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 263
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 228

  180 if_expression: T_IF condition . $@17 local_block $@18 else_clause

    $default  reduce using rule 178 ($@17)

    $@17  go to state 264


State 229

  174 while: T_WHILE $@15 . condition $@16 local_block

    '('  shift, and go to state 227

    condition  go to state 265


State 230

  164 goto: T_GOTO T_IDENT .

    $default  reduce using rule 164 (goto)


State 231

  168 switch_expression: T_SWITCH '(' . value ')' $@12 '{' case_clauses '}'

    T_IDENT                  shift, and go to state 266
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_VARIABLE               shift, and go to state 141
    '['                      shift, and go to state 80
    '{'                      shift, and go to state 83

    value              go to state 267
    map_literal        go to state 90
    array_literal      go to state 91
    string             go to state 92
    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 96


State 232

  155 opt_num: T_NUM .

    $default  reduce using rule 155 (opt_num)


State 233

  149 break: T_BREAK opt_num . ';'

    ';'  shift, and go to state 268


State 234

  150 continue: T_CONTINUE opt_num . ';'

    ';'  shift, and go to state 269


State 235

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression
  153 optional_bterm: binary_expression .

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_OR           shift, and go to state 121
    T_AND          shift, and go to state 122
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137

    '*'       [reduce using rule 153 (optional_bterm)]
    $default  reduce using rule 153 (optional_bterm)


State 236

  151 return_expression: T_RETURN optional_bterm .

    $default  reduce using rule 151 (return_expression)


State 237

   87 increment_expression: variable_reference T_PLUSPLUS .

    $default  reduce using rule 87 (increment_expression)


State 238

   86 increment_expression: variable_reference T_MINUSMINUS .

    $default  reduce using rule 86 (increment_expression)


State 239

   68 assignment: variable_reference '[' . value ']' assignment_expression

    T_IDENT                  shift, and go to state 266
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_VARIABLE               shift, and go to state 141
    '['                      shift, and go to state 80
    '{'                      shift, and go to state 83

    value              go to state 270
    map_literal        go to state 90
    array_literal      go to state 91
    string             go to state 92
    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 96


State 240

   70 assignment: variable_reference $@6 . shorthand_assignment_operator simple_expression

    T_SH_ASSIGN_PLUS   shift, and go to state 271
    T_SH_ASSIGN_MINUS  shift, and go to state 272
    T_SH_ASSIGN_MULT   shift, and go to state 273
    T_SH_ASSIGN_DIV    shift, and go to state 274
    T_SH_ASSIGN_MOD    shift, and go to state 275

    shorthand_assignment_operator  go to state 276


State 241

   67 assignment: variable_reference assignment_expression .

    $default  reduce using rule 67 (assignment)


State 242

   50 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 50 (var_decls)


State 243

  186 stmntlist: statement $@20 . stmntlist

    error              shift, and go to state 151
    T_FOR              shift, and go to state 152
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 153
    T_FUNC             shift, and go to state 74
    T_IF               shift, and go to state 154
    T_WHILE            shift, and go to state 155
    T_GOTO             shift, and go to state 156
    T_SWITCH           shift, and go to state 157
    T_BREAK            shift, and go to state 158
    T_CONTINUE         shift, and go to state 159
    T_RETURN           shift, and go to state 160
    T_VARIABLE         shift, and go to state 106
    '*'                shift, and go to state 79
    ';'                shift, and go to state 161
    '{'                shift, and go to state 68

    T_CASE     reduce using rule 184 (stmntlist)
    T_DEFAULT  reduce using rule 184 (stmntlist)
    '}'        reduce using rule 184 (stmntlist)

    variable_reference      go to state 162
    var_decl                go to state 277
    block                   go to state 164
    statement               go to state 165
    assignment              go to state 166
    increment_expression    go to state 167
    break                   go to state 168
    continue                go to state 169
    return_expression       go to state 170
    label                   go to state 171
    goto                    go to state 172
    switch_expression       go to state 173
    foreach                 go to state 174
    while                   go to state 175
    if_expression           go to state 176
    stmntlist               go to state 278
    call_expression         go to state 178
    function_id_or_pointer  go to state 94
    type_name               go to state 27


State 244

   53 statement: assignment ';' .

    $default  reduce using rule 53 (statement)


State 245

  177 closing_brace: '}' .

    $default  reduce using rule 177 (closing_brace)


State 246

   48 block: '{' var_decls stmntlist closing_brace .

    $default  reduce using rule 48 (block)


State 247

   52 statement: call_expression ';' .

    $default  reduce using rule 52 (statement)


State 248

  189 call_expression: T_FUNC '(' @21 parameter_list . closing_paren

    ')'  shift, and go to state 279

    closing_paren  go to state 280


State 249

  139 array_elements: array_elements ',' . array_element

    T_NUM        shift, and go to state 181
    T_STRING     shift, and go to state 182
    T_CHARACTER  shift, and go to state 183
    T_TRUE       shift, and go to state 184
    T_FALSE      shift, and go to state 185

    array_element         go to state 281
    simple_array_element  go to state 188


State 250

  138 array_literal: '[' $@10 array_elements ']' .

    $default  reduce using rule 138 (array_literal)


State 251

  133 map_associate: T_STRING T_ASSOC_ARROW . simple_literal
  134              | T_STRING T_ASSOC_ARROW . T_STRING

    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 282
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56

    boolean_literal    go to state 58
    float_literal      go to state 59
    integer_literal    go to state 60
    character_literal  go to state 61
    simple_literal     go to state 283


State 252

  132 map_associates: map_associates ',' . map_associate

    T_STRING  shift, and go to state 191

    map_associate  go to state 284


State 253

  130 map_literal: '{' $@8 map_associates closing_brace .

    $default  reduce using rule 130 (map_literal)


State 254

   83 range_expression: binary_expression T_DOTDOT binary_expression $@7 . range_increment

    T_DOTDOT  shift, and go to state 285

    T_DOTDOT  [reduce using rule 84 (range_increment)]
    $default  reduce using rule 84 (range_increment)

    range_increment  go to state 286


State 255

   93 binary_expression: binary_expression '[' binary_expression_or_range ']' .

    $default  reduce using rule 93 (binary_expression)


State 256

  191 call_expression: function_id_or_pointer '(' @22 parameter_list . closing_paren

    ')'  shift, and go to state 279

    closing_paren  go to state 287


State 257

   40 optional_description: T_STRING .

    $default  reduce using rule 40 (optional_description)


State 258

   35 macrostart: macro_type macro_declaration '(' parameter_list ')' optional_description .

    $default  reduce using rule 35 (macrostart)


State 259

   44 non_empty_pardecl: non_empty_pardecl ',' par_decl .

    $default  reduce using rule 44 (non_empty_pardecl)


State 260

  197 nonempty_parameters: nonempty_parameters ',' parameter .

    $default  reduce using rule 197 (nonempty_parameters)


State 261

  166 in_clause: '(' . type_name variable_identifier $@11 ':' simple_expression ')'

    T_TYPE_IDENTIFIER  shift, and go to state 25

    type_name  go to state 288


State 262

  171 foreach: T_FOR $@13 in_clause . $@14 local_block

    $default  reduce using rule 170 ($@14)

    $@14  go to state 289


State 263

   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression
  121 condition: '(' binary_expression . ')'
  122          | '(' binary_expression .

    T_NMATCH       shift, and go to state 116
    T_NE           shift, and go to state 117
    T_EQ           shift, and go to state 118
    T_SHIFT_LEFT   shift, and go to state 119
    T_SHIFT_RIGHT  shift, and go to state 120
    T_OR           shift, and go to state 121
    T_AND          shift, and go to state 122
    T_LE           shift, and go to state 123
    T_GE           shift, and go to state 124
    T_POWER_TO     shift, and go to state 125
    '&'            shift, and go to state 126
    '|'            shift, and go to state 127
    '^'            shift, and go to state 128
    '~'            shift, and go to state 129
    '<'            shift, and go to state 130
    '>'            shift, and go to state 131
    '+'            shift, and go to state 132
    '-'            shift, and go to state 133
    '*'            shift, and go to state 134
    '/'            shift, and go to state 135
    '%'            shift, and go to state 136
    '['            shift, and go to state 137
    ')'            shift, and go to state 290

    '*'       [reduce using rule 122 (condition)]
    $default  reduce using rule 122 (condition)


State 264

  180 if_expression: T_IF condition $@17 . local_block $@18 else_clause

    error              shift, and go to state 151
    T_FOR              shift, and go to state 152
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 153
    T_FUNC             shift, and go to state 74
    T_IF               shift, and go to state 154
    T_WHILE            shift, and go to state 155
    T_GOTO             shift, and go to state 156
    T_SWITCH           shift, and go to state 157
    T_BREAK            shift, and go to state 158
    T_CONTINUE         shift, and go to state 159
    T_RETURN           shift, and go to state 160
    T_VARIABLE         shift, and go to state 106
    '*'                shift, and go to state 79
    ';'                shift, and go to state 161
    '{'                shift, and go to state 291

    variable_reference      go to state 162
    var_decl                go to state 277
    block                   go to state 164
    statement               go to state 292
    assignment              go to state 166
    increment_expression    go to state 167
    break                   go to state 168
    continue                go to state 169
    return_expression       go to state 170
    label                   go to state 171
    goto                    go to state 172
    switch_expression       go to state 173
    foreach                 go to state 174
    while                   go to state 175
    local_block             go to state 293
    if_expression           go to state 176
    call_expression         go to state 178
    function_id_or_pointer  go to state 94
    type_name               go to state 27


State 265

  174 while: T_WHILE $@15 condition . $@16 local_block

    $default  reduce using rule 173 ($@16)

    $@16  go to state 294


State 266

  128 value: T_IDENT .

    $default  reduce using rule 128 (value)


State 267

  168 switch_expression: T_SWITCH '(' value . ')' $@12 '{' case_clauses '}'

    ')'  shift, and go to state 295


State 268

  149 break: T_BREAK opt_num ';' .

    $default  reduce using rule 149 (break)


State 269

  150 continue: T_CONTINUE opt_num ';' .

    $default  reduce using rule 150 (continue)


State 270

   68 assignment: variable_reference '[' value . ']' assignment_expression

    ']'  shift, and go to state 296


State 271

   74 shorthand_assignment_operator: T_SH_ASSIGN_PLUS .

    $default  reduce using rule 74 (shorthand_assignment_operator)


State 272

   75 shorthand_assignment_operator: T_SH_ASSIGN_MINUS .

    $default  reduce using rule 75 (shorthand_assignment_operator)


State 273

   71 shorthand_assignment_operator: T_SH_ASSIGN_MULT .

    $default  reduce using rule 71 (shorthand_assignment_operator)


State 274

   72 shorthand_assignment_operator: T_SH_ASSIGN_DIV .

    $default  reduce using rule 72 (shorthand_assignment_operator)


State 275

   73 shorthand_assignment_operator: T_SH_ASSIGN_MOD .

    $default  reduce using rule 73 (shorthand_assignment_operator)


State 276

   70 assignment: variable_reference $@6 shorthand_assignment_operator . simple_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    ';'  reduce using rule 81 (range_expression)

    variable_reference      go to state 84
    simple_expression       go to state 297
    range_expression        go to state 86
    s_bterm                 go to state 87
    binary_expression       go to state 88
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 277

   65 statement: var_decl .

    $default  reduce using rule 65 (statement)


State 278

  186 stmntlist: statement $@20 stmntlist .

    $default  reduce using rule 186 (stmntlist)


State 279

  187 closing_paren: ')' .

    $default  reduce using rule 187 (closing_paren)


State 280

  189 call_expression: T_FUNC '(' @21 parameter_list closing_paren .

    $default  reduce using rule 189 (call_expression)


State 281

  139 array_elements: array_elements ',' array_element .

    $default  reduce using rule 139 (array_elements)


State 282

  134 map_associate: T_STRING T_ASSOC_ARROW T_STRING .

    $default  reduce using rule 134 (map_associate)


State 283

  133 map_associate: T_STRING T_ASSOC_ARROW simple_literal .

    $default  reduce using rule 133 (map_associate)


State 284

  132 map_associates: map_associates ',' map_associate .

    $default  reduce using rule 132 (map_associates)


State 285

   85 range_increment: T_DOTDOT . binary_expression

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    variable_reference      go to state 84
    s_bterm                 go to state 87
    binary_expression       go to state 298
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 286

   83 range_expression: binary_expression T_DOTDOT binary_expression $@7 range_increment .

    $default  reduce using rule 83 (range_expression)


State 287

  191 call_expression: function_id_or_pointer '(' @22 parameter_list closing_paren .

    $default  reduce using rule 191 (call_expression)


State 288

  166 in_clause: '(' type_name . variable_identifier $@11 ':' simple_expression ')'

    T_IDENT   shift, and go to state 31
    T_NUM     shift, and go to state 32
    T_STRING  shift, and go to state 33

    variable_identifier  go to state 299


State 289

  171 foreach: T_FOR $@13 in_clause $@14 . local_block

    error              shift, and go to state 151
    T_FOR              shift, and go to state 152
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 153
    T_FUNC             shift, and go to state 74
    T_IF               shift, and go to state 154
    T_WHILE            shift, and go to state 155
    T_GOTO             shift, and go to state 156
    T_SWITCH           shift, and go to state 157
    T_BREAK            shift, and go to state 158
    T_CONTINUE         shift, and go to state 159
    T_RETURN           shift, and go to state 160
    T_VARIABLE         shift, and go to state 106
    '*'                shift, and go to state 79
    ';'                shift, and go to state 161
    '{'                shift, and go to state 291

    variable_reference      go to state 162
    var_decl                go to state 277
    block                   go to state 164
    statement               go to state 292
    assignment              go to state 166
    increment_expression    go to state 167
    break                   go to state 168
    continue                go to state 169
    return_expression       go to state 170
    label                   go to state 171
    goto                    go to state 172
    switch_expression       go to state 173
    foreach                 go to state 174
    while                   go to state 175
    local_block             go to state 300
    if_expression           go to state 176
    call_expression         go to state 178
    function_id_or_pointer  go to state 94
    type_name               go to state 27


State 290

  121 condition: '(' binary_expression ')' .

    $default  reduce using rule 121 (condition)


State 291

   48 block: '{' . var_decls stmntlist closing_brace
  176 local_block: '{' . stmntlist closing_brace

    error              shift, and go to state 151
    T_FOR              shift, and go to state 152
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 153
    T_FUNC             shift, and go to state 74
    T_IF               shift, and go to state 154
    T_WHILE            shift, and go to state 155
    T_GOTO             shift, and go to state 156
    T_SWITCH           shift, and go to state 157
    T_BREAK            shift, and go to state 158
    T_CONTINUE         shift, and go to state 159
    T_RETURN           shift, and go to state 160
    T_VARIABLE         shift, and go to state 106
    '*'                shift, and go to state 79
    ';'                shift, and go to state 161
    '{'                shift, and go to state 68

    error              [reduce using rule 49 (var_decls)]
    T_FOR              [reduce using rule 49 (var_decls)]
    T_TYPE_IDENTIFIER  [reduce using rule 49 (var_decls)]
    T_IDENT            [reduce using rule 49 (var_decls)]
    T_FUNC             [reduce using rule 49 (var_decls)]
    T_IF               [reduce using rule 49 (var_decls)]
    T_WHILE            [reduce using rule 49 (var_decls)]
    T_GOTO             [reduce using rule 49 (var_decls)]
    T_SWITCH           [reduce using rule 49 (var_decls)]
    T_BREAK            [reduce using rule 49 (var_decls)]
    T_CONTINUE         [reduce using rule 49 (var_decls)]
    T_RETURN           [reduce using rule 49 (var_decls)]
    T_VARIABLE         [reduce using rule 49 (var_decls)]
    '*'                [reduce using rule 49 (var_decls)]
    ';'                [reduce using rule 49 (var_decls)]
    '{'                [reduce using rule 49 (var_decls)]
    '}'                reduce using rule 49 (var_decls)
    '}'                [reduce using rule 184 (stmntlist)]

    variable_reference      go to state 162
    var_decl                go to state 277
    block                   go to state 164
    var_decls               go to state 99
    statement               go to state 165
    assignment              go to state 166
    increment_expression    go to state 167
    break                   go to state 168
    continue                go to state 169
    return_expression       go to state 170
    label                   go to state 171
    goto                    go to state 172
    switch_expression       go to state 173
    foreach                 go to state 174
    while                   go to state 175
    if_expression           go to state 176
    stmntlist               go to state 301
    call_expression         go to state 178
    function_id_or_pointer  go to state 94
    type_name               go to state 27


State 292

  175 local_block: statement .

    $default  reduce using rule 175 (local_block)


State 293

  180 if_expression: T_IF condition $@17 local_block . $@18 else_clause

    $default  reduce using rule 179 ($@18)

    $@18  go to state 302


State 294

  174 while: T_WHILE $@15 condition $@16 . local_block

    error              shift, and go to state 151
    T_FOR              shift, and go to state 152
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 153
    T_FUNC             shift, and go to state 74
    T_IF               shift, and go to state 154
    T_WHILE            shift, and go to state 155
    T_GOTO             shift, and go to state 156
    T_SWITCH           shift, and go to state 157
    T_BREAK            shift, and go to state 158
    T_CONTINUE         shift, and go to state 159
    T_RETURN           shift, and go to state 160
    T_VARIABLE         shift, and go to state 106
    '*'                shift, and go to state 79
    ';'                shift, and go to state 161
    '{'                shift, and go to state 291

    variable_reference      go to state 162
    var_decl                go to state 277
    block                   go to state 164
    statement               go to state 292
    assignment              go to state 166
    increment_expression    go to state 167
    break                   go to state 168
    continue                go to state 169
    return_expression       go to state 170
    label                   go to state 171
    goto                    go to state 172
    switch_expression       go to state 173
    foreach                 go to state 174
    while                   go to state 175
    local_block             go to state 303
    if_expression           go to state 176
    call_expression         go to state 178
    function_id_or_pointer  go to state 94
    type_name               go to state 27


State 295

  168 switch_expression: T_SWITCH '(' value ')' . $@12 '{' case_clauses '}'

    $default  reduce using rule 167 ($@12)

    $@12  go to state 304


State 296

   68 assignment: variable_reference '[' value ']' . assignment_expression

    T_ASSIGN  shift, and go to state 49

    assignment_expression  go to state 305


State 297

   70 assignment: variable_reference $@6 shorthand_assignment_operator simple_expression .

    $default  reduce using rule 70 (assignment)


State 298

   85 range_increment: T_DOTDOT binary_expression .
   93 binary_expression: binary_expression . '[' binary_expression_or_range ']'
   98                  | binary_expression . '~' binary_expression
   99                  | binary_expression . T_NMATCH binary_expression
  100                  | binary_expression . '&' binary_expression
  101                  | binary_expression . '|' binary_expression
  102                  | binary_expression . '+' binary_expression
  103                  | binary_expression . '^' binary_expression
  104                  | binary_expression . '-' binary_expression
  105                  | binary_expression . '*' binary_expression
  106                  | binary_expression . '/' binary_expression
  107                  | binary_expression . '%' binary_expression
  108                  | binary_expression . T_SHIFT_LEFT binary_expression
  109                  | binary_expression . T_SHIFT_RIGHT binary_expression
  110                  | binary_expression . T_POWER_TO binary_expression
  111                  | binary_expression . T_AND binary_expression
  112                  | binary_expression . T_OR binary_expression
  113                  | binary_expression . '<' binary_expression
  114                  | binary_expression . '>' binary_expression
  115                  | binary_expression . T_LE binary_expression
  116                  | binary_expression . T_GE binary_expression
  117                  | binary_expression . T_EQ binary_expression
  118                  | binary_expression . T_NE binary_expression

    $default  reduce using rule 85 (range_increment)


State 299

  166 in_clause: '(' type_name variable_identifier . $@11 ':' simple_expression ')'

    $default  reduce using rule 165 ($@11)

    $@11  go to state 306


State 300

  171 foreach: T_FOR $@13 in_clause $@14 local_block .

    $default  reduce using rule 171 (foreach)


State 301

  176 local_block: '{' stmntlist . closing_brace

    '}'  shift, and go to state 245

    closing_brace  go to state 307


State 302

  180 if_expression: T_IF condition $@17 local_block $@18 . else_clause

    T_ELSE  shift, and go to state 308

    T_ELSE    [reduce using rule 181 (else_clause)]
    $default  reduce using rule 181 (else_clause)

    else_clause  go to state 309


State 303

  174 while: T_WHILE $@15 condition $@16 local_block .

    $default  reduce using rule 174 (while)


State 304

  168 switch_expression: T_SWITCH '(' value ')' $@12 . '{' case_clauses '}'

    '{'  shift, and go to state 310


State 305

   68 assignment: variable_reference '[' value ']' assignment_expression .

    $default  reduce using rule 68 (assignment)


State 306

  166 in_clause: '(' type_name variable_identifier $@11 . ':' simple_expression ')'

    ':'  shift, and go to state 311


State 307

  176 local_block: '{' stmntlist closing_brace .

    $default  reduce using rule 176 (local_block)


State 308

  183 else_clause: T_ELSE . $@19 local_block

    $default  reduce using rule 182 ($@19)

    $@19  go to state 312


State 309

  180 if_expression: T_IF condition $@17 local_block $@18 else_clause .

    $default  reduce using rule 180 (if_expression)


State 310

  168 switch_expression: T_SWITCH '(' value ')' $@12 '{' . case_clauses '}'

    T_CASE     shift, and go to state 313
    T_DEFAULT  shift, and go to state 314

    $default  reduce using rule 156 (case_clauses)

    case_clauses   go to state 315
    case_clause    go to state 316
    case_selector  go to state 317


State 311

  166 in_clause: '(' type_name variable_identifier $@11 ':' . simple_expression ')'

    error                    shift, and go to state 71
    T_IDENT                  shift, and go to state 72
    T_NUM                    shift, and go to state 51
    T_FLOATING_POINT_NUMBER  shift, and go to state 52
    T_STRING                 shift, and go to state 73
    T_CHARACTER              shift, and go to state 54
    T_TRUE                   shift, and go to state 55
    T_FALSE                  shift, and go to state 56
    T_FUNC                   shift, and go to state 74
    T_VARIABLE               shift, and go to state 75
    '~'                      shift, and go to state 76
    '+'                      shift, and go to state 77
    '-'                      shift, and go to state 78
    '*'                      shift, and go to state 79
    '['                      shift, and go to state 80
    '!'                      shift, and go to state 81
    '('                      shift, and go to state 82
    '{'                      shift, and go to state 83

    ')'  reduce using rule 81 (range_expression)

    variable_reference      go to state 84
    simple_expression       go to state 318
    range_expression        go to state 86
    s_bterm                 go to state 87
    binary_expression       go to state 88
    value                   go to state 89
    map_literal             go to state 90
    array_literal           go to state 91
    string                  go to state 92
    call_expression         go to state 93
    function_id_or_pointer  go to state 94
    type_cast               go to state 95
    boolean_literal         go to state 58
    float_literal           go to state 59
    integer_literal         go to state 60
    character_literal       go to state 61
    simple_literal          go to state 96


State 312

  183 else_clause: T_ELSE $@19 . local_block

    error              shift, and go to state 151
    T_FOR              shift, and go to state 152
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 153
    T_FUNC             shift, and go to state 74
    T_IF               shift, and go to state 154
    T_WHILE            shift, and go to state 155
    T_GOTO             shift, and go to state 156
    T_SWITCH           shift, and go to state 157
    T_BREAK            shift, and go to state 158
    T_CONTINUE         shift, and go to state 159
    T_RETURN           shift, and go to state 160
    T_VARIABLE         shift, and go to state 106
    '*'                shift, and go to state 79
    ';'                shift, and go to state 161
    '{'                shift, and go to state 291

    variable_reference      go to state 162
    var_decl                go to state 277
    block                   go to state 164
    statement               go to state 292
    assignment              go to state 166
    increment_expression    go to state 167
    break                   go to state 168
    continue                go to state 169
    return_expression       go to state 170
    label                   go to state 171
    goto                    go to state 172
    switch_expression       go to state 173
    foreach                 go to state 174
    while                   go to state 175
    local_block             go to state 319
    if_expression           go to state 176
    call_expression         go to state 178
    function_id_or_pointer  go to state 94
    type_name               go to state 27


State 313

  159 case_selector: T_CASE . case_condition ':'

    T_NUM     shift, and go to state 320
    T_STRING  shift, and go to state 321

    case_condition  go to state 322


State 314

  160 case_selector: T_DEFAULT . ':'

    ':'  shift, and go to state 323


State 315

  168 switch_expression: T_SWITCH '(' value ')' $@12 '{' case_clauses . '}'

    '}'  shift, and go to state 324


State 316

  157 case_clauses: case_clause . case_clauses

    T_CASE     shift, and go to state 313
    T_DEFAULT  shift, and go to state 314

    $default  reduce using rule 156 (case_clauses)

    case_clauses   go to state 325
    case_clause    go to state 316
    case_selector  go to state 317


State 317

  158 case_clause: case_selector . stmntlist

    error              shift, and go to state 151
    T_FOR              shift, and go to state 152
    T_TYPE_IDENTIFIER  shift, and go to state 25
    T_IDENT            shift, and go to state 153
    T_FUNC             shift, and go to state 74
    T_IF               shift, and go to state 154
    T_WHILE            shift, and go to state 155
    T_GOTO             shift, and go to state 156
    T_SWITCH           shift, and go to state 157
    T_BREAK            shift, and go to state 158
    T_CONTINUE         shift, and go to state 159
    T_RETURN           shift, and go to state 160
    T_VARIABLE         shift, and go to state 106
    '*'                shift, and go to state 79
    ';'                shift, and go to state 161
    '{'                shift, and go to state 68

    T_CASE     reduce using rule 184 (stmntlist)
    T_DEFAULT  reduce using rule 184 (stmntlist)
    '}'        reduce using rule 184 (stmntlist)

    variable_reference      go to state 162
    var_decl                go to state 277
    block                   go to state 164
    statement               go to state 165
    assignment              go to state 166
    increment_expression    go to state 167
    break                   go to state 168
    continue                go to state 169
    return_expression       go to state 170
    label                   go to state 171
    goto                    go to state 172
    switch_expression       go to state 173
    foreach                 go to state 174
    while                   go to state 175
    if_expression           go to state 176
    stmntlist               go to state 326
    call_expression         go to state 178
    function_id_or_pointer  go to state 94
    type_name               go to state 27


State 318

  166 in_clause: '(' type_name variable_identifier $@11 ':' simple_expression . ')'

    ')'  shift, and go to state 327


State 319

  183 else_clause: T_ELSE $@19 local_block .

    $default  reduce using rule 183 (else_clause)


State 320

  161 case_condition: T_NUM .

    $default  reduce using rule 161 (case_condition)


State 321

  162 case_condition: T_STRING .

    $default  reduce using rule 162 (case_condition)


State 322

  159 case_selector: T_CASE case_condition . ':'

    ':'  shift, and go to state 328


State 323

  160 case_selector: T_DEFAULT ':' .

    $default  reduce using rule 160 (case_selector)


State 324

  168 switch_expression: T_SWITCH '(' value ')' $@12 '{' case_clauses '}' .

    $default  reduce using rule 168 (switch_expression)


State 325

  157 case_clauses: case_clause case_clauses .

    $default  reduce using rule 157 (case_clauses)


State 326

  158 case_clause: case_selector stmntlist .

    $default  reduce using rule 158 (case_clause)


State 327

  166 in_clause: '(' type_name variable_identifier $@11 ':' simple_expression ')' .

    $default  reduce using rule 166 (in_clause)


State 328

  159 case_selector: T_CASE case_condition ':' .

    $default  reduce using rule 159 (case_selector)
