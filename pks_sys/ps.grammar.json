{
  "grammars": [
    {
      "scopeName": "ps",
      "wordCharacterClass": "a-zäöü=A-ZÄÖÜß_0-9-",
      "tagSources": [
        {
          "filename": "https://docs.microsoft.com/en-us/search/?terms=$1&category=Reference&scope=PowerShell",
          "type": "url"
        }
      ],
      "templates": [
      ],
      "evaluationCommand": {
        "commandLine": "powershell -noprofile -noninteractive -",
        "input": "stdin"
      },
      "highlightBrackets": [
        {
          "left": "{",
          "right": "}"
        },
        {
          "left": "(",
          "right": ")"
        },
        {
          "left": "[",
          "right": "]"
        }
      ],
      "patterns": [
        {
          "begin": "<#",
          "end": "#>",
          "style": "comment",
          "name": "comment.multiLine"
        },
        {
          "match": "#.*",
          "style": "single-line-comment",
          "name": "comment.singleLine"
        },
        {
          "match": "<[A-Z][a-zA-Z_]*-[A-Z][a-zA-Z_0-9]*>",
          "style": "identifier",
          "name": "identifier"
        },
        {
          "match": "'(?:[^']|\\')+?'",
          "style": "string",
          "name": "string"
        },
        {
          "match": "<\\$[a-zA-Z_][a-zA-Z_0-9]*>",
          "style": "constant",
          "name": "constant.variable"
        },
        {
          "match": "-<[a-zA-Z_]+>",
          "style": "italic",
          "name": "constant.parameter"
        },
        {
          "keywords": [
            "try",
            "catch",
            "finally",
            "do",
            "while",
            "until",
            "if",
            "else",
            "elif",
            "enum",
            "begin",
            "break",
            "define",
            "class",
            "end",
            "exit",
            "filter",
            "from",
            "function",
            "hidden"
          ],
          "style": "keyword",
          "name": "keyword.cpp"
        },
        {
          "match": "<[-+]?[0-9.]+([xX][a-fA-F0-9]+|b[01]+|e[-+0-9]+)?>",
          "style": "literal",
          "name": "literal.numeric"
        },
        {
          "match": "[-+&|<>=]{1,2}",
          "style": "operator",
          "name": "keyword.operator"
        }
      ]
    }
  ]
}
